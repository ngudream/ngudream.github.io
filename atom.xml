<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>移动开发 | ngudream</title>
  <subtitle>Coding Changes the World</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://ngudream.com/"/>
  <updated>2018-02-10T14:59:21.386Z</updated>
  <id>http://ngudream.com/</id>
  
  <author>
    <name>ngudream</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Kotlin 遇到 RxJava</title>
    <link href="http://ngudream.com/2017/09/12/kotlin-rxjava/"/>
    <id>http://ngudream.com/2017/09/12/kotlin-rxjava/</id>
    <published>2017-09-12T14:38:18.000Z</published>
    <updated>2018-02-10T14:59:21.386Z</updated>
    
    <content type="html"><![CDATA[<p>RxJava &#x4EE3;&#x7801;&#x7B80;&#x6D01;&#x6613;&#x8BFB;&#xFF0C;&#x5B83;&#x5185;&#x90E8;&#x652F;&#x6301;&#x591A;&#x7EBF;&#x7A0B;&#x64CD;&#x4F5C;&#xFF0C;&#x8FD8;&#x63D0;&#x4F9B;&#x4E30;&#x5BCC;&#x7684;&#x64CD;&#x4F5C;&#x7B26;&#x3002;&#x6BD4;&#x5982;&#x5F3A;&#x5927;&#x7684;map&#x548C;flatmap&#x64CD;&#x4F5C;&#x7B26;&#xFF0C;&#x53EF;&#x4EE5;&#x8BA9;&#x6211;&#x4EEC;&#x4F9D;&#x8D56;&#x4E0A;&#x4E00;&#x6B21;&#x63A5;&#x53E3;&#x6570;&#x636E;&#x7684;&#x4E1A;&#x52A1;&#x8FDB;&#x884C;&#x4E8C;&#x6B21;&#x5904;&#x7406;&#x65F6;&#x4E0D;&#x4F1A;&#x53D1;&#x751F;&#x5D4C;&#x5957;&#x3002;&#x518D;&#x52A0;&#x4E0A;Java1.8&#x548C;&#x7B2C;&#x4E09;&#x65B9;&#x6846;&#x67B6;&#x652F;&#x6301;Lambda&#x6D41;&#x5F0F;&#xFF0C;&#x4F1A;&#x4F7F;RxJava&#x7684;&#x4EE3;&#x7801;&#x5199;&#x8D77;&#x6765;&#x66F4;&#x52A0;&#x7B80;&#x6D01;&#x3002;&#x4E0B;&#x9762;&#x5C06;&#x914D;&#x5408;Kotlin&#xFF0C;&#x5C06;RxJava&#x4EE3;&#x7801;&#x5199;&#x5F97;&#x66F4;&#x52A0;&#x7B80;&#x5355;&#x3001;&#x4F18;&#x96C5;&#x3002;</p>
<div align="center">
<img data-original="/2017/09/12/kotlin-rxjava/rxjava.png" class="lazy">
</div>
<h2 id="&#x521B;&#x5EFA;-obsevable"><a class="header-anchor" href="#&#x521B;&#x5EFA;-obsevable"></a>&#x521B;&#x5EFA; Obsevable</h2>
<p>RxJava2 &#x7684;&#x5199;&#x6CD5;&#xFF1A;</p>
<pre><code>Observable&lt;String&gt; observable = Observable.create(new ObservableOnSubscribe&lt;String&gt;() {
            @Override
            public void subscribe(@NonNull ObservableEmitter&lt;String&gt; emitter) throws Exception {
                emitter.onNext(&quot;hello world&quot;);
            }
        });

</code></pre>
<p>&#x7ED3;&#x5408; Kotlin &#x7684;&#x5199;&#x6CD5;&#xFF1A;</p>
<pre><code>Observable.create(ObservableOnSubscribe&lt;String&gt;
            { emitter -&gt; emitter.onNext(fetchFromServer()) });
</code></pre>
<h2 id="&#x7EBF;&#x7A0B;&#x5207;&#x6362;"><a class="header-anchor" href="#&#x7EBF;&#x7A0B;&#x5207;&#x6362;"></a>&#x7EBF;&#x7A0B;&#x5207;&#x6362;</h2>
<p>RxJava2 &#x7684;&#x5199;&#x6CD5;&#xFF1A;</p>
<pre><code>Observable.create(new ObservableOnSubscribe&lt;String&gt;() {
            @Override
            public void subscribe(@NonNull ObservableEmitter&lt;String&gt; emitter) throws Exception {
                emitter.onNext(&quot;hello world&quot;);
            }
        })
                .subscribeOn(Schedulers.io())
                .observeOn(AndroidSchedulers.mainThread())
                .subscribe(new Consumer&lt;String&gt;() {
                    @Override
                    public void accept(String value) {
                        Log.d(TAG, &quot;result = &quot; + value);
                    }
                }, new Consumer&lt;Throwable&gt;() {
                    @Override
                    public void accept(Throwable throwable) {

                    }
                });

</code></pre>
<p>&#x7ED3;&#x5408; Kotlin &#x7684;&#x5199;&#x6CD5;&#xFF1A;</p>
<pre><code>Observable.create(ObservableOnSubscribe&lt;String&gt;
                { emitter -&gt; emitter.onNext(&quot;hello world&quot;) })
                .subscribeOn(Schedulers.io())
                .observeOn(AndroidSchedulers.mainThread())
                .subscribe{ result -&gt;  Log.d(TAG, &quot;result = &quot; + result) }
</code></pre>
<h2 id="&#x9519;&#x8BEF;&#x5904;&#x7406;"><a class="header-anchor" href="#&#x9519;&#x8BEF;&#x5904;&#x7406;"></a>&#x9519;&#x8BEF;&#x5904;&#x7406;</h2>
<p>RxJava2 &#x7684;&#x5199;&#x6CD5;&#xFF1A;</p>
<pre><code>Observable.create(new ObservableOnSubscribe&lt;String&gt;() {
            @Override
            public void subscribe(@NonNull ObservableEmitter&lt;String&gt; emitter) {
                try{
                    emitter.onNext(&quot;hello world&quot;);
                    emitter.onComplete();
                } catch (Exception e){
                    emitter.onError(e);
                }
            }
        })
                .subscribeOn(Schedulers.io())
                .observeOn(AndroidSchedulers.mainThread())
                .subscribe(new Consumer&lt;String&gt;() {
                    @Override
                    public void accept(String value) {
                        Log.d(TAG, &quot;result = &quot; + value);
                    }
                }, new Consumer&lt;Throwable&gt;() {
                    @Override
                    public void accept(Throwable throwable) {
                        Log.d(TAG, &quot;error = &quot; + throwable.getMessage());
                    }
                });

</code></pre>
<p>&#x7ED3;&#x5408; Kotlin &#x7684;&#x5199;&#x6CD5;&#xFF1A;</p>
<pre><code>Observable.create(ObservableOnSubscribe&lt;String&gt;
        { emitter -&gt;
            try {
                emitter.onNext(&quot;hello world&quot;)
                emitter.onComplete()
            } catch (error: Exception) {
                emitter.onError(error)
            }
        })
                .subscribe(
                        { result -&gt; Log.d(TAG, &quot;result = &quot; + result) },
                        { error -&gt; Log.e(TAG, &quot;{$error.message}&quot;) },
                        { Log.d(TAG, &quot;completed&quot;) }
                )
</code></pre>
<h2 id="&#x64CD;&#x4F5C;&#x7B26;"><a class="header-anchor" href="#&#x64CD;&#x4F5C;&#x7B26;"></a>&#x64CD;&#x4F5C;&#x7B26;</h2>
<h3 id="map"><a class="header-anchor" href="#map"></a>map</h3>
<p>RxJava2 &#x7684;&#x5199;&#x6CD5;&#xFF1A;</p>
<pre><code>Observable.create(new ObservableOnSubscribe&lt;Integer&gt;() {
            @Override
            public void subscribe(@NonNull ObservableEmitter&lt;Integer&gt; e) throws Exception {
                e.onNext(1);
            }
        }).map(new Function&lt;Integer, String&gt;() {
            @Override
            public String apply(@NonNull Integer integer) throws Exception {
                return &quot;This is result &quot; + integer;
            }
        }).subscribe(new Consumer&lt;String&gt;() {
            @Override
            public void accept(@NonNull String s) throws Exception {
                Log.e(TAG, &quot;accept : &quot; + s +&quot;\n&quot; );
            }
        });
</code></pre>
<p>&#x7ED3;&#x5408; Kotlin &#x7684;&#x5199;&#x6CD5;&#xFF1A;</p>
<pre><code>Observable
                .just(&quot;apple&quot;, &quot;orange&quot;, &quot;mango&quot;)
                .map { fruit -&gt; &quot;eats $fruit&quot; }
                .subscribe{ dilicous -&gt; Log.d(TAG, &quot;Ethan $dilicous&quot;) }
</code></pre>
<h3 id="flatmap"><a class="header-anchor" href="#flatmap"></a>flatmap</h3>
<p>RxJava2 &#x7684;&#x5199;&#x6CD5;&#xFF1A;</p>
<pre><code>String url = &quot;https://www.baidu.com&quot;;
        Observable.just(url)
                .subscribeOn(Schedulers.io())
                .flatMap(new Function&lt;String, Observable&lt;Response&gt;&gt;() {

                    @Override
                    public Observable&lt;Response&gt; apply(@NonNull String url) throws Exception {
                        //&#x4F7F;&#x7528;okhttp3&#x8BBF;&#x95EE;&#x7F51;&#x7EDC;
                        Request.Builder builder = new Request.Builder();
                        Request request = builder.url(url).get().build();
                        OkHttpClient client = new OkHttpClient.Builder().build();
                        Response response = client.newCall(request).execute();
                        return Observable.from(response);
                    }
                })
                .doOnNext(new Consumer&lt;Response&gt;() {
                    @Override
                    public void accept(Response response) throws Exception {
                        //&#x4FDD;&#x5B58;&#x6570;&#x636E;&#x5E93;
                    }
                })
                .observeOn(AndroidSchedulers.mainThread())
                .subscribe(new Consumer&lt;Response&gt;() {
                    @Override
                    public void accept(Response response) throws Exception {
                        ResponseBody responseBody = response.body();
                        String result = responseBody.toString();
                    }
                });
</code></pre>
<p>&#x7ED3;&#x5408; Kotlin &#x7684;&#x5199;&#x6CD5;&#xFF1A;</p>
<pre><code>val url = &quot;https://www.baidu.com&quot;
Observable.just(url)
        .flatMap({ value -&gt;
            //&#x4F7F;&#x7528;okhttp3&#x8BBF;&#x95EE;&#x7F51;&#x7EDC;
            val builder = Request.Builder()
            val request = builder.url(value).get().build()
            val client = OkHttpClient.Builder().build()
            val response = client.newCall(request).execute()
            val responseBody = response.body()
            val result = responseBody?.string()
            return@flatMap Observable.from(result)
        })
        .subscribe({ result -&gt;
            Log.d(TAG, result)
        }, { error -&gt;
            Toast.makeText(this, error.message, Toast.LENGTH_SHORT).show()
        })
</code></pre>
<h3 id="merge"><a class="header-anchor" href="#merge"></a>merge</h3>
<p>RxJava2 &#x7684;&#x5199;&#x6CD5;&#xFF1A;</p>
<pre><code>final String[] aStrings = {&quot;A1&quot;, &quot;A2&quot;, &quot;A3&quot;, &quot;A4&quot;};
        final String[] bStrings = {&quot;B1&quot;, &quot;B2&quot;, &quot;B3&quot;};

        final Observable&lt;String&gt; aObservable = Observable.fromArray(aStrings);
        final Observable&lt;String&gt; bObservable = Observable.fromArray(bStrings);

        Observable.merge(aObservable, bObservable)
                .subscribe(new Consumer&lt;String&gt;() {
                    @Override
                    public void accept(String s) throws Exception {
                        Log.d(TAG, &quot;result = &quot; + s);
                    }
                });
</code></pre>
<p>&#x7ED3;&#x5408; Kotlin &#x7684;&#x5199;&#x6CD5;&#xFF1A;</p>
<pre><code>val aStrings = arrayOf(&quot;A1&quot;, &quot;A2&quot;, &quot;A3&quot;, &quot;A4&quot;)
        val bStrings = arrayOf(&quot;B1&quot;, &quot;B2&quot;, &quot;B3&quot;)

        val aObservable = Observable.fromArray(*aStrings)
        val bObservable = Observable.fromArray(*bStrings)

        Observable.merge(aObservable, bObservable)
                .subscribe{value -&gt; Log.d(TAG, &quot;result = &quot; + value)}
</code></pre>
<h3 id="zip"><a class="header-anchor" href="#zip"></a>zip</h3>
<p>RxJava2 &#x7684;&#x5199;&#x6CD5;&#xFF1A;</p>
<pre><code>private Observable&lt;String&gt; getStrObservable() {
        return Observable.create(new ObservableOnSubscribe&lt;String&gt;() {
            @Override
            public void subscribe(@NonNull ObservableEmitter&lt;String&gt; e) throws Exception {
                if (!e.isDisposed()) {
                    e.onNext(&quot;A&quot;);
                    e.onNext(&quot;B&quot;);
                    e.onNext(&quot;C&quot;);
                }
            }
        });
    }

    private Observable&lt;Integer&gt; getIntObservable() {
        return Observable.create(new ObservableOnSubscribe&lt;Integer&gt;() {
            @Override
            public void subscribe(@NonNull ObservableEmitter&lt;Integer&gt; e) throws Exception {
                if (!e.isDisposed()) {
                    e.onNext(1);
                    e.onNext(2);
                    e.onNext(3);
                    e.onNext(4);
                    e.onNext(5);
                }
            }
        });
    }

    private void test() {
        Observable.zip(getStrObservable(), getIntObservable(), new BiFunction&lt;String, Integer, String&gt;() {
            @Override
            public String apply(@NonNull String s, @NonNull Integer integer) throws Exception {
                return s + integer;
            }
        }).subscribe(new Consumer&lt;String&gt;() {
            @Override
            public void accept(@NonNull String result) throws Exception {
                Log.d(TAG, &quot;result &quot; + result + &quot;\n&quot;);
            }
        });
    }
</code></pre>
<p>&#x7ED3;&#x5408; Kotlin &#x7684;&#x5199;&#x6CD5;&#xFF1A;</p>
<pre><code>private fun getStrObservable(): Observable&lt;String&gt; {
        return Observable.create { e -&gt;
            if (!e.isDisposed) {
                e.onNext(&quot;A&quot;)
                e.onNext(&quot;B&quot;)
                e.onNext(&quot;C&quot;)
            }
        }
    }

    private fun getIntObservable(): Observable&lt;Int&gt; {
        return Observable.create { e -&gt;
            if (!e.isDisposed) {
                e.onNext(1)
                e.onNext(2)
                e.onNext(3)
                e.onNext(4)
                e.onNext(5)
            }
        }
    }

    fun test() {
        Observable.zip(getStrObservable(), getIntObservable(), BiFunction&lt;String, Int, String&gt; {
                strValue, intValue -&gt; strValue + intValue
        }).subscribe { result -&gt; Log.d(TAG, &quot;result &quot; + result + &quot;\n&quot;) }
    }
</code></pre>
<h3 id="zipwith"><a class="header-anchor" href="#zipwith"></a>zipWith</h3>
<p>RxJava2 &#x7684;&#x5199;&#x6CD5;&#xFF1A;</p>
<pre><code>private Observable&lt;String&gt; getStringObservable() {
        return Observable.create(new ObservableOnSubscribe&lt;String&gt;() {
            @Override
            public void subscribe(@NonNull ObservableEmitter&lt;String&gt; e) throws Exception {
                if (!e.isDisposed()) {
                    e.onNext(&quot;Test&quot;);
                }
            }
        });
    }

    private class SomeClass {
        private String result;
        private int first, second;

        public SomeClass(int a, int b) {
            first = a;
            second = b;
        }

        public void setResult(String value) {
            result = value + (first + second);
        }

        public String getResult(){
            return result;
        }
    }

    List&lt;SomeClass&gt; list = new ArrayList&lt;&gt;();
            list.add(new SomeClass(1, 2));
            list.add(new SomeClass(3, 4));
            Observable
                    .fromIterable(list)
                    .zipWith(getStringObservable(), new BiFunction&lt;SomeClass, String, SomeClass&gt;() {
                        @Override
                        public SomeClass apply(@NonNull SomeClass someClass, @NonNull String s) throws Exception {
                            someClass.setResult(s);
                            return someClass;
                        }
                    })
                    .subscribe(new Consumer&lt;SomeClass&gt;() {
                        @Override
                        public void accept(SomeClass result) throws Exception {
                            Log.d(TAG, &quot;result = &quot; + result.getResult());
                        }
                    });

</code></pre>
<p>&#x7ED3;&#x5408; Kotlin &#x7684;&#x5199;&#x6CD5;&#xFF1A;</p>
<pre><code>private fun getStringObservable(): Observable&lt;String&gt; {
        return Observable.create { e -&gt;
            if (!e.isDisposed) {
                e.onNext(&quot;Test&quot;)
            }
        }
    }

    private inner class SomeClass(private val first: Int, private val second: Int) {
        var result: String? = null
            set(value) {
                field = value + (first + second)
            }
            get()=field
    }

    val list = listOf(SomeClass(1, 2), SomeClass(3, 4))
        Observable
                .fromIterable(list)
                .zipWith(getStringObservable(), BiFunction&lt;SomeClass, String, SomeClass&gt; { someClass, s -&gt;
                    someClass.result = s
                    someClass
                })
                .subscribe { result -&gt; Log.d(TAG, &quot;result = &quot; + result.result) }
</code></pre>
<h3 id="concat"><a class="header-anchor" href="#concat"></a>concat</h3>
<p>RxJava2 &#x7684;&#x5199;&#x6CD5;&#xFF1A;</p>
<pre><code>Observable.concat(Observable.just(1,2,3), Observable.just(4,5,6))
                .subscribe(new Consumer&lt;Integer&gt;() {
                    @Override
                    public void accept(@NonNull Integer integer) throws Exception {
                        Log.d(TAG, &quot;concat : &quot;+ integer + &quot;\n&quot; );
                    }
                });
</code></pre>
<p>&#x7ED3;&#x5408; Kotlin &#x7684;&#x5199;&#x6CD5;&#xFF1A;</p>
<pre><code>Observable.concat(Observable.just(1, 2, 3), Observable.just(4, 5, 6))
                .subscribe{result -&gt; Log.d(TAG, &quot;result = &quot; + result)}
</code></pre>
<h3 id="filter"><a class="header-anchor" href="#filter"></a>filter</h3>
<p>RxJava2 &#x7684;&#x5199;&#x6CD5;&#xFF1A;</p>
<pre><code>Observable.just(1, 2, 3, 4, 5)
               .filter(new Predicate&lt;Integer&gt;() {
                   @Override
                   public boolean test(@NonNull Integer integer) throws Exception {
                       return integer % 2 == 0;
                   }
               })
               .subscribe(new Consumer&lt;Integer&gt;() {
                   @Override
                   public void accept(Integer integer) throws Exception {
                       Log.d(TAG, &quot;result = &quot; + integer);
                   }
               });
</code></pre>
<p>&#x7ED3;&#x5408; Kotlin &#x7684;&#x5199;&#x6CD5;&#xFF1A;</p>
<pre><code>Observable.just(1, 2, 3, 4, 5)
                .filter { value -&gt; return@filter value % 2 == 0 }
                .subscribe({ t -&gt; Log.d(TAG, &quot;result &quot; + t) })
</code></pre>
<p>&#x5927;&#x5BB6;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;<a href="https://github.com/ReactiveX/RxKotlin" target="_blank" rel="external nofollow noopener noreferrer">RxKotlin</a>&#xFF0C;&#x5B83;&#x662F;&#x89C4;&#x8303;&#x4E86;RxJava&#x4E0E;Kotlin&#x4F7F;&#x7528;&#x7684;&#x60EF;&#x4F8B;&#x3002;</p>]]></content>
    
    <summary type="html">
    
      通过前面的学习，我们知道 Kotlin 的思路与写Java时一样，不过更简洁清爽。如果再结合 RxJava，将进一步减少冗余代码，更容易专注于功能的开发，整个过程轻松愉快。
    
    </summary>
    
      <category term="移动开发" scheme="http://ngudream.com/categories/%E7%A7%BB%E5%8A%A8%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="Kotlin" scheme="http://ngudream.com/tags/Kotlin/"/>
    
  </entry>
  
  <entry>
    <title>Kotlin 封装 Realm 操作举例</title>
    <link href="http://ngudream.com/2017/09/02/kotlin-realm/"/>
    <id>http://ngudream.com/2017/09/02/kotlin-realm/</id>
    <published>2017-09-02T03:12:38.000Z</published>
    <updated>2018-02-06T14:17:51.830Z</updated>
    
    <content type="html"><![CDATA[<p>&#x5148;&#x5728;&#x9879;&#x76EE;&#x7684;build.gradle&#x914D;&#x7F6E;&#x597D;kotlin&#x548C;realm</p>
<pre><code>buildscript {
    ext.kotlin_version = &apos;1.2.10&apos;
    repositories {
        jcenter()
    }
    dependencies {
        classpath &apos;com.android.tools.build:gradle:2.3.2&apos;
        classpath &quot;org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version&quot;
        classpath &quot;io.realm:realm-gradle-plugin:3.1.1&quot;
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        jcenter()
    }
}
</code></pre>
<p>&#x65B0;&#x5EFA;&#x4E00;&#x4E2A;&#x5B9E;&#x4F53;&#x7C7B;Person.kt&#xFF0C;&#x53EF;&#x4EE5;&#x67E5;&#x770B;&#x5B98;&#x65B9;&#x7684;<a href="https://github.com/realm/realm-java/tree/master/examples/kotlinExample" target="_blank" rel="external nofollow noopener noreferrer">&#x4F8B;&#x5B50;</a></p>
<pre><code>open class Person(
        @PrimaryKey public open var name: String = &quot;&quot;,
        public open var age: Int = 0,
        public open var sex: String = &quot;&quot;,
        @Ignore public open var tempReference: Int = 0,
        public open var id: Long = 0
) : RealmObject() {}
</code></pre>
<p>&#x518D;&#x6765;&#x770B;&#x4E00;&#x4E0B;&#x5C01;&#x88C5;&#x597D;&#x7684;CRUD&#x64CD;&#x4F5C;RealmExtensions.kt&#xFF0C;&#x6765;&#x81EA;<a href="https://github.com/vicpinm/Kotlin-Realm-Extensions/blob/master/library-base/src/main/java/com/vicpin/krealmextensions/RealmExtensions.kt" target="_blank" rel="external nofollow noopener noreferrer">V&#xED;ctor Manuel Pineda Murcia</a></p>
<pre><code>typealias Query&lt;T&gt; = RealmQuery&lt;T&gt;.() -&gt; Unit

/**
 * Created by victor on 2/1/17.
 * Extensions for Realm. All methods here are synchronous.
 */

/**
 * Query to the database with RealmQuery instance as argument
 */
fun &lt;T : RealmModel&gt; T.query(query: Query&lt;T&gt;): List&lt;T&gt; {
    getRealmInstance().use { realm -&gt;
        val result = realm.where(javaClass).withQuery(query).findAll()
        return realm.copyFromRealm(result)
    }
}

/**
 * Query to the database with RealmQuery instance as argument
 */
inline fun &lt;reified T : RealmModel&gt; query(query: Query&lt;T&gt;): List&lt;T&gt; {
    getRealmInstance&lt;T&gt;().use { realm -&gt;
        val result = realm.where(T::class.java).runQuery(query).findAll()
        return realm.copyFromRealm(result)
    }
}

/**
 * Query to the database with RealmQuery instance as argument and returns all items founded
 */
fun &lt;T : RealmModel&gt; T.queryAll(): List&lt;T&gt; {
    getRealmInstance().use { realm -&gt;
        val result = realm.where(this.javaClass).findAll()
        return realm.copyFromRealm(result)
    }
}

inline fun &lt;reified T : RealmModel&gt; queryAll(): List&lt;T&gt; {
    getRealmInstance&lt;T&gt;().use { realm -&gt;
        val result = realm.where(T::class.java).findAll()
        return realm.copyFromRealm(result)
    }
}

/**
 * Query to the database with RealmQuery instance as argument. Return first result, or null.
 */
fun &lt;T : RealmModel&gt; T.queryFirst(): T? {
    getRealmInstance().use { realm -&gt;
        val item: T? = realm.where(this.javaClass).findFirst()
        return if (item != null &amp;&amp; RealmObject.isValid(item)) realm.copyFromRealm(item) else null
    }
}

inline fun &lt;reified T : RealmModel&gt; queryFirst(): T? {
    getRealmInstance&lt;T&gt;().use { realm -&gt;
        val item: T? = realm.where(T::class.java).findFirst()
        return if (item != null &amp;&amp; RealmObject.isValid(item)) realm.copyFromRealm(item) else null
    }
}

/**
 * Query to the database with RealmQuery instance as argument. Return first result, or null.
 */
fun &lt;T : RealmModel&gt; T.queryFirst(query: Query&lt;T&gt;): T? {
    getRealmInstance().use { realm -&gt;
        val item: T? = realm.where(this.javaClass).withQuery(query).findFirst()
        return if (item != null &amp;&amp; RealmObject.isValid(item)) realm.copyFromRealm(item) else null
    }
}

inline fun &lt;reified T : RealmModel&gt; queryFirst(query: Query&lt;T&gt;): T? {
    getRealmInstance&lt;T&gt;().use { realm -&gt;
        val item: T? = realm.where(T::class.java).runQuery(query).findFirst()
        return if (item != null &amp;&amp; RealmObject.isValid(item)) realm.copyFromRealm(item) else null
    }
}

/**
 * Query to the database with RealmQuery instance as argument. Return last result, or null.
 */
fun &lt;T : RealmModel&gt; T.queryLast(): T? {
    getRealmInstance().use { realm -&gt;
        val result = realm.where(this.javaClass).findAll()
        return if (result != null &amp;&amp; result.isNotEmpty()) realm.copyFromRealm(result.last()) else null
    }
}

inline fun &lt;reified T : RealmModel&gt; queryLast(): T? {
    getRealmInstance&lt;T&gt;().use { realm -&gt;
        val result: RealmResults&lt;T&gt; = realm.where(T::class.java).findAll()
        return if (result.isNotEmpty()) realm.copyFromRealm(result.last()) else null
    }
}

/**
 * Query to the database with RealmQuery instance as argument. Return last result, or null.
 */
fun &lt;T : RealmModel&gt; T.queryLast(query: Query&lt;T&gt;): T? {
    getRealmInstance().use { realm -&gt;
        val result = realm.where(this.javaClass).withQuery(query).findAll()
        return if (result != null &amp;&amp; result.isNotEmpty()) realm.copyFromRealm(result.last()) else null
    }
}

inline fun &lt;reified T : RealmModel&gt; queryLast(query: Query&lt;T&gt;): T? {
    getRealmInstance&lt;T&gt;().use { realm -&gt;
        val result: RealmResults&lt;T&gt; = realm.where(T::class.java).runQuery(query).findAll()
        return if (result.isNotEmpty()) realm.copyFromRealm(result.last()) else null
    }
}


/**
 * Query to the database with RealmQuery instance as argument
 */
fun &lt;T : RealmModel&gt; T.querySorted(fieldName: String, order: Sort, query: Query&lt;T&gt;): List&lt;T&gt; {
    getRealmInstance().use { realm -&gt;
        val result = realm.where(this.javaClass).withQuery(query).findAll().sort(fieldName, order)
        return realm.copyFromRealm(result)
    }
}

inline fun &lt;reified T : RealmModel&gt; querySorted(fieldName: String, order: Sort, query: Query&lt;T&gt;): List&lt;T&gt; {
    getRealmInstance&lt;T&gt;().use { realm -&gt;
        val result = realm.where(T::class.java).runQuery(query).findAll().sort(fieldName, order)
        return realm.copyFromRealm(result)
    }
}

/**
 * Query to the database with a specific order and a RealmQuery instance as argument
 */
fun &lt;T : RealmModel&gt; T.querySorted(fieldName: List&lt;String&gt;, order: List&lt;Sort&gt;, query: Query&lt;T&gt;): List&lt;T&gt; {
    getRealmInstance().use { realm -&gt;
        val result = realm.where(this.javaClass).withQuery(query).findAll().sort(fieldName.toTypedArray(), order.toTypedArray())
        return realm.copyFromRealm(result)
    }
}

inline fun &lt;reified T : RealmModel&gt; querySorted(fieldName: List&lt;String&gt;, order: List&lt;Sort&gt;, query: Query&lt;T&gt;): List&lt;T&gt; {
    getRealmInstance&lt;T&gt;().use { realm -&gt;
        val result = realm.where(T::class.java).runQuery(query).findAll().sort(fieldName.toTypedArray(), order.toTypedArray())
        return realm.copyFromRealm(result)
    }
}

/**
 * Query to the database with a specific order
 */
fun &lt;T : RealmModel&gt; T.querySorted(fieldName: String, order: Sort): List&lt;T&gt; {
    getRealmInstance().use { realm -&gt;
        val result = realm.where(this.javaClass).findAll().sort(fieldName, order)
        return realm.copyFromRealm(result)
    }
}

inline fun &lt;reified T : RealmModel&gt; querySorted(fieldName: String, order: Sort): List&lt;T&gt; {
    getRealmInstance&lt;T&gt;().use { realm -&gt;
        val result = realm.where(T::class.java).findAll().sort(fieldName, order)
        return realm.copyFromRealm(result)
    }
}

/**
 * Query to the database with a specific order
 */
fun &lt;T : RealmModel&gt; T.querySorted(fieldName: List&lt;String&gt;, order: List&lt;Sort&gt;): List&lt;T&gt; {
    getRealmInstance().use { realm -&gt;
        val result = realm.where(this.javaClass).findAll().sort(fieldName.toTypedArray(), order.toTypedArray())
        return realm.copyFromRealm(result)
    }
}

inline fun &lt;reified T : RealmModel&gt; querySorted(fieldName: List&lt;String&gt;, order: List&lt;Sort&gt;): List&lt;T&gt; {
    getRealmInstance&lt;T&gt;().use { realm -&gt;
        val result = realm.where(T::class.java).findAll().sort(fieldName.toTypedArray(), order.toTypedArray())
        return realm.copyFromRealm(result)
    }
}

/**
 * Utility extension for modifying database. Create a transaction, run the function passed as argument,
 * commit transaction and close realm instance.
 */
fun Realm.transaction(action: (Realm) -&gt; Unit) {
    use { executeTransaction { action(this) } }
}

/**
 * Creates a new entry in database. Usefull for RealmObject with no primary key.
 */
fun &lt;T : RealmModel&gt; T.create() {
    getRealmInstance().transaction { it.copyToRealm(this) }
}

/**
 * Creates a new entry in database. Useful for RealmObject with no primary key.
 * @return a managed version of a saved object
 */
fun &lt;T : RealmModel&gt; T.createManaged(realm: Realm): T {
    var result: T? = null
    realm.executeTransaction { result = it.copyToRealm(this) }
    return result!!
}

/**
 * Creates or updates a entry in database. Requires a RealmObject with primary key, or IllegalArgumentException will be thrown
 */
fun &lt;T : RealmModel&gt; T.createOrUpdate() {
    getRealmInstance().transaction { it.copyToRealmOrUpdate(this) }
}

/**
 * Creates or updates a entry in database. Requires a RealmObject with primary key, or IllegalArgumentException will be thrown
 * @return a managed version of a saved object
 */
fun &lt;T : RealmModel&gt; T.createOrUpdateManaged(realm: Realm): T {
    var result: T? = null
    realm.executeTransaction { result = it.copyToRealmOrUpdate(this) }
    return result!!
}

/**
 * Delete all entries of this type in database
 */
fun &lt;T : RealmModel&gt; T.deleteAll() {
    getRealmInstance().transaction { it.where(this.javaClass).findAll().deleteAllFromRealm() }
}

inline fun &lt;reified T : RealmModel&gt; deleteAll() {
    getRealmInstance&lt;T&gt;().transaction { it.where(T::class.java).findAll().deleteAllFromRealm() }
}

/**
 * Delete all entries returned by the specified query
 */
fun &lt;T : RealmModel&gt; T.delete(myQuery: Query&lt;T&gt;) {
    getRealmInstance().transaction {
        it.where(this.javaClass).withQuery(myQuery).findAll().deleteAllFromRealm()
    }
}

inline fun &lt;reified T : RealmModel&gt; delete(crossinline query: Query&lt;T&gt;) {
    getRealmInstance&lt;T&gt;().transaction {
        it.where(T::class.java).runQuery(query).findAll().deleteAllFromRealm()
    }
}

/**
 * Update first entry returned by the specified query
 */
inline fun &lt;reified T : RealmModel&gt; T.queryAndUpdate(noinline query: Query&lt;T&gt;, noinline modify: (T) -&gt; Unit) {
    queryFirst(query).let {
        modify(this)
        save()
    }
}

/**
 * Creates a new entry in database or updates an existing one. If entity has no primary key, always create a new one.
 * If has primary key, it tries to updates an existing one.
 */
fun &lt;T : RealmModel&gt; T.save() {
    getRealmInstance().transaction { realm -&gt;
        realm.copyToRealm(this)
    }
}



/**
 * Get count of entries
 */
fun &lt;T : RealmModel&gt; T.count(): Long {
    getRealmInstance().use { realm -&gt;
        return realm.where(this::class.java).count()
    }
}

fun &lt;T : RealmModel&gt; T.count(realm: Realm): Long {
    return realm.where(this::class.java).count()
}

inline fun &lt;reified T : RealmModel&gt; count(): Long {
    getRealmInstance&lt;T&gt;().use { realm -&gt;
        return realm.where(T::class.java).count()
    }
}

inline fun &lt;reified T : RealmModel&gt; count(realm: Realm): Long {
    return realm.where(T::class.java).count()
}

inline fun &lt;reified T : RealmModel&gt; count(query: Query&lt;T&gt;): Long {
    getRealmInstance&lt;T&gt;().use { realm -&gt;
        return realm.where(T::class.java).runQuery(query).count()
    }
}

/**
 * UTILITY METHODS
 */
private fun &lt;T&gt; T.withQuery(block: (T) -&gt; Unit): T {
    block(this); return this
}

/**
 * UTILITY METHODS
 */
inline fun &lt;reified T : RealmModel&gt; RealmQuery&lt;T&gt;.runQuery(block: RealmQuery&lt;T&gt;.() -&gt; Unit): RealmQuery&lt;T&gt; {
    block(this); return this
}
</code></pre>
<p>&#x7136;&#x540E;&#x6211;&#x4EEC;&#x5C31;&#x53EF;&#x4EE5;&#x6109;&#x5FEB;&#x7684;&#x4F7F;&#x7528;&#x4E86;</p>
<pre><code>class MainActivity : AppCompatActivity(), View.OnClickListener {

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_main)
    }

    override fun onClick(p0: View?) {
        when (p0?.id) {
            R.id.tvHello -&gt; {
                //Person().createOrUpdate()
                Toast.makeText(this, Person().queryFirst().toString(), Toast.LENGTH_SHORT).show()
                //Person().count()
            }
        }
    }
}
</code></pre>]]></content>
    
    <summary type="html">
    
      相比android自带的sqlite，realm能提供更简化的api调用，更优的性能，可以实现一对一，一对多，多对多关系，以及递归。本文将使用kotlin来封装realm数据库的CRUD操作。
    
    </summary>
    
      <category term="移动开发" scheme="http://ngudream.com/categories/%E7%A7%BB%E5%8A%A8%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="Kotlin" scheme="http://ngudream.com/tags/Kotlin/"/>
    
  </entry>
  
  <entry>
    <title>Kotlin 封装 DB 操作举例</title>
    <link href="http://ngudream.com/2017/08/29/kotlin-database-helper/"/>
    <id>http://ngudream.com/2017/08/29/kotlin-database-helper/</id>
    <published>2017-08-29T13:02:46.000Z</published>
    <updated>2018-02-06T14:17:51.825Z</updated>
    
    <content type="html"><![CDATA[<p>&#x9996;&#x5148;&#x7EE7;&#x627F;SQLiteOpenHelper&#x7C7B;&#xFF0C;&#x5EFA;&#x4E00;&#x4E2A;&#x81EA;&#x5DF1;&#x7684;BaseDbHelper.kt</p>
<pre><code>class BaseDbHelper(context: Context) : SQLiteOpenHelper(context, DB_NAME, null, DB_VERSION) {

    private val TAG = BaseDbHelper::class.java!!.getSimpleName()

    companion object {
        private val DB_NAME = &quot;account.db&quot;
        private val DB_VERSION = 6
    }

    override fun onCreate(db: SQLiteDatabase) {
        db.execSQL(UserTable.TABLE_SQL)
    }

    /**
     * onUpgrade()&#x65B9;&#x6CD5;&#x5728;&#x6570;&#x636E;&#x5E93;&#x7248;&#x672C;&#x6BCF;&#x6B21;&#x53D1;&#x751F;&#x53D8;&#x5316;&#x65F6;&#x90FD;&#x4F1A;&#x628A;&#x7528;&#x6237;&#x624B;&#x673A;&#x4E0A;&#x7684;&#x6570;&#x636E;&#x5E93;&#x8868;&#x5220;&#x9664;&#xFF0C;&#x7136;&#x540E;&#x518D;&#x91CD;&#x65B0;&#x521B;&#x5EFA;&#x3002;&lt;br&gt;&lt;/br&gt;
     * &#x4E00;&#x822C;&#x5728;&#x5B9E;&#x9645;&#x9879;&#x76EE;&#x4E2D;&#x662F;&#x4E0D;&#x80FD;&#x8FD9;&#x6837;&#x505A;&#x7684;&#xFF0C;&#x6B63;&#x786E;&#x7684;&#x505A;&#x6CD5;&#x662F;&#x5728;&#x66F4;&#x65B0;&#x6570;&#x636E;&#x5E93;&#x8868;&#x7ED3;&#x6784;&#x65F6;&#xFF0C;&#x8FD8;&#x8981;&#x8003;&#x8651;&#x7528;&#x6237;&#x5B58;&#x653E;&#x4E8E;&#x6570;&#x636E;&#x5E93;&#x4E2D;&#x7684;&#x6570;&#x636E;&#x4E0D;&#x4F1A;&#x4E22;&#x5931;,&#x4ECE;&#x7248;&#x672C;&#x51E0;&#x66F4;&#x65B0;&#x5230;&#x7248;&#x672C;&#x51E0;&#x3002;(&#x975E;
     * Javadoc)
     */
    override fun onUpgrade(db: SQLiteDatabase?, oldVersion: Int, newVersion: Int) {
        if (db != null &amp;&amp; newVersion &gt; oldVersion) {
            try {
                when (oldVersion) {
                    1 -&gt; {
                        run {
                            addAccountAvatarColumn(db)
                            Log.d(BaseDbHelper::class.java!!.getSimpleName(), &quot;[onUpgrade] 1 update db, oldVersion = &quot; + oldVersion)
                        }
                        run {
                            //CREATE TABLE Account ( userId TEXT PRIMARY KEY, flyme TEXT, phone TEXT, nickName TEXT NOT NULL, icon TEXT);
                            db.execSQL(&quot;drop table if exists account_address&quot;)
                            Log.d(BaseDbHelper::class.java!!.getSimpleName(), &quot;[onUpgrade] 2 update db, oldVersion = &quot; + oldVersion)
                        }
                        run {
                            addAccountAreaCodeColumn(db)//&#x6DFB;&#x52A0;&#x56FD;&#x5BB6;&#x7801;&#x4E00;&#x680F;
                            db.execSQL(&quot;drop table if exists account_address&quot;)
                            Log.d(BaseDbHelper::class.java!!.getSimpleName(), &quot;[onUpgrade] 3 update db, oldVersion = &quot; + oldVersion)
                        }
                        run {
                            addAccountEmailColumn(db)//&#x6DFB;&#x52A0;&#x90AE;&#x4EF6;
                            db.execSQL(&quot;drop table if exists account_address&quot;)
                            Log.d(BaseDbHelper::class.java!!.getSimpleName(), &quot;[onUpgrade] 4 update db, oldVersion = &quot; + oldVersion)
                        }
                        run { addBackgroundImageColumn(db) }
                        Log.d(BaseDbHelper::class.java!!.getSimpleName(), &quot;[onUpgrade] update db, oldVersion = &quot; + oldVersion)
                    }
                    2 -&gt; {
                        run {
                            db.execSQL(&quot;drop table if exists account_address&quot;)
                            Log.d(BaseDbHelper::class.java!!.getSimpleName(), &quot;[onUpgrade] 2 update db, oldVersion = &quot; + oldVersion)
                        }
                        run {
                            addAccountAreaCodeColumn(db)
                            db.execSQL(&quot;drop table if exists account_address&quot;)
                            Log.d(BaseDbHelper::class.java!!.getSimpleName(), &quot;[onUpgrade] 3 update db, oldVersion = &quot; + oldVersion)
                        }
                        run {
                            addAccountEmailColumn(db)
                            db.execSQL(&quot;drop table if exists account_address&quot;)
                            Log.d(BaseDbHelper::class.java!!.getSimpleName(), &quot;[onUpgrade] 4 update db, oldVersion = &quot; + oldVersion)
                        }
                        run { addBackgroundImageColumn(db) }
                        Log.d(BaseDbHelper::class.java!!.getSimpleName(), &quot;[onUpgrade] update db, oldVersion = &quot; + oldVersion)
                    }
                    3 -&gt; {
                        run {
                            addAccountAreaCodeColumn(db)
                            db.execSQL(&quot;drop table if exists account_address&quot;)
                            Log.d(BaseDbHelper::class.java!!.getSimpleName(), &quot;[onUpgrade] 3 update db, oldVersion = &quot; + oldVersion)
                        }
                        run {
                            addAccountEmailColumn(db)
                            db.execSQL(&quot;drop table if exists account_address&quot;)
                            Log.d(BaseDbHelper::class.java!!.getSimpleName(), &quot;[onUpgrade] 4 update db, oldVersion = &quot; + oldVersion)
                        }
                        run { addBackgroundImageColumn(db) }
                        Log.d(BaseDbHelper::class.java!!.getSimpleName(), &quot;[onUpgrade] update db, oldVersion = &quot; + oldVersion)
                    }
                    4 -&gt; {
                        run {
                            addAccountEmailColumn(db)
                            db.execSQL(&quot;drop table if exists account_address&quot;)
                            Log.d(BaseDbHelper::class.java!!.getSimpleName(), &quot;[onUpgrade] 4 update db, oldVersion = &quot; + oldVersion)
                        }
                        run { addBackgroundImageColumn(db) }
                        Log.d(BaseDbHelper::class.java!!.getSimpleName(), &quot;[onUpgrade] update db, oldVersion = &quot; + oldVersion)
                    }
                    5 -&gt; {
                        run { addBackgroundImageColumn(db) }
                        Log.d(BaseDbHelper::class.java!!.getSimpleName(), &quot;[onUpgrade] update db, oldVersion = &quot; + oldVersion)
                    }
                }
            } catch (e: Exception) {
            }

        }
    }

    override fun onDowngrade(db: SQLiteDatabase?, oldVersion: Int, newVersion: Int) {
        if (db != null &amp;&amp; oldVersion &gt; newVersion) {
            var cursor: Cursor? = null
            try {
                cursor = db.rawQuery(&quot;SELECT name FROM sqlite_master WHERE type=&apos;table&apos;&quot;, null)
                val tableNames = ArrayList&lt;String&gt;()
                if (cursor != null &amp;&amp; cursor.moveToFirst()) {
                    do {
                        val name = cursor.getString(0)
                        if (!TextUtils.isEmpty(name) &amp;&amp; !name.equals(&quot;android_metadata&quot;, ignoreCase = true)) {
                            tableNames.add(name)
                        }
                    } while (cursor.moveToNext())
                }
                if (tableNames.size &gt; 0) {
                    for (name in tableNames) {
                        db.execSQL(&quot;DROP TABLE IF EXISTS &quot; + name)
                    }
                }
                onCreate(db)
            } catch (e: Exception) {
            } finally {
                if (cursor != null) {
                    cursor.close()
                }
            }
        }
    }

    private fun addAccountAvatarColumn(db: SQLiteDatabase) {
        try {
            db.execSQL(&quot;ALTER TABLE &quot; + UserTable.TABLE_NAME + &quot; ADD COLUMN &quot;
                    + UserTable.AVATAR_ICON + &quot; TEXT;&quot;)
        } catch (e: Exception) {
            Log.e(TAG, &quot;[addAccountAvatarColumn] error = &quot; + e.message)
        }

    }

    private fun addAccountAreaCodeColumn(db: SQLiteDatabase) {
        try {
            db.execSQL(&quot;ALTER TABLE &quot; + UserTable.TABLE_NAME + &quot; ADD COLUMN &quot;
                    + UserTable.COUNTRY_CODE + &quot; TEXT;&quot;)
        } catch (e: Exception) {
            Log.e(TAG, &quot;[addAccountAreaCodeColumn] error = &quot; + e.message)
        }

    }

    private fun addAccountEmailColumn(db: SQLiteDatabase) {
        try {
            db.execSQL(&quot;ALTER TABLE &quot; + UserTable.TABLE_NAME + &quot; ADD COLUMN &quot;
                    + UserTable.EMAIL + &quot; TEXT;&quot;)
        } catch (e: Exception) {
            Log.e(TAG, &quot;[addAccountEmailColumn] error = &quot; + e.message)
        }

    }

    private fun addBackgroundImageColumn(db: SQLiteDatabase) {
        try {
            db.execSQL(&quot;ALTER TABLE &quot; + UserTable.TABLE_NAME + &quot; ADD COLUMN &quot;
                    + UserTable.BACKGROUND_IMAGE + &quot; TEXT;&quot;)
        } catch (e: Exception) {
            Log.e(TAG, &quot;[addBackgroundImageColumn] error = &quot; + e.message)
        }

    }
}
</code></pre>
<p>&#x7136;&#x540E;&#x662F;&#x65B0;&#x5EFA;&#x4E00;&#x4E2A;&#x5355;&#x4F8B;CoreDBManager.kt&#xFF0C;&#x7528;&#x6765;&#x4E1A;&#x52A1;&#x8C03;&#x7528;&#x64CD;&#x4F5C;&#x6570;&#x636E;&#x5E93;&#x589E;&#x5220;&#x6539;&#x67E5;&#x7B49;</p>
<pre><code>class CoreDBManager private constructor(context: Context) {

    private var mDataBase: SQLiteDatabase? = null
    private val mBaseDbHelper: BaseDbHelper
    private val mOpenCounter = AtomicInteger()

    companion object {

        private val TAG = CoreDBManager::class.java!!.getSimpleName()
        @Volatile private var mInstance: CoreDBManager? = null

        fun getInstance(context: Context): CoreDBManager? {
            if (mInstance == null) {
                synchronized(CoreDBManager::class.java) {
                    if (mInstance == null) {
                        mInstance = CoreDBManager(context)
                    }
                }
            }
            return mInstance
        }
    }

    private val writableDatabase: SQLiteDatabase?
        get() {
            if (mOpenCounter.incrementAndGet() == 1) {
                mDataBase = mBaseDbHelper.writableDatabase
            }
            return mDataBase
        }

    init {
        mBaseDbHelper = BaseDbHelper(context)
    }

    private fun closeDataBase() {
        if (mOpenCounter.decrementAndGet() == 0) {
            if (mDataBase != null) {
                mDataBase!!.close()
            }
        }
    }

    /**
     * &#x67E5;&#x8BE2;&#x6307;&#x5B9A;&#x7528;&#x6237;
     *
     * @param userId
     * @return
     */
    fun queryUserInfo(userId: String): UserInfo? {
        //&#x5982;&#x679C;Realm&#x5173;&#x95ED;&#xFF0C;&#x6240;&#x6709;&#x67E5;&#x8BE2;&#x5F97;&#x5230;&#x7684;RealmObject&#x90FD;&#x4E0D;&#x80FD;&#x4F7F;&#x7528;&#x4E86;
        val db = writableDatabase
        var result: UserInfo? = null
        try {
            val selection = UserTable.USER_ID + &quot;=?&quot;
            val selectionArgs = arrayOf(userId)
            var cursor: Cursor? = null
            try {
                cursor = db!!.query(UserTable.TABLE_NAME, null, if (TextUtils.isEmpty(userId)) null else selection,
                        if (TextUtils.isEmpty(userId)) null else selectionArgs, null, null, null)
                if (cursor != null) {
                    if (cursor.moveToFirst()) {
                        result = UserInfo()
                        result.parseCursor(cursor)
                    }
                }
            } catch (e: Exception) {
                Log.e(TAG, &quot;[queryUserInfo] error = &quot; + e.message)
            } finally {
                cursor?.close()
            }
        } finally {
            closeDataBase()
        }
        return result
    }

    /**
     * &#x67E5;&#x8BE2;&#x6307;&#x5B9A;&#x7528;&#x6237;
     *
     * @return
     */
    fun queryUserInfo(projections: Array&lt;String&gt;, where: String, selectionArgs: Array&lt;String&gt;, sortOrder: String): UserInfo? {
        val db = writableDatabase
        var result: UserInfo? = null
        try {
            var cursor: Cursor? = null
            try {
                cursor = db!!.query(UserTable.TABLE_NAME, projections, where, selectionArgs, null, null, sortOrder)
                if (cursor != null) {
                    if (cursor.moveToFirst()) {
                        result = UserInfo()
                        result.parseCursor(cursor)
                    }
                }
            } catch (e: Exception) {
            } finally {
                cursor?.close()
            }
        } catch (e: Exception) {
            Log.e(TAG, &quot;[queryUserInfo] error = &quot; + e.message)
        } finally {
            closeDataBase()
        }
        return result
    }

    /**
     * &#x7528;&#x6237;&#x4FE1;&#x606F;&#x5199;&#x5165;&#x6570;&#x636E;&#x5E93;
     *
     * @param userInfo
     */
    fun insertOrUpdate(userInfo: UserInfo): Boolean {
        val db = writableDatabase
        val cursor = db!!.query(
                UserTable.TABLE_NAME,
                arrayOf(UserTable.USER_ID),
                UserTable.USER_ID + &quot; = ?&quot;,
                arrayOf(userInfo.userId), null, null, null)
        var result: Long = 0
        try {
            val values = userInfo.contentValues
            if (cursor != null &amp;&amp; cursor.count &gt; 0) {
                //&#x66F4;&#x65B0;&#x64CD;&#x4F5C;
                cursor.moveToFirst()
                val userId = cursor.getString(cursor.getColumnIndex(UserTable.USER_ID))
                val newId = userInfo.userId
                if (!TextUtils.isEmpty(newId) &amp;&amp; newId != userId) {//&#x5BB9;&#x9519;&#xFF0C;&#x6570;&#x636E;&#x5E93;&#x53EA;&#x6709;&#x4E00;&#x4E2A;&#x7528;&#x6237;&#x4FE1;&#x606F;
                    result = db.update(UserTable.TABLE_NAME, values, UserTable.USER_ID + &quot; = ?&quot;, arrayOf(userId)).toLong()
                } else {
                    result = db.update(UserTable.TABLE_NAME, values, UserTable.USER_ID + &quot; = ?&quot;, arrayOf(userInfo.userId)).toLong()
                }
            } else {
                //&#x63D2;&#x5165;&#x64CD;&#x4F5C;
                result = db.insert(UserTable.TABLE_NAME, null, values)
            }
        } catch (e: Exception) {
            Log.e(TAG, &quot;[insertOrUpdate] error = &quot; + e.message)
        } finally {
            cursor?.close()
            closeDataBase()
        }
        return result &gt; 0
    }

    /**
     * &#x5220;&#x9664;&#x6570;&#x636E;&#x5E93;&#x5168;&#x90E8;&#x6570;&#x636E;
     */
    fun deleteAllDatas() {
        val db = writableDatabase
        try {
            db!!.delete(UserTable.TABLE_NAME, null, null)
        } catch (e: Exception) {
            Log.e(TAG, &quot;[deleteAllDatas] error = &quot; + e.message)
        } finally {
            closeDataBase()
        }
    }
}
</code></pre>]]></content>
    
    <summary type="html">
    
      在android中免不了使用数据库保存一些信息，常用方法就是新建一个SQLiteOpenHelper，然后通过它来操作数据库。在这里，我们基于Kotlin封装一些简单的sqlite操作。
    
    </summary>
    
      <category term="移动开发" scheme="http://ngudream.com/categories/%E7%A7%BB%E5%8A%A8%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="Kotlin" scheme="http://ngudream.com/tags/Kotlin/"/>
    
  </entry>
  
  <entry>
    <title>Kotlin 函数与函数式编程</title>
    <link href="http://ngudream.com/2017/08/22/kotlin-function/"/>
    <id>http://ngudream.com/2017/08/22/kotlin-function/</id>
    <published>2017-08-22T15:22:17.000Z</published>
    <updated>2018-02-06T14:17:51.833Z</updated>
    
    <content type="html"><![CDATA[<p>&#x5982;&#x679C;&#x4F60;&#x5BF9;Kotlin&#x8BED;&#x6CD5;&#x4E00;&#x65E0;&#x6240;&#x77E5;&#xFF0C;&#x63A8;&#x8350;&#x5148;&#x9605;&#x8BFB;&#x5B98;&#x65B9;&#x6587;&#x6863;&#x6216;&#x8005;&#x4E2D;&#x6587;&#x7AD9;&#xFF08;<a href="https://www.kotlincn.net/docs/reference/%EF%BC%89%E4%B9%8B%E5%90%8E%E5%86%8D%E7%9C%8B%E8%BF%99%E7%AF%87%E6%96%87%E7%AB%A0%E4%BC%9A%E6%9C%89%E6%9B%B4%E6%B7%B1%E5%88%BB%E7%9A%84%E7%90%86%E8%A7%A3%E3%80%82%E6%9C%AC%E7%AF%87%E6%96%87%E7%AB%A0%E4%B8%BB%E8%A6%81%E4%BB%8B%E7%BB%8DKotlin%E5%87%BD%E6%95%B0%E7%9A%84%E7%94%A8%E6%B3%95%EF%BC%8C%E4%BB%A5%E5%8F%8A%E8%87%AA%E5%B7%B1%E5%AF%B9%E5%87%BD%E6%95%B0%E5%BC%8F%E7%BC%96%E7%A8%8B%E7%9A%84%E4%B8%80%E4%BA%9B%E7%90%86%E8%A7%A3%E3%80%82%E5%B9%B6%E4%B8%94%E4%BC%9A%E5%92%8CPython%EF%BC%8CC++%E5%81%9A%E4%B8%80%E4%BA%9B%E6%AF%94%E8%BE%83%E3%80%82" target="_blank" rel="external nofollow noopener noreferrer">https://www.kotlincn.net/docs/reference/&#xFF09;&#x4E4B;&#x540E;&#x518D;&#x770B;&#x8FD9;&#x7BC7;&#x6587;&#x7AE0;&#x4F1A;&#x6709;&#x66F4;&#x6DF1;&#x523B;&#x7684;&#x7406;&#x89E3;&#x3002;&#x672C;&#x7BC7;&#x6587;&#x7AE0;&#x4E3B;&#x8981;&#x4ECB;&#x7ECD;Kotlin&#x51FD;&#x6570;&#x7684;&#x7528;&#x6CD5;&#xFF0C;&#x4EE5;&#x53CA;&#x81EA;&#x5DF1;&#x5BF9;&#x51FD;&#x6570;&#x5F0F;&#x7F16;&#x7A0B;&#x7684;&#x4E00;&#x4E9B;&#x7406;&#x89E3;&#x3002;&#x5E76;&#x4E14;&#x4F1A;&#x548C;Python&#xFF0C;C++&#x505A;&#x4E00;&#x4E9B;&#x6BD4;&#x8F83;&#x3002;</a></p>
<p>&#x4E0B;&#x9762;&#x662F;&#x7EF4;&#x57FA;&#x767E;&#x79D1;&#x4E0A;&#x5BF9;&#x4E8E;&#x51FD;&#x6570;&#x5F0F;&#x7F16;&#x7A0B;&#x7684;&#x5B9A;&#x4E49;&#xFF1A;</p>
<blockquote>
<p>&#x51FD;&#x6570;&#x5F0F;&#x7F16;&#x7A0B;&#xFF08;&#x82F1;&#x8BED;&#xFF1A;functional programming&#xFF09;&#x6216;&#x79F0;&#x51FD;&#x6570;&#x7A0B;&#x5E8F;&#x8BBE;&#x8BA1;&#xFF0C;&#x53C8;&#x79F0;&#x6CDB;&#x51FD;&#x7F16;&#x7A0B;&#xFF0C;&#x662F;&#x4E00;&#x79CD;&#x7F16;&#x7A0B;&#x8303;&#x578B;&#xFF0C;&#x5B83;&#x5C06;&#x7535;&#x8111;&#x8FD0;&#x7B97;&#x89C6;&#x4E3A;&#x6570;&#x5B66;&#x4E0A;&#x7684;&#x51FD;&#x6570;&#x8BA1;&#x7B97;&#xFF0C;&#x5E76;&#x4E14;&#x907F;&#x514D;&#x4F7F;&#x7528;&#x7A0B;&#x5E8F;&#x72B6;&#x6001;&#x4EE5;&#x53CA;&#x6613;&#x53D8;&#x5BF9;&#x8C61;&#x3002;&#x51FD;&#x6570;&#x7F16;&#x7A0B;&#x8BED;&#x8A00;&#x6700;&#x91CD;&#x8981;&#x7684;&#x57FA;&#x7840;&#x662F;&#x3BB;&#x6F14;&#x7B97;&#xFF08;lambda calculus&#xFF09;&#x3002;&#x800C;&#x4E14;&#x3BB;&#x6F14;&#x7B97;&#x7684;&#x51FD;&#x6570;&#x53EF;&#x4EE5;&#x63A5;&#x53D7;&#x51FD;&#x6570;&#x5F53;&#x4F5C;&#x8F93;&#x5165;&#xFF08;&#x5F15;&#x6570;&#xFF09;&#x548C;&#x8F93;&#x51FA;&#xFF08;&#x4F20;&#x51FA;&#x503C;&#xFF09;&#x3002;</p>
</blockquote>
<p>&#x4E0B;&#x9762;&#x662F;&#x5173;&#x4E8E;&#x9AD8;&#x9636;&#x51FD;&#x6570;&#x7684;&#x5B9A;&#x4E49;&#xFF1A;</p>
<blockquote>
<p>&#x5728;&#x6570;&#x5B66;&#x548C;&#x8BA1;&#x7B97;&#x673A;&#x79D1;&#x5B66;&#x4E2D;&#xFF0C;&#x9AD8;&#x9636;&#x51FD;&#x6570;&#x662F;&#x81F3;&#x5C11;&#x6EE1;&#x8DB3;&#x4E0B;&#x5217;&#x4E00;&#x4E2A;&#x6761;&#x4EF6;&#x7684;&#x51FD;&#x6570;&#xFF1A;&#x63A5;&#x53D7;&#x4E00;&#x4E2A;&#x6216;&#x591A;&#x4E2A;&#x51FD;&#x6570;&#x4F5C;&#x4E3A;&#x8F93;&#x5165;&#xFF0C;&#x8F93;&#x51FA;&#x4E00;&#x4E2A;&#x51FD;&#x6570;</p>
</blockquote>
<p>&#x4E0D;&#x96BE;&#x63A8;&#x65AD;&#x51FA;&#x51FD;&#x6570;&#x5F0F;&#x7F16;&#x7A0B;&#x6700;&#x91CD;&#x8981;&#x7684;&#x57FA;&#x7840;&#x662F;&#x9AD8;&#x9636;&#x51FD;&#x6570;&#x3002;&#x4E5F;&#x5C31;&#x662F;&#x652F;&#x6301;&#x51FD;&#x6570;&#x53EF;&#x4EE5;&#x63A5;&#x53D7;&#x51FD;&#x6570;&#x5F53;&#x4F5C;&#x8F93;&#x5165;&#xFF08;&#x5F15;&#x6570;&#xFF09;&#x548C;&#x8F93;&#x51FA;&#xFF08;&#x4F20;&#x51FA;&#x503C;&#xFF09;&#x3002;</p>
<p>&#x51FD;&#x6570;&#x4F5C;&#x4E3A;Kotlin&#x4E2D;&#x7684;&#x4E00;&#x7EA7;&#x516C;&#x6C11;&#x53EF;&#x4EE5;&#x50CF;&#x5176;&#x4ED6;&#x5BF9;&#x8C61;&#x4E00;&#x6837;&#x4F5C;&#x4E3A;&#x51FD;&#x6570;&#x7684;&#x8F93;&#x5165;&#x4E0E;&#x8F93;&#x51FA;&#xFF0C;&#x8FD9;&#x4E5F;&#x5C31;&#x662F;Java&#x7A0B;&#x5E8F;&#x5458;&#x8F6C;&#x5230;Kotlin&#x89C9;&#x5F97;&#x53D8;&#x5316;&#x6700;&#x5927;&#xFF0C;&#x6700;&#x96BE;&#x7406;&#x89E3;&#x7684;&#x4E00;&#x70B9;&#x3002;&#x5982;&#x679C;&#x4F60;&#x4E4B;&#x524D;&#x5B66;&#x8FC7;Python&#x6216;&#x8005;C++11&#x53EF;&#x80FD;&#x4F1A;&#x5BF9;&#x6B64;&#x6BD4;&#x8F83;&#x5BB9;&#x6613;&#x63A5;&#x53D7;&#x3002;&#x8FD9;&#x4E5F;&#x662F;&#x4E3A;&#x4EC0;&#x4E48;&#x672C;&#x6587;&#x4EE5;&#x4ECB;&#x7ECD;Kotlin&#x7684;&#x51FD;&#x6570;&#x53CA;&#x51FD;&#x6570;&#x5F0F;&#x7F16;&#x7A0B;&#x4E3A;&#x4E3B;&#x3002;</p>
<h2 id="kotlin-&#x51FD;&#x6570;"><a class="header-anchor" href="#kotlin-&#x51FD;&#x6570;"></a>Kotlin &#x51FD;&#x6570;</h2>
<p>&#x4E0B;&#x9762;&#x662F;Kotlin&#x4E2D;&#x4E00;&#x822C;&#x7684;&#x51FD;&#x6570;&#x5B9A;&#x4E49;&#xFF0C;&#x548C;Java&#x4E0D;&#x540C;&#x7684;&#x662F;&#x51FD;&#x6570;&#x5F62;&#x53C2;&#xFF0C;&#x8FD4;&#x56DE;&#x503C;&#x7C7B;&#x578B;&#x7F6E;&#x540E;&#x3002;&#x51FD;&#x6570;&#x4F53;&#x53EF;&#x4EE5;&#x7528;&#x7B49;&#x53F7;&#x8D4B;&#x503C;&#x7ED9;&#x51FD;&#x6570;&#x5B9A;&#x4E49;&#xFF0C;&#x8FD9;&#x91CC;&#x4E5F;&#x53EF;&#x4EE5;&#x770B;&#x51FA;&#x51FD;&#x6570;&#x548C;&#x53D8;&#x91CF;&#x7684;&#x5E73;&#x7B49;&#x6027;&#x3002;</p>
<pre><code>fun main(args: Array) {
    var s = sum(1,2)
    var m = multi(2,3)
    var x = maxOf(3,4)
}

fun sum(a: Int, b: Int): Int {
    return a + b
}

fun multi(a: Int, b: Int): Int = a * b

fun maxOf(a: Int, b: Int): Int = if (a &gt; b) a else b
</code></pre>
<p>&#x53E6;&#x5916;Kotlin&#x8FD8;&#x652F;&#x6301;&#x51FD;&#x6570;&#x9ED8;&#x8BA4;&#x53C2;&#x6570;&#xFF0C;&#x62D3;&#x5C55;&#x51FD;&#x6570;&#xFF0C;&#x4E2D;&#x7F00;&#x8868;&#x8FBE;&#x5F0F;&#xFF0C;&#x4E0B;&#x9762;&#x662F;&#x7B80;&#x5355;&#x7684;&#x4F8B;&#x5B50;&#xFF1A;</p>
<pre><code>fun main(args: Array) {
    isBiggerThan(2)
    isBiggerThan(2, 5)
    var s = &quot;a&quot;.isLetter()
    var a = 1 add 2
}

fun isBiggerThan(a: Int, b: Int = 0) {
    return a &gt; b
}

//&#x62D3;&#x5C55;&#x51FD;&#x6570;
fun String.isLetter(): Boolean {
    return matches(Regex(&quot;^[a-z|A-Z]$&quot;))
}

//&#x62D3;&#x5C55;&#x51FD;&#x6570;&#xFF0C;&#x4E2D;&#x7F00;&#x8868;&#x8FBE;&#x5F0F;
infix fun Int.add(x: Int): Int {
    return this + x
}
</code></pre>
<p>&#x652F;&#x6301;&#x9ED8;&#x8BA4;&#x53C2;&#x6570;&#x7684;&#x51FD;&#x6570;&#x53EF;&#x4EE5;&#x51CF;&#x5C0F;&#x51FD;&#x6570;&#x7684;&#x91CD;&#x8F7D;&#x3002;<br>
String&#x5BF9;&#x8C61;&#x4E2D;&#x672C;&#x6CA1;&#x6709;&#x5224;&#x65AD;&#x662F;&#x5426;&#x662F;&#x5B57;&#x6BCD;&#x7684;&#x65B9;&#x6CD5;&#xFF0C;&#x5728;Java&#x4E2D;&#x6211;&#x4EEC;&#x4E00;&#x822C;&#x4F1A;&#x5B9A;&#x4E49;&#x4E00;&#x4E9B;Utils&#x65B9;&#x6CD5;&#xFF0C;&#x800C;&#x5728;Kotlin&#x4E2D;&#x53EF;&#x4EE5;&#x5B9A;&#x4E49;&#x7C7B;&#x7684;&#x62D3;&#x5C55;&#x51FD;&#x6570;&#x3002;<br>
&#x7B2C;&#x4E8C;&#x4E2A;&#x4F8B;&#x5B50;&#x662F;&#x7ED9;Int&#x7C7B;&#x5B9A;&#x4E49;&#x4E86;&#x4E00;&#x4E2A;&#x62D3;&#x5C55;&#x51FD;&#x6570;&#xFF0C;&#x5E76;&#x4E14;&#x8BE5;&#x62D3;&#x5C55;&#x51FD;&#x6570;&#x4EE5;&#x4E2D;&#x7F00;&#x8868;&#x8FBE;&#x5F0F;&#x8868;&#x793A;&#xFF0C;&#x7ED9;&#x4E88;&#x4E86;&#x5F00;&#x53D1;&#x8005;&#x5B9A;&#x4E49;&#x7C7B;&#x4F3C;&#x5173;&#x952E;&#x5B57;&#x7684;&#x6743;&#x5229;&#x3002;<br>
&#x6BD4;&#x5982;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x8FD9;&#x6837;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;map&#x5BF9;&#x8C61;&#xFF1A;</p>
<pre><code>val kv = mapOf(&quot;a&quot; to 1, &quot;b&quot; to 2)
</code></pre>
<p>&#x8FD9;&#x91CC;&#x7684;to&#x5C31;&#x662F;&#x4E00;&#x4E2A;&#x4E2D;&#x7F00;&#x8868;&#x8FBE;&#x5F0F;&#xFF0C;&#x5B9A;&#x4E49;&#x5982;&#x4E0B;&#xFF1A;</p>
<pre><code>public infix fun&lt;A, B&gt; A.to(that: B): Pair&lt;A, B&gt; = Pair(this, that)
</code></pre>
<p>Pair&#x5C31;&#x662F;Map&#x4E2D;&#x5B58;&#x7684;&#x5BF9;&#x8C61;&#xFF0C;&#x6240;&#x4EE5;&#x4F60;&#x4E5F;&#x53EF;&#x4EE5;&#x8FD9;&#x6837;&#x521B;&#x5EFA;</p>
<pre><code>val kv = mapOf(Pair(&quot;a&quot;, 1), Pair(&quot;b&quot;, 2))
</code></pre>
<p>&#x5728;Python&#x4E2D;&#x5982;&#x679C;&#x6211;&#x4EEC;&#x60F3;&#x8BA9;&#x51FD;&#x6570;&#x8FD4;&#x56DE;&#x591A;&#x4E2A;&#x503C;&#xFF0C;&#x53EF;&#x4EE5;&#x8FD4;&#x56DE;&#x4E00;&#x4E2A;&#x5143;&#x7EC4;&#xFF0C;Kotlin&#x57FA;&#x4E8E;&#x89E3;&#x6784;&#x539F;&#x5219;&#x4E5F;&#x53EF;&#x4EE5;&#x5B9E;&#x73B0;&#x7C7B;&#x4F3C;&#x7684;&#x529F;&#x80FD;&#xFF1A;</p>
<pre><code>fun main(args: Array) {
    val (index, count) = findWhere(&quot;abcabcabcabc&quot;, &apos;c&apos;)
}

fun findWhere(str: String, findChar: Char): Pair&lt;Int, Int&gt; {
    var index = -1
    var count = 0
    for ((i, v) in str.withIndex()) {
        if (v == findChar) {
            if (index == -1) {
                index = i
            }
            ++count
        }
    }
    return Pair(index, count)
}
</code></pre>
<p>&#x81EA;&#x5B9A;&#x4E49;&#x5BF9;&#x8C61;&#x5982;&#x4F55;&#x652F;&#x6301;&#x89E3;&#x6784;&#x8BF7;&#x67E5;&#x770B;&#x5B98;&#x65B9;&#x6587;&#x6863;&#xFF0C;map&#x652F;&#x6301;&#x89E3;&#x6784;&#xFF0C;&#x6240;&#x4EE5;&#x53EF;&#x4EE5;&#x50CF;&#x4E0B;&#x9762;&#x8FD9;&#x6837;&#x904D;&#x5386;&#xFF1A;</p>
<pre><code>for ((k, v) in map) {
    print(&quot;$k -&gt; $v, &quot;)
}
</code></pre>
<p>&#x9AD8;&#x9636;&#x51FD;&#x6570;&#x4E0E; Lambda &#x8868;&#x8FBE;&#x5F0F;</p>
<blockquote>
<p>&#x201C;Lambda &#x8868;&#x8FBE;&#x5F0F;&#x201D;(lambda expression)&#x662F;&#x4E00;&#x4E2A;&#x533F;&#x540D;&#x51FD;&#x6570;&#xFF0C;Lambda&#x8868;&#x8FBE;&#x5F0F;&#x57FA;&#x4E8E;&#x6570;&#x5B66;&#x4E2D;&#x7684;&#x3BB;&#x6F14;&#x7B97;&#x5F97;&#x540D;&#xFF0C;&#x76F4;&#x63A5;&#x5BF9;&#x5E94;&#x4E8E;&#x5176;&#x4E2D;&#x7684;lambda&#x62BD;&#x8C61;(lambda abstraction)&#xFF0C;&#x662F;&#x4E00;&#x4E2A;&#x533F;&#x540D;&#x51FD;&#x6570;&#xFF0C;&#x5373;&#x6CA1;&#x6709;&#x51FD;&#x6570;&#x540D;&#x7684;&#x51FD;&#x6570;&#x3002;Lambda&#x8868;&#x8FBE;&#x5F0F;&#x53EF;&#x4EE5;&#x8868;&#x793A;&#x95ED;&#x5305;&#xFF08;&#x6CE8;&#x610F;&#x548C;&#x6570;&#x5B66;&#x4F20;&#x7EDF;&#x610F;&#x4E49;&#x4E0A;&#x7684;&#x4E0D;&#x540C;&#xFF09;&#x3002;</p>
</blockquote>
<p>Python&#x4E2D;&#x7684;lambda&#x8868;&#x8FBE;&#x5F0F;&#xFF1A;</p>
<pre><code>add = lambda x, y:x+y
</code></pre>
<p>C++&#x4E2D;&#x7684;lambda&#xFF1A;</p>
<pre><code>[](int x, int y) -&gt; int{ return x + y; }
</code></pre>
<p>Kotlin&#x4E2D;&#x7684;lambda:</p>
<pre><code>var add = {x: Int, y: Int -&gt; x + y}
</code></pre>
<p>Kotlin &#x4F5C;&#x4E3A;&#x4E00;&#x4E2A;&#x5F3A;&#x7C7B;&#x578B;&#x8BED;&#x8A00;&#x8FD8;&#x662F;&#x6BD4;&#x8F83;&#x7B80;&#x6D01;&#x7684;&#x3002;<br>
&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x8FD9;&#x6837;&#x4F7F;&#x7528;&#x4E00;&#x4E2A;lambda&#x8868;&#x8FBE;&#x5F0F;&#xFF1A;</p>
<pre><code>fun main(args: Array) {
val sumLambda = {a: Int, b: Int -&gt; a + b}
sumLambda(1, 2)
}
</code></pre>
<p>&#x5B83;&#x53EF;&#x4EE5;&#x50CF;&#x51FD;&#x6570;&#x4E00;&#x6837;&#x4F7F;&#x7528;()&#x8C03;&#x7528;&#xFF0C;&#x5728;kotlin&#x4E2D;&#x64CD;&#x4F5C;&#x7B26;&#x662F;&#x53EF;&#x4EE5;&#x91CD;&#x8F7D;&#x7684;&#xFF0C;()&#x64CD;&#x4F5C;&#x7B26;&#x5BF9;&#x5E94;&#x7684;&#x5C31;&#x662F;&#x7C7B;&#x7684;&#x91CD;&#x8F7D;&#x51FD;&#x6570;invoke()&#x3002;<br>
&#x4F60;&#x8FD8;&#x53EF;&#x4EE5;&#x60F3;&#x4E0B;&#x9762;&#x8FD9;&#x6837;&#x5B9A;&#x4E49;&#x4E00;&#x4E2A;&#x53D8;&#x91CF;&#xFF1A;</p>
<pre><code>val numFun: (a: Int, b: Int) -&gt; Int
</code></pre>
<p>&#x5B83;&#x4E0D;&#x662F;&#x4E00;&#x4E2A;&#x666E;&#x901A;&#x7684;&#x53D8;&#x91CF;&#xFF0C;&#x5B83;&#x5FC5;&#x987B;&#x6307;&#x5411;&#x4E00;&#x4E2A;&#x51FD;&#x6570;&#xFF0C;&#x5E76;&#x4E14;&#x51FD;&#x6570;&#x7B7E;&#x540D;&#x5FC5;&#x987B;&#x4E00;&#x81F4;&#xFF1A;</p>
<pre><code>fun main(args: Array) {
    val sumLambda = {a: Int, b: Int -&gt; a + b}
    var numFun: (a: Int, b: Int) -&gt; Int
    numFun = {a: Int, b: Int -&gt; a + b}
    numFun = sumLambda
    numFun = ::sum
    numFun(1,2)
}

fun sum(a: Int, b: Int): Int {
    return a + b
}
</code></pre>
<p>&#x53EF;&#x4EE5;&#x770B;&#x5230;&#x8FD9;&#x4E2A;&#x53D8;&#x91CF;&#x53EF;&#x4EE5;&#x7B49;&#x4E8E;&#x4E00;&#x4E2A;lambda&#x8868;&#x8FBE;&#x5F0F;&#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x7B49;&#x4E8E;&#x53E6;&#x4E00;&#x4E2A;lambda&#x8868;&#x8FBE;&#x5F0F;&#x53D8;&#x91CF;&#xFF0C;&#x8FD8;&#x53EF;&#x4EE5;&#x7B49;&#x4E8E;&#x4E00;&#x4E2A;&#x666E;&#x901A;&#x51FD;&#x6570;&#xFF0C;&#x4F46;&#x662F;&#x5728;&#x51FD;&#x6570;&#x540D;&#x524D;&#x9700;&#x8981;&#x52A0;&#x4E0A;(::)&#x6765;&#x83B7;&#x53D6;&#x51FD;&#x6570;&#x5F15;&#x7528;&#x3002;<br>
&#x8FD9;&#x4E2A;&#x7C7B;&#x4F3C;C<ins>&#x4E2D;&#x7684;&#x51FD;&#x6570;&#x6307;&#x9488;&#xFF0C;&#x7136;&#x800C;&#x5728;Python&#x4E2D;&#x53EF;&#x4EE5;&#x76F4;&#x63A5;&#x4F7F;&#x7528;&#x51FD;&#x6570;&#x540D;&#x4F5C;&#x4E3A;&#x51FD;&#x6570;&#x5F15;&#x7528;&#xFF0C;&#x4E0B;&#x9762;&#x662F;c</ins>&#x51FD;&#x6570;&#x6307;&#x9488;&#x7684;&#x4F8B;&#x5B50;&#xFF1A;</p>
<pre><code>#include

using namespace std;

void swap(int &amp;x, int &amp;y);

int main(int arg, char* args[]) {
	int x = 10;
	int y = 20;

	void (*methodPtr)(int &amp;x, int &amp;y);//&#x58F0;&#x660E;&#x4E00;&#x4E2A;&#x51FD;&#x6570;&#x6307;&#x9488;
	methodPtr = &amp;swap; //&#x51FD;&#x6570;&#x6307;&#x9488;&#x8D4B;&#x503C;
	methodPtr = swap;//&#x53D6;&#x5730;&#x5740;&#x7B26;&#x53EF;&#x7701;&#x7565;,&#x6548;&#x679C;&#x548C;&#x4E0A;&#x9762;&#x4E00;&#x81F4;
	methodPtr(x, y); //&#x50CF;&#x7ED9;&#x51FD;&#x6570;&#x8D77;&#x4E86;&#x4E00;&#x4E2A;&#x522B;&#x540D;&#xFF0C;&#x53EF;&#x4EE5;&#x76F4;&#x63A5;&#x4F7F;&#x7528;&#xFF08;&#xFF09;&#x8C03;&#x7528;
	cout &lt;&lt; &quot;x:&quot; &lt;&lt; x &lt;&lt; &quot; y:&quot; &lt;&lt; y &lt;&lt; endl; //x:20 y:10
}

void swap(int &amp;x, int &amp;y) {
	int tmp = x;
	x = y;
	y = tmp;
}
</code></pre>
<p>&#x56DE;&#x5230;Kotlin&#xFF0C;&#x6211;&#x4EEC;&#x8FD8;&#x53EF;&#x4EE5;&#x5C06;&#x4E00;&#x4E2A;&#x51FD;&#x6570;&#x4F20;&#x9012;&#x7ED9;&#x53E6;&#x4E00;&#x4E2A;&#x51FD;&#x6570;&#xFF0C;&#x6BD4;&#x5982;&#xFF1A;</p>
<pre><code>//&#x51FD;&#x6570;&#x53C2;&#x6570;
fun  doMap(list: List, function: (it: T) -&gt; Any) {
    for (item in list) {
        function(item)
    }
}
</code></pre>
<p>&#x7B2C;&#x4E00;&#x4E2A;&#x53C2;&#x6570;&#x662F;&#x4E00;&#x4E2A;List&#xFF0C;&#x7B2C;&#x4E8C;&#x4E2A;&#x53C2;&#x6570;&#x662F;&#x4E00;&#x4E2A;&#x51FD;&#x6570;&#xFF0C;&#x76EE;&#x7684;&#x5C31;&#x662F;&#x5C06;List&#x4E2D;&#x7684;&#x6BCF;&#x4E00;&#x4E2A;&#x5143;&#x7D20;&#x90FD;&#x6267;&#x884C;&#x4E00;&#x6B21;&#x7B2C;&#x4E8C;&#x4E2A;&#x51FD;&#x6570;&#x3002;&#x4F7F;&#x7528;&#x65B9;&#x6CD5;&#x5982;&#x4E0B;&#xFF1A;</p>
<pre><code>val strList = listOf(&quot;h&quot; ,&quot;e&quot;, &quot;1&quot;, &quot;a&quot;, &quot;b&quot;, &quot;2&quot;, &quot; &quot;, &quot;&quot;, &quot;c&quot;, &quot;5&quot;, &quot;7&quot;, &quot;F&quot;)
doMap(strList, {item -&gt;print(&quot;item: ${upperLetter(item)}, &quot;) })

fun upperLetter(item: String): String {
    if (item.isLetter()) {
        return item.toUpperCase()
    }
    return item
}
</code></pre>
<p>&#x7B2C;&#x4E8C;&#x4E2A;&#x53C2;&#x6570;&#x76F4;&#x63A5;&#x4F20;&#x8FDB;&#x53BB;&#x4E86;&#x4E00;&#x4E2A;lambda&#x8868;&#x8FBE;&#x5F0F;&#xFF0C;&#x5F53;&#x7136;&#x4E5F;&#x53EF;&#x4EE5;&#x4F20;&#x4E00;&#x4E2A;&#x51FD;&#x6570;&#x5F15;&#x7528;&#xFF1A;</p>
<pre><code>val strList = listOf(&quot;h&quot; ,&quot;e&quot;, &quot;1&quot;, &quot;a&quot;, &quot;b&quot;, &quot;2&quot;, &quot; &quot;, &quot;&quot;, &quot;c&quot;, &quot;5&quot;, &quot;7&quot;, &quot;F&quot;)
doMap(strList, ::printUpperLetter)

fun printUpperLetter(item: String) {
    print(&quot;item: ${upperLetter(item)}, &quot;)
}

fun upperLetter(item: String): String {
    if (item.isLetter()) {
        return item.toUpperCase()
    }
    return item
}
</code></pre>
<p>&#x6548;&#x679C;&#x548C;&#x4E0A;&#x9762;&#x7684;&#x4EE3;&#x7801;&#x4E00;&#x6837;&#x3002;<br>
&#x5728;C++&#x4E2D;&#x4F7F;&#x7528;&#x51FD;&#x6570;&#x6307;&#x9488;&#x53EF;&#x4EE5;&#x5B9E;&#x73B0;&#x7C7B;&#x4F3C;&#x7684;&#x6548;&#x679C;&#xFF1A;</p>
<pre><code>using namespace std;

void mMap(vector list, void (*fun)(int item));

int main(int arg, char* args[]) {
	vector list = {2,3,4,3,2,1,2};
	mMap(list, [](int item) -&gt; void { cout &lt;&lt; item &lt;&lt; endl; });
}

void mMap(vector list, void (*fun)(int item)) {
	for(int it : list) {
	    fun(it);
	}
}
</code></pre>
<p>&#x518D;&#x6B21;&#x56DE;&#x5230;Kotlin&#xFF0C;&#x5982;&#x679C;&#x51FD;&#x6570;&#x4F5C;&#x4E3A;&#x5165;&#x53C2;&#x5728;&#x5165;&#x53C2;&#x5217;&#x8868;&#x7684;&#x6700;&#x540E;&#x4E00;&#x4E2A;&#xFF0C;&#x4F60;&#x8FD8;&#x53EF;&#x4EE5;&#x8FD9;&#x6837;&#x505A;&#xFF0C;&#x76F4;&#x63A5;&#x5199;&#x5728;&#x5927;&#x62EC;&#x53F7;&#x5185;&#xFF1A;</p>
<pre><code>fun main(args: Array) {
    log { sum(1,2) }
}

fun  log(function: () -&gt; T) {
    val result = function()
    println(&quot;result -&gt; $result&quot;)
}
</code></pre>
<p>&#x662F;&#x4E0D;&#x662F;&#x6709;&#x70B9;&#x50CF;gradle&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#x7684;&#x5199;&#x6CD5;&#xFF0C;&#x6240;&#x4EE5;Kotlin&#x53EF;&#x4EE5;&#x5F88;&#x65B9;&#x4FBF;&#x7684;&#x7F16;&#x5199; &#x9886;&#x57DF;&#x4E13;&#x7528;&#x8BED;&#x8A00;(DSL)</p>
<p>&#x53E6;&#x5916;Kotlin&#x8FD8;&#x652F;&#x6301;&#x5C40;&#x90E8;&#x51FD;&#x6570;&#x548C;&#x51FD;&#x6570;&#x4F5C;&#x4E3A;&#x8FD4;&#x56DE;&#x503C;&#xFF0C;&#x770B;&#x4E0B;&#x9762;&#x7684;&#x4EE3;&#x7801;&#xFF1A;</p>
<pre><code>fun main(args: Array) {
    val addResult = lateAdd(2, 4)
    addResult()
}
//&#x5C40;&#x90E8;&#x51FD;&#x6570;&#xFF0C;&#x51FD;&#x6570;&#x5F15;&#x7528;
fun lateAdd(a: Int, b: Int): Function0 {
    fun add(): Int {
        return a + b
    }
    return ::add
}
</code></pre>
<p>&#x5728;lateAdd&#x5185;&#x90E8;&#x5B9A;&#x4E49;&#x4E86;&#x4E00;&#x4E2A;&#x5C40;&#x90E8;&#x51FD;&#x6570;&#xFF0C;&#x6700;&#x540E;&#x8FD4;&#x56DE;&#x4E86;&#x8BE5;&#x5C40;&#x90E8;&#x51FD;&#x6570;&#x7684;&#x5F15;&#x7528;&#xFF0C;&#x5BF9;&#x7ED3;&#x679C;&#x4F7F;&#x7528;()&#x64CD;&#x4F5C;&#x7B26;&#x62FF;&#x5230;&#x6700;&#x7EC8;&#x7684;&#x7ED3;&#x679C;&#xFF0C;&#x8FBE;&#x5230;&#x5EF6;&#x8FDF;&#x8BA1;&#x7B97;&#x7684;&#x76EE;&#x7684;&#x3002;</p>
<p>&#x51FD;&#x6570;&#x4F5C;&#x4E3A;&#x4E00;&#x7EA7;&#x516C;&#x6C11;&#x5F53;&#x7136;&#x53EF;&#x4EE5;&#x50CF;&#x666E;&#x901A;&#x5BF9;&#x8C61;&#x4E00;&#x6837;&#x653E;&#x8FDB;map&#x4E2D;&#xFF0C;&#x6BD4;&#x5982;&#x4E0B;&#x9762;&#x8FD9;&#x6837;&#xFF1A;</p>
<pre><code>val funs = mapOf(&quot;sum&quot; to ::sum)
val mapFun = funs[&quot;sum&quot;]
if (mapFun != null) {
   val result = mapFun(1,2)
   println(&quot;sum result -&gt; $result&quot;)
}

fun sum(a: Int, b: Int): Int {
    return a + b
}
</code></pre>
<p>&#x5C06;&#x4E00;&#x4E2A;&#x51FD;&#x6570;&#x5F15;&#x7528;&#x4F5C;&#x4E3A;value&#x653E;&#x8FDB;&#x4E86;map&#x4E2D;&#xFF0C;&#x53D6;&#x51FA;&#x6765;&#x4E4B;&#x540E;&#x4F7F;&#x7528;()&#x64CD;&#x4F5C;&#x7B26;&#x8C03;&#x7528;&#xFF0C;&#x53EF;&#x4EE5;&#x7B80;&#x5316;&#x4E00;&#x4E9B;if,else&#x7684;&#x573A;&#x666F;&#x3002;</p>
<p>&#x57FA;&#x4E8E;&#x4EE5;&#x4E0A;&#x51FD;&#x6570;&#x5F0F;&#x7F16;&#x7A0B;&#x7684;&#x7279;&#x6027;&#xFF0C;Kotlin&#x53EF;&#x4EE5;&#x50CF;RxJava&#x4E00;&#x6837;&#x5F88;&#x65B9;&#x4FBF;&#x7684;&#x8FDB;&#x884C;&#x76F8;&#x5E94;&#x5F0F;&#x7F16;&#x7A0B;&#xFF0C;&#x6BD4;&#x5982;&#xFF1A;</p>
<pre><code>fun printUpperLetter(list: List) {
    list
            .filter (fun(item):Boolean {
                return item.isNotEmpty()
            })
            .filter { item -&gt; item.isNotBlank()}
            .filter {
                item -&gt;
                if (item.isNullOrEmpty()) {
                    return@filter false
                }
                return@filter item.matches(Regex(&quot;^[a-z|A-Z]$&quot;))
            }
            .filter { it.isLetter() }
            .map(String::toUpperCase)
            .sortedBy { it }
            .forEach { print(&quot;$it, &quot;) }
    println()
}
</code></pre>
<p>&#x4E0A;&#x9762;&#x7684;&#x4EE3;&#x7801;&#x53EA;&#x662F;&#x505A;&#x6F14;&#x793A;&#xFF0C;&#x5E76;&#x65E0;&#x5B9E;&#x9645;&#x610F;&#x4E49;&#x3002;&#x5177;&#x4F53;&#x8BED;&#x6CD5;&#x8BF7;&#x67E5;&#x770B;&#x5B98;&#x65B9;&#x6587;&#x6863;&#x3002;<br>
&#x6211;&#x76F8;&#x4FE1;Kotlin&#x4F5C;&#x4E3A;&#x4E00;&#x79CD;&#x5F3A;&#x7C7B;&#x578B;&#x7684;&#x73B0;&#x4EE3;&#x5316;&#x8BED;&#x8A00;&#x53EF;&#x4EE5;&#x5728;&#x4FDD;&#x8BC1;&#x7A33;&#x5B9A;&#x6027;&#x7684;&#x540C;&#x65F6;&#x6781;&#x5927;&#x5730;&#x63D0;&#x9AD8;&#x5F00;&#x53D1;&#x8005;&#x7684;&#x5F00;&#x53D1;&#x6548;&#x7387;&#x3002;</p>
<blockquote>
<blockquote>
<p>&#x8F6C;&#x8F7D;&#x81EA;&#xFF1A;<a href="https://pqpo.me/2017/05/25/kotlin-function/" target="_blank" rel="external nofollow noopener noreferrer">Kotlin &#x51FD;&#x6570;&#x4E0E;&#x51FD;&#x6570;&#x5F0F;&#x7F16;&#x7A0B;</a></p>
</blockquote>
</blockquote>]]></content>
    
    <summary type="html">
    
      函数作为Kotlin中的一级公民可以像其他对象一样作为函数的输入与输出，这也就是Java程序员转到Kotlin觉得变化最大，最难理解的一点。如果你之前学过Python或者C++11可能会对此比较容易接受。这也是为什么本文以介绍Kotlin的函数及函数式编程为主。
    
    </summary>
    
      <category term="移动开发" scheme="http://ngudream.com/categories/%E7%A7%BB%E5%8A%A8%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="Kotlin" scheme="http://ngudream.com/tags/Kotlin/"/>
    
  </entry>
  
  <entry>
    <title>Protobuf的优势在哪里？</title>
    <link href="http://ngudream.com/2017/08/15/java-protobuf-superior/"/>
    <id>http://ngudream.com/2017/08/15/java-protobuf-superior/</id>
    <published>2017-08-15T10:45:58.000Z</published>
    <updated>2017-08-15T11:07:37.879Z</updated>
    
    <content type="html"><![CDATA[<style>
br{ 
line-height:2px; 
} 
</style>
<h2 id="&#x4EC0;&#x4E48;&#x662F;protobuf"><a class="header-anchor" href="#&#x4EC0;&#x4E48;&#x662F;protobuf"></a>&#x4EC0;&#x4E48;&#x662F;Protobuf</h2>
<p>Protobuf&#x662F;&#x4E00;&#x79CD;&#x8F7B;&#x4FBF;&#x9AD8;&#x6548;&#x7684;&#x7ED3;&#x6784;&#x5316;&#x6570;&#x636E;&#x5B58;&#x50A8;&#x683C;&#x5F0F;&#xFF0C;&#x53EF;&#x4EE5;&#x7528;&#x4E8E;&#x7ED3;&#x6784;&#x5316;&#x6570;&#x636E;&#x4E32;&#x884C;&#x5316;&#xFF0C;&#x6216;&#x8005;&#x8BF4;&#x5E8F;&#x5217;&#x5316;&#x3002;&#x5B83;&#x7684;&#x8BBE;&#x8BA1;&#x975E;&#x5E38;&#x9002;&#x7528;&#x4E8E;&#x5728;&#x7F51;&#x7EDC;&#x901A;&#x8BAF;&#x4E2D;&#x7684;&#x6570;&#x636E;&#x8F7D;&#x4F53;&#xFF0C;&#x5F88;&#x9002;&#x5408;&#x505A;&#x6570;&#x636E;&#x5B58;&#x50A8;&#x6216; RPC &#x6570;&#x636E;&#x4EA4;&#x6362;&#x683C;&#x5F0F;&#xFF0C;&#x5B83;&#x5E8F;&#x5217;&#x5316;&#x51FA;&#x6765;&#x7684;&#x6570;&#x636E;&#x91CF;&#x5C11;&#x518D;&#x52A0;&#x4E0A;&#x4EE5;K-V&#x7684;&#x65B9;&#x5F0F;&#x6765;&#x5B58;&#x50A8;&#x6570;&#x636E;&#xFF0C;&#x5BF9;&#x6D88;&#x606F;&#x7684;&#x7248;&#x672C;&#x517C;&#x5BB9;&#x6027;&#x975E;&#x5E38;&#x5F3A;&#xFF0C;&#x53EF;&#x7528;&#x4E8E;&#x901A;&#x8BAF;&#x534F;&#x8BAE;&#x3001;&#x6570;&#x636E;&#x5B58;&#x50A8;&#x7B49;&#x9886;&#x57DF;&#x7684;&#x8BED;&#x8A00;&#x65E0;&#x5173;&#x3001;&#x5E73;&#x53F0;&#x65E0;&#x5173;&#x3001;&#x53EF;&#x6269;&#x5C55;&#x7684;&#x5E8F;&#x5217;&#x5316;&#x7ED3;&#x6784;&#x6570;&#x636E;&#x683C;&#x5F0F;&#x3002;</p>
<h3 id="protobuf-&#x6D88;&#x606F;"><a class="header-anchor" href="#protobuf-&#x6D88;&#x606F;"></a>Protobuf &#x6D88;&#x606F;</h3>
<p>message&#x7531;&#x81F3;&#x5C11;&#x4E00;&#x4E2A;&#x5B57;&#x6BB5;&#x7EC4;&#x5408;&#x800C;&#x6210;&#xFF0C;&#x7C7B;&#x4F3C;&#x4E8E;C&#x8BED;&#x8A00;&#x4E2D;&#x7684;&#x7ED3;&#x6784;&#x3002;&#x6BCF;&#x4E2A;&#x5B57;&#x6BB5;&#x90FD;&#x6709;&#x4E00;&#x5B9A;&#x7684;&#x683C;&#x5F0F;&#xFF1A;</p>
<pre><code>&#x9650;&#x5B9A;&#x4FEE;&#x9970;&#x7B26; | &#x6570;&#x636E;&#x7C7B;&#x578B; | &#x5B57;&#x6BB5;&#x540D;&#x79F0; | = | &#x5B57;&#x6BB5;&#x7F16;&#x7801;&#x503C; | [&#x5B57;&#x6BB5;&#x9ED8;&#x8BA4;&#x503C;]
</code></pre>
<h3 id="&#x9650;&#x5B9A;&#x4FEE;&#x9970;&#x7B26;"><a class="header-anchor" href="#&#x9650;&#x5B9A;&#x4FEE;&#x9970;&#x7B26;"></a>&#x9650;&#x5B9A;&#x4FEE;&#x9970;&#x7B26;</h3>
<ul>
<li>message&#x5C31;&#x662F;&#x76F8;&#x5F53;&#x4E8E;class</li>
<li>Required&#xFF1A;&#x8868;&#x793A;&#x662F;&#x4E00;&#x4E2A;&#x5FC5;&#x987B;&#x5B57;&#x6BB5;&#xFF0C;&#x5FC5;&#x987B;&#x76F8;&#x5BF9;&#x4E8E;&#x53D1;&#x9001;&#x65B9;&#xFF0C;&#x5728;&#x53D1;&#x9001;&#x6D88;&#x606F;&#x4E4B;&#x524D;&#x5FC5;&#x987B;&#x8BBE;&#x7F6E;&#x8BE5;&#x5B57;&#x6BB5;&#x7684;&#x503C;&#xFF1B;&#x5BF9;&#x4E8E;&#x63A5;&#x6536;&#x65B9;&#xFF0C;&#x5FC5;&#x987B;&#x80FD;&#x591F;&#x8BC6;&#x522B;&#x8BE5;&#x5B57;&#x6BB5;&#x7684;&#x610F;&#x601D;&#x3002;&#x53D1;&#x9001;&#x4E4B;&#x524D;&#x6CA1;&#x6709;&#x8BBE;&#x7F6E;required&#x5B57;&#x6BB5;&#x6216;&#x8005;&#x65E0;&#x6CD5;&#x8BC6;&#x522B;required&#x5B57;&#x6BB5;&#x90FD;&#x4F1A;&#x5F15;&#x53D1;&#x7F16;&#x89E3;&#x7801;&#x5F02;&#x5E38;&#xFF0C;&#x5BFC;&#x81F4;&#x6D88;&#x606F;&#x88AB;&#x4E22;&#x5F03;&#x3002;</li>
<li>Optional&#xFF1A;&#x8868;&#x793A;&#x662F;&#x4E00;&#x4E2A;&#x53EF;&#x9009;&#x5B57;&#x6BB5;&#xFF0C;&#x53EF;&#x9009;&#x5BF9;&#x4E8E;&#x53D1;&#x9001;&#x65B9;&#xFF0C;&#x5728;&#x53D1;&#x9001;&#x6D88;&#x606F;&#x65F6;&#xFF0C;&#x53EF;&#x4EE5;&#x6709;&#x9009;&#x62E9;&#x6027;&#x7684;&#x8BBE;&#x7F6E;&#x6216;&#x8005;&#x4E0D;&#x8BBE;&#x7F6E;&#x8BE5;&#x5B57;&#x6BB5;&#x7684;&#x503C;&#xFF1B;&#x5BF9;&#x4E8E;&#x63A5;&#x6536;&#x65B9;&#xFF0C;&#x5982;&#x679C;&#x80FD;&#x591F;&#x8BC6;&#x522B;&#x53EF;&#x9009;&#x5B57;&#x6BB5;&#x5C31;&#x8FDB;&#x884C;&#x76F8;&#x5E94;&#x7684;&#x5904;&#x7406;&#xFF0C;&#x5982;&#x679C;&#x65E0;&#x6CD5;&#x8BC6;&#x522B;&#xFF0C;&#x5219;&#x5FFD;&#x7565;&#x8BE5;&#x5B57;&#x6BB5;&#xFF0C;&#x6D88;&#x606F;&#x4E2D;&#x7684;&#x5176;&#x5B83;&#x5B57;&#x6BB5;&#x6B63;&#x5E38;&#x5904;&#x7406;&#x3002;&#x5F88;&#x591A;&#x63A5;&#x53E3;&#x5728;&#x5347;&#x7EA7;&#x7248;&#x672C;&#x4E2D;&#x90FD;&#x628A;&#x540E;&#x6765;&#x6DFB;&#x52A0;&#x7684;&#x5B57;&#x6BB5;&#x90FD;&#x7EDF;&#x4E00;&#x7684;&#x8BBE;&#x7F6E;&#x4E3A;optional&#x5B57;&#x6BB5;&#xFF0C;&#x8FD9;&#x6837;&#x8001;&#x7684;&#x7248;&#x672C;&#x65E0;&#x9700;&#x5347;&#x7EA7;&#x7A0B;&#x5E8F;&#x4E5F;&#x53EF;&#x4EE5;&#x6B63;&#x5E38;&#x7684;&#x4E0E;&#x65B0;&#x7684;&#x8F6F;&#x4EF6;&#x8FDB;&#x884C;&#x901A;&#x4FE1;&#xFF0C;&#x53EA;&#x4E0D;&#x8FC7;&#x65B0;&#x7684;&#x5B57;&#x6BB5;&#x65E0;&#x6CD5;&#x8BC6;&#x522B;&#x800C;&#x5DF2;&#xFF0C;&#x56E0;&#x4E3A;&#x5E76;&#x4E0D;&#x662F;&#x6BCF;&#x4E2A;&#x8282;&#x70B9;&#x90FD;&#x9700;&#x8981;&#x65B0;&#x7684;&#x529F;&#x80FD;&#xFF0C;&#x56E0;&#x6B64;&#x53EF;&#x4EE5;&#x505A;&#x5230;&#x6309;&#x9700;&#x5347;&#x7EA7;&#x548C;&#x5E73;&#x6ED1;&#x8FC7;&#x6E21;&#x3002;</li>
<li>Repeated&#xFF1A;&#x8868;&#x793A;&#x8BE5;&#x5B57;&#x6BB5;&#x53EF;&#x4EE5;&#x5305;&#x542B;0 ~ N&#x4E2A;&#x5143;&#x7D20;&#xFF0C;&#x53EF;&#x4EE5;&#x770B;&#x4F5C;&#x662F;&#x5728;&#x4F20;&#x9012;&#x6570;&#x7EC4;&#x3002;</li>
</ul>
<h2 id="protobuf&#x7684;&#x4F18;&#x52BF;"><a class="header-anchor" href="#protobuf&#x7684;&#x4F18;&#x52BF;"></a>Protobuf&#x7684;&#x4F18;&#x52BF;</h2>
<ul>
<li>&#xFF08;1&#xFF09;&#x5E8F;&#x5217;&#x5316;&#x540E;&#x4F53;&#x79EF;&#x76F8;&#x6BD4;Json&#x548C;XML&#x5F88;&#x5C0F;&#xFF0C;&#x9002;&#x5408;&#x7F51;&#x7EDC;&#x4F20;&#x8F93;</li>
<li>&#xFF08;2&#xFF09;&#x652F;&#x6301;&#x8DE8;&#x5E73;&#x53F0;&#x591A;&#x8BED;&#x8A00;</li>
<li>&#xFF08;3&#xFF09;&#x6D88;&#x606F;&#x683C;&#x5F0F;&#x5347;&#x7EA7;&#x548C;&#x517C;&#x5BB9;&#x6027;&#x4E0D;&#x9519;&#xFF0C;&#x201C;&#x5411;&#x540E;&#x201D;&#x517C;&#x5BB9;&#x6027;&#x597D;</li>
<li>&#xFF08;4&#xFF09;&#x5E8F;&#x5217;&#x5316;&#x53CD;&#x5E8F;&#x5217;&#x5316;&#x901F;&#x5EA6;&#x5F88;&#x5FEB;&#xFF0C;&#x5FEB;&#x4E8E;Json&#x7684;&#x5904;&#x7406;&#x901F;&#x901F;</li>
<li>&#xFF08;5&#xFF09;Protobuf &#x8BED;&#x4E49;&#x66F4;&#x6E05;&#x6670;&#xFF0C;&#x65E0;&#x9700;&#x7C7B;&#x4F3C; XML &#x89E3;&#x6790;&#x5668;&#x7684;&#x4E1C;&#x897F;&#xFF08;&#x56E0;&#x4E3A; Protobuf &#x7F16;&#x8BD1;&#x5668;&#x4F1A;&#x5C06; .proto &#x6587;&#x4EF6;&#x7F16;&#x8BD1;&#x751F;&#x6210;&#x5BF9;&#x5E94;&#x7684;&#x6570;&#x636E;&#x8BBF;&#x95EE;&#x7C7B;&#x4EE5;&#x5BF9; Protobuf &#x6570;&#x636E;&#x8FDB;&#x884C;&#x5E8F;&#x5217;&#x5316;&#x3001;&#x53CD;&#x5E8F;&#x5217;&#x5316;&#x64CD;&#x4F5C;&#xFF09;&#x3002;</li>
</ul>
<p>Protobuf&#x4E0E;JSON&#x7684;&#x6570;&#x636E;&#x5927;&#x5C0F;&#x5BF9;&#x6BD4;&#xFF1A;</p>
<p>&#xFF08;1&#xFF09;Protobuf&#x7684;&#x6570;&#x636E;&#x5927;&#x5C0F;</p>
<div align="center">
<img data-original="/2017/08/15/java-protobuf-superior/fed19654-3ea0-3e49-b5ab-4a722a3c655f.png" class="lazy">
</div>
<p>&#xFF08;2&#xFF09;JSON&#x7684;&#x6570;&#x636E;&#x5927;&#x5C0F;</p>
<div align="center">
<img data-original="/2017/08/15/java-protobuf-superior/9369a50d-f9ea-3f01-bd1f-fabba514dbec.png" class="lazy">
</div>
<h2 id="&#x4E3A;&#x4EC0;&#x4E48;protobuf&#x7684;&#x901F;&#x5EA6;&#x5FEB;"><a class="header-anchor" href="#&#x4E3A;&#x4EC0;&#x4E48;protobuf&#x7684;&#x901F;&#x5EA6;&#x5FEB;"></a>&#x4E3A;&#x4EC0;&#x4E48;Protobuf&#x7684;&#x901F;&#x5EA6;&#x5FEB;</h2>
<p>Protobuf &#x7684;&#x4E3B;&#x8981;&#x4F18;&#x70B9;&#x5728;&#x4E8E;&#x6027;&#x80FD;&#x9AD8;&#x3002;&#x5B83;&#x4EE5;&#x9AD8;&#x6548;&#x7684;&#x4E8C;&#x8FDB;&#x5236;&#x65B9;&#x5F0F;&#x5B58;&#x50A8;&#xFF0C;&#x6BD4; XML &#x5C0F; 3 &#x5230; 10 &#x500D;&#xFF0C;&#x5FEB; 20 &#x5230; 100 &#x500D;&#x3002;<br>
&#x5BF9;&#x4E8E;&#x8FD9;&#x4E9B; &#x201C;&#x5C0F; 3 &#x5230; 10 &#x500D;&#x201D;,&#x201C;&#x5FEB; 20 &#x5230; 100 &#x500D;&#x201D;&#x7684;&#x8BF4;&#x6CD5;&#xFF0C;&#x4E25;&#x8083;&#x7684;&#x7A0B;&#x5E8F;&#x5458;&#x9700;&#x8981;&#x4E00;&#x4E2A;&#x89E3;&#x91CA;&#x3002;&#x56E0;&#x6B64;&#x5728;&#x672C;&#x6587;&#x7684;&#x6700;&#x540E;&#xFF0C;&#x8BA9;&#x6211;&#x4EEC;&#x7A0D;&#x5FAE;&#x6DF1;&#x5165; Protobuf &#x7684;&#x5185;&#x90E8;&#x5B9E;&#x73B0;&#x5427;&#x3002;</p>
<p>&#x6709;&#x4E24;&#x9879;&#x6280;&#x672F;&#x4FDD;&#x8BC1;&#x4E86;&#x91C7;&#x7528; Protobuf &#x7684;&#x7A0B;&#x5E8F;&#x80FD;&#x83B7;&#x5F97;&#x76F8;&#x5BF9;&#x4E8E; XML &#x6781;&#x5927;&#x7684;&#x6027;&#x80FD;&#x63D0;&#x9AD8;&#x3002;</p>
<h3 id="zigzag-&#x7F16;&#x7801;"><a class="header-anchor" href="#zigzag-&#x7F16;&#x7801;"></a>Zigzag &#x7F16;&#x7801;</h3>
<p>&#x7B2C;&#x4E00;&#x70B9;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x8003;&#x5BDF; Protobuf &#x5E8F;&#x5217;&#x5316;&#x540E;&#x7684;&#x4FE1;&#x606F;&#x5185;&#x5BB9;&#x3002;&#x60A8;&#x53EF;&#x4EE5;&#x770B;&#x5230; Protocol Buffer &#x4FE1;&#x606F;&#x7684;&#x8868;&#x793A;&#x975E;&#x5E38;&#x7D27;&#x51D1;&#xFF0C;&#x8FD9;&#x610F;&#x5473;&#x7740;&#x6D88;&#x606F;&#x7684;&#x4F53;&#x79EF;&#x51CF;&#x5C11;&#xFF0C;&#x81EA;&#x7136;&#x9700;&#x8981;&#x66F4;&#x5C11;&#x7684;&#x8D44;&#x6E90;&#x3002;&#x6BD4;&#x5982;&#x7F51;&#x7EDC;&#x4E0A;&#x4F20;&#x8F93;&#x7684;&#x5B57;&#x8282;&#x6570;&#x66F4;&#x5C11;&#xFF0C;&#x9700;&#x8981;&#x7684; IO &#x66F4;&#x5C11;&#x7B49;&#xFF0C;&#x4ECE;&#x800C;&#x63D0;&#x9AD8;&#x6027;&#x80FD;&#x3002;&#x8FD9;&#x4E2A;&#x5229;&#x76CA;&#x4E8E;Protobuf &#x91C7;&#x7528;&#x7684;&#x975E;&#x5E38;&#x5DE7;&#x5999;&#x7684; Encoding &#x65B9;&#x6CD5;&#xFF1A;Zigzag &#x7F16;&#x7801;&#x3002;</p>
<p>&#x4ECB;&#x7ECD;Zigzag&#x7F16;&#x7801;&#x524D;&#xFF0C;&#x5148;&#x666E;&#x53CA;&#x4E00;&#x4E0B;&#x4E00;&#x4E2A;&#x53EB;&#x505A; Varint &#x7684;&#x672F;&#x8BED;&#x3002;</p>
<p>Varint &#x662F;&#x4E00;&#x79CD;&#x7D27;&#x51D1;&#x7684;&#x8868;&#x793A;&#x6570;&#x5B57;&#x7684;&#x65B9;&#x6CD5;&#x3002;&#x5B83;&#x7528;&#x4E00;&#x4E2A;&#x6216;&#x591A;&#x4E2A;&#x5B57;&#x8282;&#x6765;&#x8868;&#x793A;&#x4E00;&#x4E2A;&#x6570;&#x5B57;&#xFF0C;&#x503C;&#x8D8A;&#x5C0F;&#x7684;&#x6570;&#x5B57;&#x4F7F;&#x7528;&#x8D8A;&#x5C11;&#x7684;&#x5B57;&#x8282;&#x6570;&#x3002;&#x8FD9;&#x80FD;&#x51CF;&#x5C11;&#x7528;&#x6765;&#x8868;&#x793A;&#x6570;&#x5B57;&#x7684;&#x5B57;&#x8282;&#x6570;&#x3002;&#x6BD4;&#x5982;&#x5BF9;&#x4E8E; int32 &#x7C7B;&#x578B;&#x7684;&#x6570;&#x5B57;&#xFF0C;&#x4E00;&#x822C;&#x9700;&#x8981; 4 &#x4E2A; byte &#x6765;&#x8868;&#x793A;&#x3002;&#x4F46;&#x662F;&#x91C7;&#x7528; Varint&#xFF0C;&#x5BF9;&#x4E8E;&#x5F88;&#x5C0F;&#x7684; int32 &#x7C7B;&#x578B;&#x7684;&#x6570;&#x5B57;&#xFF0C;&#x5219;&#x53EF;&#x4EE5;&#x7528; 1 &#x4E2A; byte &#x6765;&#x8868;&#x793A;&#x3002;&#x5F53;&#x7136;&#x51E1;&#x4E8B;&#x90FD;&#x6709;&#x597D;&#x7684;&#x4E5F;&#x6709;&#x4E0D;&#x597D;&#x7684;&#x4E00;&#x9762;&#xFF0C;&#x91C7;&#x7528; Varint &#x8868;&#x793A;&#x6CD5;&#xFF0C;&#x5927;&#x7684;&#x6570;&#x5B57;&#x5219;&#x9700;&#x8981; 5 &#x4E2A; byte &#x6765;&#x8868;&#x793A;&#x3002;&#x4ECE;&#x7EDF;&#x8BA1;&#x7684;&#x89D2;&#x5EA6;&#x6765;&#x8BF4;&#xFF0C;&#x4E00;&#x822C;&#x4E0D;&#x4F1A;&#x6240;&#x6709;&#x7684;&#x6D88;&#x606F;&#x4E2D;&#x7684;&#x6570;&#x5B57;&#x90FD;&#x662F;&#x5927;&#x6570;&#xFF0C;&#x56E0;&#x6B64;&#x5927;&#x591A;&#x6570;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x91C7;&#x7528; Varint &#x540E;&#xFF0C;&#x53EF;&#x4EE5;&#x7528;&#x66F4;&#x5C11;&#x7684;&#x5B57;&#x8282;&#x6570;&#x6765;&#x8868;&#x793A;&#x6570;&#x5B57;&#x4FE1;&#x606F;&#x3002;</p>
<p>&#x6D88;&#x606F;&#x7ECF;&#x8FC7;&#x5E8F;&#x5217;&#x5316;&#x540E;&#x4F1A;&#x6210;&#x4E3A;&#x4E00;&#x4E2A;&#x4E8C;&#x8FDB;&#x5236;&#x6570;&#x636E;&#x6D41;&#xFF0C;&#x8BE5;&#x6D41;&#x4E2D;&#x7684;&#x6570;&#x636E;&#x4E3A;&#x4E00;&#x7CFB;&#x5217;&#x7684; Key-Value &#x5BF9;&#x3002;&#x4E0B;&#x9762;&#x5C31;&#x8BE6;&#x7EC6;&#x4ECB;&#x7ECD;&#x4E00;&#x4E0B;Varint&#x3002;</p>
<p>Varint &#x4E2D;&#x7684;&#x6BCF;&#x4E2A; byte &#x7684;&#x6700;&#x9AD8;&#x4F4D; bit &#x6709;&#x7279;&#x6B8A;&#x7684;&#x542B;&#x4E49;&#xFF0C;&#x5982;&#x679C;&#x8BE5;&#x4F4D;&#x4E3A; 1&#xFF0C;&#x8868;&#x793A;&#x540E;&#x7EED;&#x7684; byte &#x4E5F;&#x662F;&#x8BE5;&#x6570;&#x5B57;&#x7684;&#x4E00;&#x90E8;&#x5206;&#xFF0C;&#x5982;&#x679C;&#x8BE5;&#x4F4D;&#x4E3A; 0&#xFF0C;&#x5219;&#x7ED3;&#x675F;&#x3002;&#x5176;&#x4ED6;&#x7684; 7 &#x4E2A; bit &#x90FD;&#x7528;&#x6765;&#x8868;&#x793A;&#x6570;&#x5B57;&#x3002;&#x56E0;&#x6B64;&#x5C0F;&#x4E8E; 128 &#x7684;&#x6570;&#x5B57;&#x90FD;&#x53EF;&#x4EE5;&#x7528;&#x4E00;&#x4E2A; byte &#x8868;&#x793A;&#x3002;&#x5927;&#x4E8E; 128 &#x7684;&#x6570;&#x5B57;&#xFF0C;&#x6BD4;&#x5982; 300&#xFF0C;&#x4F1A;&#x7528;&#x4E24;&#x4E2A;&#x5B57;&#x8282;&#x6765;&#x8868;&#x793A;&#xFF1A;1010 1100 0000 0010&#x3002;</p>
<p>&#x5728;&#x8BA1;&#x7B97;&#x673A;&#x5185;&#xFF0C;&#x4E00;&#x4E2A;&#x8D1F;&#x6570;&#x4E00;&#x822C;&#x4F1A;&#x88AB;&#x8868;&#x793A;&#x4E3A;&#x4E00;&#x4E2A;&#x5F88;&#x5927;&#x7684;&#x6574;&#x6570;&#xFF0C;&#x56E0;&#x4E3A;&#x8BA1;&#x7B97;&#x673A;&#x5B9A;&#x4E49;&#x8D1F;&#x6570;&#x7684;&#x7B26;&#x53F7;&#x4F4D;&#x4E3A;&#x6570;&#x5B57;&#x7684;&#x6700;&#x9AD8;&#x4F4D;&#x3002;&#x5982;&#x679C;&#x91C7;&#x7528; Varint &#x8868;&#x793A;&#x4E00;&#x4E2A;&#x8D1F;&#x6570;&#xFF0C;&#x90A3;&#x4E48;&#x4E00;&#x5B9A;&#x9700;&#x8981; 5 &#x4E2A; byte&#x3002;&#x4E3A;&#x6B64; Google Protocol Buffer &#x5B9A;&#x4E49;&#x4E86; sint32 &#x8FD9;&#x79CD;&#x7C7B;&#x578B;&#xFF0C;&#x91C7;&#x7528; zigzag &#x7F16;&#x7801;&#xFF0C;&#x7528;&#x65E0;&#x7B26;&#x53F7;&#x6570;&#x6765;&#x8868;&#x793A;&#x6709;&#x7B26;&#x53F7;&#x6570;&#x5B57;&#xFF0C;&#x6B63;&#x6570;&#x548C;&#x8D1F;&#x6570;&#x4EA4;&#x9519;&#xFF0C;-1&#x5C06;&#x4F1A;&#x88AB;&#x7F16;&#x7801;&#x6210;1&#xFF0C;1&#x5C06;&#x4F1A;&#x88AB;&#x7F16;&#x7801;&#x6210;2&#xFF0C;-2&#x4F1A;&#x88AB;&#x7F16;&#x7801;&#x6210;3&#x3002;</p>
<p>&#x4F7F;&#x7528; zigzag &#x7F16;&#x7801;&#xFF0C;&#x7EDD;&#x5BF9;&#x503C;&#x5C0F;&#x7684;&#x6570;&#x5B57;&#xFF0C;&#x65E0;&#x8BBA;&#x6B63;&#x8D1F;&#x90FD;&#x53EF;&#x4EE5;&#x91C7;&#x7528;&#x8F83;&#x5C11;&#x7684; byte &#x6765;&#x8868;&#x793A;&#xFF0C;&#x5145;&#x5206;&#x5229;&#x7528;&#x4E86; Varint &#x8FD9;&#x79CD;&#x6280;&#x672F;&#x3002;&#x5176;&#x4ED6;&#x7684;&#x6570;&#x636E;&#x7C7B;&#x578B;&#xFF0C;&#x6BD4;&#x5982;&#x5B57;&#x7B26;&#x4E32;&#x7B49;&#x5219;&#x91C7;&#x7528;&#x7C7B;&#x4F3C;&#x6570;&#x636E;&#x5E93;&#x4E2D;&#x7684; varchar &#x7684;&#x8868;&#x793A;&#x65B9;&#x6CD5;&#xFF0C;&#x5373;&#x7528;&#x4E00;&#x4E2A; varint &#x8868;&#x793A;&#x957F;&#x5EA6;&#xFF0C;&#x7136;&#x540E;&#x5C06;&#x5176;&#x4F59;&#x90E8;&#x5206;&#x7D27;&#x8DDF;&#x5728;&#x8FD9;&#x4E2A;&#x957F;&#x5EA6;&#x90E8;&#x5206;&#x4E4B;&#x540E;&#x5373;&#x53EF;&#x3002;</p>
<p>&#x6BD4;&#x5982;&#x6211;&#x4EEC;&#x5B9A;&#x4E49;&#x5982;&#x4E0B;protobuf&#x6587;&#x4EF6;&#xFF1A;</p>
<pre><code>package lm;

message helloworld
 {
    required int32     id = 1;  // ID
    required string    str = 2;  // str
    optional int32     opt = 3;  //optional field
 }
</code></pre>
<p>&#x8F6C;&#x5316;&#x4E3A;&#x76F8;&#x5E94;&#x7684;.java&#x6587;&#x4EF6;&#x540E;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x53D1;&#x73B0;&#x6709;&#x8FD9;&#x4E2A;&#x65B9;&#x6CD5;&#xFF0C;&#x8FDB;&#x884C;&#x4E8C;&#x8FDB;&#x5236;&#x7684;&#x8F6C;&#x5B58;&#x3002;</p>
<pre><code>public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ &amp; 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, width_);
      }
      if (((bitField0_ &amp; 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, height_);
      }
      getUnknownFields().writeTo(output);
    }
</code></pre>
<p>&#x7528; Protobuf &#x5E8F;&#x5217;&#x5316;&#x540E;&#x7684;&#x5B57;&#x8282;&#x5E8F;&#x5217;&#x4E3A;&#xFF1A;</p>
<pre><code>08 65 12 06 48 65 6C 6C 6F 77
</code></pre>
<p>&#x800C;&#x5982;&#x679C;&#x7528; XML&#xFF0C;&#x5219;&#x7C7B;&#x4F3C;&#x8FD9;&#x6837;&#xFF1A;</p>
<pre><code>31 30 31 3C 2F 69 64 3E 3C 6E 61 6D 65 3E 68 65

6C 6C 6F 3C 2F 6E 61 6D 65 3E 3C 2F 68 65 6C 6C

6F 77 6F 72 6C 64 3E
</code></pre>
<h3 id="protobuf&#x89E3;&#x5305;"><a class="header-anchor" href="#protobuf&#x89E3;&#x5305;"></a>Protobuf&#x89E3;&#x5305;</h3>
<p>&#x5148;&#x6765;&#x4E86;&#x89E3;&#x4E00;&#x4E0B; XML &#x7684;&#x5C01;&#x89E3;&#x5305;&#x8FC7;&#x7A0B;&#x3002;XML &#x9700;&#x8981;&#x4ECE;&#x6587;&#x4EF6;&#x4E2D;&#x8BFB;&#x53D6;&#x51FA;&#x5B57;&#x7B26;&#x4E32;&#xFF0C;&#x518D;&#x8F6C;&#x6362;&#x4E3A; XML &#x6587;&#x6863;&#x5BF9;&#x8C61;&#x7ED3;&#x6784;&#x6A21;&#x578B;&#x3002;&#x4E4B;&#x540E;&#xFF0C;&#x518D;&#x4ECE; XML &#x6587;&#x6863;&#x5BF9;&#x8C61;&#x7ED3;&#x6784;&#x6A21;&#x578B;&#x4E2D;&#x8BFB;&#x53D6;&#x6307;&#x5B9A;&#x8282;&#x70B9;&#x7684;&#x5B57;&#x7B26;&#x4E32;&#xFF0C;&#x6700;&#x540E;&#x518D;&#x5C06;&#x8FD9;&#x4E2A;&#x5B57;&#x7B26;&#x4E32;&#x8F6C;&#x6362;&#x6210;&#x6307;&#x5B9A;&#x7C7B;&#x578B;&#x7684;&#x53D8;&#x91CF;&#x3002;&#x8FD9;&#x4E2A;&#x8FC7;&#x7A0B;&#x975E;&#x5E38;&#x590D;&#x6742;&#xFF0C;&#x5176;&#x4E2D;&#x5C06; XML &#x6587;&#x4EF6;&#x8F6C;&#x6362;&#x4E3A;&#x6587;&#x6863;&#x5BF9;&#x8C61;&#x7ED3;&#x6784;&#x6A21;&#x578B;&#x7684;&#x8FC7;&#x7A0B;&#x901A;&#x5E38;&#x9700;&#x8981;&#x5B8C;&#x6210;&#x8BCD;&#x6CD5;&#x6587;&#x6CD5;&#x5206;&#x6790;&#x7B49;&#x5927;&#x91CF;&#x6D88;&#x8017; CPU &#x7684;&#x590D;&#x6742;&#x8BA1;&#x7B97;&#x3002;</p>
<p>Protobuf&#x89E3;&#x5305;&#xFF0C;&#x53EA;&#x9700;&#x8981;&#x7B80;&#x5355;&#x5730;&#x5C06;&#x4E00;&#x4E2A;&#x4E8C;&#x8FDB;&#x5236;&#x5E8F;&#x5217;&#xFF0C;&#x6309;&#x7167;&#x6307;&#x5B9A;&#x7684;&#x683C;&#x5F0F;&#x8BFB;&#x53D6;&#x5230;&#x5BF9;&#x5E94;&#x7684;&#x7ED3;&#x6784;&#x7C7B;&#x578B;&#x4E2D;&#x5C31;&#x53EF;&#x4EE5;&#x4E86;&#x3002;&#x6D88;&#x606F;&#x7684; decoding &#x8FC7;&#x7A0B;&#x4E5F;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x51E0;&#x4E2A;&#x4F4D;&#x79FB;&#x64CD;&#x4F5C;&#x7EC4;&#x6210;&#x7684;&#x8868;&#x8FBE;&#x5F0F;&#x8BA1;&#x7B97;&#x5373;&#x53EF;&#x5B8C;&#x6210;&#xFF0C;&#x901F;&#x5EA6;&#x975E;&#x5E38;&#x5FEB;&#x3002;</p>
<p>Protobuf&#x538B;&#x7F29;&#x4F18;&#x52BF;&#x4E3B;&#x8981;&#x5728;&#x4E8E;&#x5BF9;integer&#x7684;&#x538B;&#x7F29;&#xFF0C;&#x751A;&#x81F3;&#x6709;&#x7B26;&#x53F7;&#x65E0;&#x7B26;&#x53F7;&#x90FD;&#x91C7;&#x7528;&#x4E86;&#x4E0D;&#x540C;&#x7684;&#x7F16;&#x7801;&#x65B9;&#x5F0F;&#xFF0C;&#x80FD;&#x591F;&#x63D0;&#x4F9B;&#x6781;&#x9AD8;&#x7684;&#x538B;&#x7F29;&#x6BD4;&#x3002;&#x800C;&#x5B57;&#x7B26;&#x4E32;&#x5BF9;&#x8C61;&#x76EE;&#x524D;&#x636E;&#x6211;&#x6240;&#x77E5;&#x662F;&#x6CA1;&#x6709;&#x7F16;&#x7801;&#x7684;&#xFF0C;&#x4E0D;&#x8FC7;&#x53EF;&#x4EE5;&#x5BF9;pb&#x518D;&#x6B21;&#x8FDB;&#x884C;&#x538B;&#x7F29;&#xFF1B;</p>
<p>&#x90E8;&#x5206;&#x5185;&#x8089;&#x8F6C;&#x81EA;&#xFF1A;</p>
<ul>
<li><a href="http://www.xuebuyuan.com/1674314.html" target="_blank" rel="external nofollow noopener noreferrer">http://www.xuebuyuan.com/1674314.html</a></li>
<li><a href="http://blog.csdn.net/tianmohust/article/details/42125381" target="_blank" rel="external nofollow noopener noreferrer">http://blog.csdn.net/tianmohust/article/details/42125381</a></li>
</ul>]]></content>
    
    <summary type="html">
    
      Protocol Buffers是Google公司开发的一种数据描述语言可用于数据存储、通信协议等方面。Protobuf 在数据交换上有什么优点？原理又是什么？本文将给大家做个比较详细的说明。
    
    </summary>
    
      <category term="编程" scheme="http://ngudream.com/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="Protobuf" scheme="http://ngudream.com/tags/Protobuf/"/>
    
  </entry>
  
  <entry>
    <title>Android SO库的加载过程</title>
    <link href="http://ngudream.com/2017/08/13/android-so-load/"/>
    <id>http://ngudream.com/2017/08/13/android-so-load/</id>
    <published>2017-08-13T03:17:48.000Z</published>
    <updated>2017-08-13T03:40:05.712Z</updated>
    
    <content type="html"><![CDATA[<p>&#x9996;&#x5148;&#x662F;Java&#x5C42;&#x7684;&#x8C03;&#x7528;&#xFF0C;&#x76F4;&#x63A5;&#x4F7F;&#x7528;&#x7CFB;&#x7EDF;&#x63D0;&#x4F9B;&#x7684;&#x63A5;&#x53E3;&#xFF1A;</p>
<pre><code>System.loadLibrary(&quot;name&quot;);
</code></pre>
<p>&#x6211;&#x4EEC;&#x8DDF;&#x8E2A;&#x4E00;&#x4E0B;&#x6E90;&#x7801;&#x53EF;&#x4EE5;&#x77E5;&#x9053;&#xFF0C;&#x5B83;&#x662F;&#x76F4;&#x63A5;&#x8C03;&#x7528;Runtime.getRuntime()&#x7684;loadLibrary</p>
<pre><code>/**
     * Loads the system library specified by the &lt;code&gt;libname&lt;/code&gt;
     * argument. The manner in which a library name is mapped to the
     * actual system library is system dependent.
     *
     * @param      libname   the name of the library.
     * @exception  SecurityException  if a security manager exists and its
     *             &lt;code&gt;checkLink&lt;/code&gt; method doesn&apos;t allow
     *             loading of the specified dynamic library
     * @exception  UnsatisfiedLinkError  if the library does not exist.
     * @exception  NullPointerException if &lt;code&gt;libname&lt;/code&gt; is
     *             &lt;code&gt;null&lt;/code&gt;
     * @see        java.lang.Runtime#loadLibrary(java.lang.String)
     * @see        java.lang.SecurityManager#checkLink(java.lang.String)
     */
    public static void loadLibrary(String libname) {
        Runtime.getRuntime().loadLibrary0(VMStack.getCallingClassLoader(), libname);
    }
</code></pre>
<p>&#x7136;&#x540E;&#x662F;&#x770B;&#x4E00;&#x4E0B;Runtime&#x7C7B;&#x7684;loadLibrary&#x65B9;&#x6CD5;&#xFF1A;</p>
<pre><code>void loadLibrary(String libraryName, ClassLoader loader) {
            if (loader != null) {
                //[&#x89C1;&#x5C0F;&#x8282;2.4]
                String filename = loader.findLibrary(libraryName);
                if (filename == null) {
                    throw new UnsatisfiedLinkError(...);
                }
                //&#x6210;&#x529F;&#x6267;&#x884C;&#x5B8C;doLoad,&#x5219;&#x8FD4;&#x56DE;
                String error = doLoad(filename, loader);
                if (error != null) {
                    throw new UnsatisfiedLinkError(error);
                }
                return;
            }
            //&#x5F53;loader&#x4E3A;&#x7A7A;&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#x6267;&#x884C;
            String filename = System.mapLibraryName(libraryName);
            List&lt;String&gt; candidates = new ArrayList&lt;String&gt;();
            String lastError = null;

            //&#x6B64;&#x5904;&#x7684;mLibPaths&#x53D6;&#x503C;
            for (String directory : mLibPaths) {
                String candidate = directory + filename;
                candidates.add(candidate);

                if (IoUtils.canOpenReadOnly(candidate)) {
                    String error = doLoad(candidate, loader);
                    if (error == null) {
                        return; //&#x6210;&#x529F;&#x6267;&#x884C;&#x5B8C;doLoad,&#x5219;&#x8FD4;&#x56DE;.
                    }
                    lastError = error;
                }
            }

            if (lastError != null) {
                throw new UnsatisfiedLinkError(lastError);
            }
            throw new UnsatisfiedLinkError(&quot;Library &quot; + libraryName + &quot; not found; tried &quot; + candidates);
        }
    }
</code></pre>
<p>&#x5C06;&#x4E2D;&#x7684;&#x53C2;&#x6570;&#x540D;&#x8FD8;&#x539F;&#x6210;&#x5E26;&#x201C;lib&#x201D;&#x524D;&#x7F00;&#x7684;&#x540D;&#x5B57;&#xFF1A;</p>
<pre><code>public static String mapLibraryName(String nickname) {
    if (nickname == null) {
        throw new NullPointerException(&quot;nickname == null&quot;);
    }
    return &quot;lib&quot; + nickname + &quot;.so&quot;;
}
</code></pre>
<p>&#x5982;&#x4F55;classloader&#x4E3A;&#x7A7A;&#xFF0C;&#x5219;&#x4F1A;&#x901A;&#x8FC7;BaseDexClassLoader&#x628A;dex&#x6587;&#x4EF6;&#x52A0;&#x8F7D;&#x8FDB;&#x6765;&#xFF0C;&#x4ECE;&#x800C;&#x627E;&#x5230;&#x76F8;&#x5E94;&#x7684;so&#x5E93;&#x6587;&#x4EF6;&#x8DEF;&#x5F84;&#x3002;</p>
<p>&#x6700;&#x540E;&#x4F1A;&#x8C03;&#x7528;&#x5230;Runtime&#x7C7B;&#x7684;&#x7684;&#x4E00;&#x4E2A;native&#x65B9;&#x6CD5;nativeLoad()&#xFF0C;&#x4E4B;&#x540E;&#x5C31;&#x4EA4;&#x7531;native&#x5C42;&#x53BB;&#x52A0;&#x8F7D;so&#x5E93;&#x4E86;&#x3002;</p>
<p>native&#x5C42;&#x4E2D;&#x662F;&#x8C03;&#x7528;JavaVMExt&#x7C7B;&#x7684;LoadNativeLibrary()&#x51FD;&#x6570;&#x6765;&#x52A0;&#x8F7D;.so&#x6587;&#x4EF6;&#x7684;&#xFF0C;&#x7CFB;&#x7EDF;&#x52A0;&#x8F7D;so&#xFF0C;&#x5728;&#x5B8C;&#x6210;&#x88C5;&#x8F7D;&#x3001;&#x6620;&#x5C04;&#x548C;&#x91CD;&#x5B9A;&#x5411;&#x4EE5;&#x540E;&#xFF0C;&#x5C31;&#x9996;&#x5148;&#x6267;&#x884C;.init&#x548C;.init_array&#x6BB5;&#x7684;&#x4EE3;&#x7801;&#xFF0C;&#x4E4B;&#x540E;&#x5982;&#x679C;&#x5B58;&#x5728;JNI_OnLoad&#x5C31;&#x8C03;&#x7528;&#x8BE5;&#x51FD;&#x6570;&#xFF0C;LoadNativeLibrary()&#x51FD;&#x6570;&#x6267;&#x884C;&#x7684;&#x4E3B;&#x8981;&#x6D41;&#x7A0B;&#x4E3A;&#xFF1A;</p>
<ul>
<li>&#xFF08;1&#xFF09;&#x5224;&#x65AD;&#x8BE5;.so&#x6587;&#x4EF6;&#x662F;&#x5426;&#x5DF2;&#x7ECF;&#x52A0;&#x8F7D;&#x4E86;&#xFF0C;&#x5982;&#x679C;&#x5DF2;&#x7ECF;&#x52A0;&#x8F7D;&#x4E86;&#xFF0C;&#x68C0;&#x67E5; class_loader&#x662F;&#x5426;&#x4E00;&#x6837;&#xFF1B;</li>
<li>&#xFF08;2&#xFF09;&#x5982;&#x679C;&#x6CA1;&#x6709;&#x52A0;&#x8F7D;&#xFF0C;&#x8C03;&#x7528;dlopen()&#x51FD;&#x6570;&#x52A0;&#x8F7D;&#x8BE5;.so&#x6587;&#x4EF6;&#xFF1B;</li>
<li>&#xFF08;3&#xFF09;&#x8C03;&#x7528;dlsym()&#x627E;&#x5230;JNI_OnLoad&#x51FD;&#x6570;&#x7684;&#x5730;&#x5740;&#xFF1B;</li>
<li>&#xFF08;4&#xFF09;&#x8C03;&#x7528;JNI_OnLoad&#x51FD;&#x6570;&#x3002;</li>
</ul>
<p>&#x81F3;&#x6B64;&#xFF0C;&#x4E00;&#x4E2A;.so&#x6587;&#x4EF6;&#x5C31;&#x52A0;&#x8F7D;&#x5B8C;&#x6210;&#x4E86;&#x3002;so&#x6587;&#x4EF6;&#x52A0;&#x8F7D;&#x5230;&#x5185;&#x5B58;&#x5E76;&#x94FE;&#x63A5;&#x5B8C;&#x6210;&#x540E;&#xFF0C;&#x5C31;&#x5F00;&#x59CB;&#x8C03;&#x7528;so&#x4E2D;&#x7684;&#x521D;&#x59CB;&#x5316;&#x51FD;&#x6570;&#x3002;</p>
<p>&#x8BE6;&#x7EC6;&#x8BF4;&#x660E;&#x6587;&#x7AE0;&#xFF1A;</p>
<p><a href="http://gityuan.com/2017/03/26/load_library/" target="_blank" rel="external nofollow noopener noreferrer">loadLibrary&#x52A8;&#x6001;&#x5E93;&#x52A0;&#x8F7D;&#x8FC7;&#x7A0B;&#x5206;&#x6790;</a></p>]]></content>
    
    <summary type="html">
    
      我们平时加载SO库的时候，只需要一句话，也注意到load的名字不需要写上&quot;lib&quot;前缀，那它是如何映射回来的呢？下面我们就分析一下动态库的加载过程。
    
    </summary>
    
      <category term="移动开发" scheme="http://ngudream.com/categories/%E7%A7%BB%E5%8A%A8%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="Android" scheme="http://ngudream.com/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>Android WebView之安全性</title>
    <link href="http://ngudream.com/2017/08/13/android-h5-security/"/>
    <id>http://ngudream.com/2017/08/13/android-h5-security/</id>
    <published>2017-08-13T01:50:31.000Z</published>
    <updated>2017-08-13T03:14:47.370Z</updated>
    
    <content type="html"><![CDATA[<h2 id="web&#x8BC1;&#x4E66;&#x68C0;&#x9A8C;"><a class="header-anchor" href="#web&#x8BC1;&#x4E66;&#x68C0;&#x9A8C;"></a>Web&#x8BC1;&#x4E66;&#x68C0;&#x9A8C;</h2>
<p>&#x6211;&#x4EEC;&#x67E5;&#x770B;webview&#x7684;&#x6E90;&#x7801;&#xFF0C;&#x53EF;&#x4EE5;&#x770B;&#x5230;&#xFF0C;&#x5F53;https&#x8BC1;&#x4E66;&#x9A8C;&#x8BC1;&#x6709;&#x95EE;&#x9898;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x4F1A;&#x56DE;&#x8C03;&#x4EE5;&#x4E0B;&#x65B9;&#x6CD5;</p>
<pre><code>public class WebViewClient {

    public void onReceivedSslError(WebView view, SslErrorHandler handler,
            SslError error) {
        handler.cancel();
    }
}
</code></pre>
<p>&#x800C;&#x7CFB;&#x7EDF;&#x662F;&#x9ED8;&#x8BA4;&#x4E0D;&#x4F7F;&#x7528;&#x8BF7;&#x6C42;&#x7684;&#xFF0C;&#x5373;&#x6211;&#x4EEC;&#x5E73;&#x65F6;&#x6253;&#x5F00;&#x4E00;&#x4E2A;&#x9875;&#x9762;&#xFF0C;&#x6709;&#x53EF;&#x80FD;&#x770B;&#x5230;&#x767D;&#x5C4F;&#xFF0C;&#x6CA1;&#x6709;&#x4EFB;&#x4F55;&#x5185;&#x5BB9;&#xFF0C;&#x5C31;&#x662F;&#x8FD9;&#x4E2A;&#x539F;&#x56E0;&#x3002;</p>
<p>&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x5728;&#x8FD9;&#x4E2A;&#x56DE;&#x8C03;&#x65B9;&#x6CD5;&#x91CC;&#x9762;&#x6839;&#x636E;&#x8FD4;&#x56DE;&#x7684;&#x9519;&#x8BEF;&#x4FE1;&#x606F;&#x8FDB;&#x884C;&#x76F8;&#x5E94;&#x7684;&#x5904;&#x7406;&#xFF0C;&#x53EF;&#x4EE5;&#x5BF9;&#x670D;&#x52A1;&#x5668;&#x4E0B;&#x53D1;&#x7684;&#x8BC1;&#x4E66;&#x8FDB;&#x884C;&#x6821;&#x9A8C;&#xFF08;&#x9700;&#x8981;&#x9884;&#x5148;&#x5728;&#x5BA2;&#x6237;&#x7AEF;&#x4FDD;&#x5B58;&#x8BC1;&#x4E66;&#x6307;&#x7EB9;&#xFF09;&#x3002;&#x5982;&#x4F55;&#x662F;CA&#x673A;&#x6784;&#x7B7E;&#x53D1;&#x7684;&#x8BC1;&#x4E66;&#xFF0C;webview&#x5185;&#x6838;&#x4F1A;&#x53BB;&#x9A8C;&#x8BC1;&#x6B64;&#x8BC1;&#x4E66;&#x7684;&#x5408;&#x6CD5;&#x6027;&#xFF0C;&#x56E0;&#x4E3A;Android&#x7CFB;&#x7EDF;&#x5185;&#x7F6E;&#x4E86;100&#x591A;&#x4E2A;CA&#x673A;&#x6784;&#x7684;&#x6839;&#x8BC1;&#x4E66;&#x3002;</p>
<pre><code>webView.setWebViewClient(new WebViewClient() {
            @Override
            public void onReceivedSslError(WebView view, SslErrorHandler handler, SslError error) {
                switch (error.getPrimaryError()){
                    case SslError.SSL_DATE_INVALID://&#x4E0A;&#x671F;&#x4E0D;&#x6B63;&#x786E;
                        break;
                    case SslError.SSL_IDMISMATCH://host&#x4E0D;&#x5339;&#x914D;
                        if(handleSslCheck()){
                            //&#x7EE7;&#x7EED;&#x6267;&#x884C;
                            handler.proceed();
                        } else {
                            handler.cancel();//&#x53D6;&#x6D88;
                        }
                        break;
                    case SslError.SSL_EXPIRED://&#x8BC1;&#x4E66;&#x65F6;&#x95F4;&#x8FC7;&#x671F;
                        break;
                    case SslError.SSL_UNTRUSTED://&#x8BC1;&#x4E66;&#x662F;&#x4E0D;&#x53D7;&#x4FE1;&#x4EFB;&#x7684;
                        break;
                    case SslError.SSL_INVALID://&#x8BC1;&#x4E66;&#x4E0D;&#x53EF;&#x7528;
                        break;
                    case SslError.SSL_NOTYETVALID://&#x8BC1;&#x4E66;&#x4E0D;&#x518D;&#x6709;&#x6548;
                        break;
                }
            }
        });


/** 
 * SSL&#x8BC1;&#x4E66;&#x9519;&#x8BEF;&#xFF0C;&#x624B;&#x52A8;&#x6821;&#x9A8C;https&#x8BC1;&#x4E66; 
 * 
 * @param cert      https&#x8BC1;&#x4E66; 
 * @param sha256Str sha256&#x503C; 
 * @return true&#x901A;&#x8FC7;&#xFF0C;false&#x5931;&#x8D25; 
 */  
public static boolean handleSslCheck(SslCertificate cert, String sha256Str) {  
    byte[] SSLSHA256 = hexToBytes(sha256Str);  
    Bundle bundle = SslCertificate.saveState(cert);  
    if (bundle != null) {  
        byte[] bytes = bundle.getByteArray(&quot;x509-certificate&quot;);  
        if (bytes != null) {  
            try {  
                CertificateFactory cf = CertificateFactory.getInstance(&quot;X.509&quot;);  
                Certificate ca = cf.generateCertificate(new ByteArrayInputStream(bytes));  
                MessageDigest sha256 = MessageDigest.getInstance(&quot;SHA-256&quot;);  
                byte[] key = sha256.digest(((X509Certificate) ca).getEncoded());  
                return Arrays.equals(key, SSLSHA256);  
            } catch (Exception e) {  
                e.printStackTrace();  
            }  
        }  
    }  
    return false;  
}  
</code></pre>
<h2 id="html&#x6587;&#x4EF6;&#x5B89;&#x5168;&#x6027;"><a class="header-anchor" href="#html&#x6587;&#x4EF6;&#x5B89;&#x5168;&#x6027;"></a>html&#x6587;&#x4EF6;&#x5B89;&#x5168;&#x6027;</h2>
<p>1&#x3001;&#x5BF9;js&#x3001;css&#x7B49;&#x6587;&#x4EF6;&#x8FDB;&#x884C;&#x6DF7;&#x6DC6;</p>
<p>2&#x3001;Android&#x5BA2;&#x6237;&#x7AEF;&#x8981;&#x4E0E;H5&#x4E4B;&#x95F4;&#x534F;&#x5546;&#x597D;&#x4E00;&#x5957;&#x4E92;&#x76F8;&#x4FE1;&#x4EFB;&#x7684;&#x5B89;&#x5168;&#x7B97;&#x6CD5;</p>
<p>3&#x3001;&#x4E3A;&#x4E86;&#x907F;&#x514D;WebView&#x52A0;&#x8F7D;&#x4EFB;&#x610F;url&#xFF0C;&#x4E5F;&#x9700;&#x8981;&#x5BF9;url&#x8FDB;&#x884C;&#x767D;&#x540D;&#x5355;&#x68C0;&#x6D4B;&#xFF1A;</p>
<ul>
<li>1)WebView:postUrl()&#x524D;&#x68C0;&#x6D4B;url&#x7684;&#x5408;&#x6CD5;&#x6027;</li>
<li>2)Js&#x8C03;&#x7528;Native&#x65B9;&#x6CD5;&#x524D;&#x68C0;&#x6D4B;&#x5F53;&#x524D;&#x754C;&#x9762;url&#x7684;&#x5408;&#x6CD5;&#x6027;</li>
</ul>]]></content>
    
    <summary type="html">
    
      手机日期不正确、手机根证书异常等各种原因，都会导致WebViewClient无法访问HTTPS站点，这时应用怎么处理？如果h5文件内置在客户端，又需要保护文件的安全性，这又应该怎么做？
    
    </summary>
    
      <category term="移动开发" scheme="http://ngudream.com/categories/%E7%A7%BB%E5%8A%A8%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="Android" scheme="http://ngudream.com/tags/Android/"/>
    
      <category term="WebView" scheme="http://ngudream.com/tags/WebView/"/>
    
      <category term="HTTPS" scheme="http://ngudream.com/tags/HTTPS/"/>
    
  </entry>
  
  <entry>
    <title>域名劫持</title>
    <link href="http://ngudream.com/2017/08/12/http-domain-hijacking/"/>
    <id>http://ngudream.com/2017/08/12/http-domain-hijacking/</id>
    <published>2017-08-12T11:15:46.000Z</published>
    <updated>2017-08-13T01:36:12.931Z</updated>
    
    <content type="html"><![CDATA[<p>&#x57DF;&#x540D;&#x52AB;&#x6301;&#x662F;&#x4E92;&#x8054;&#x7F51;&#x653B;&#x51FB;&#x7684;&#x4E00;&#x79CD;&#x65B9;&#x5F0F;&#xFF0C;&#x901A;&#x8FC7;&#x653B;&#x51FB;&#x57DF;&#x540D;&#x89E3;&#x6790;&#x670D;&#x52A1;&#x5668;&#xFF08;DNS&#xFF09;&#xFF0C;&#x6216;&#x4F2A;&#x9020;&#x57DF;&#x540D;&#x89E3;&#x6790;&#x670D;&#x52A1;&#x5668;&#xFF08;DNS&#xFF09;&#x7684;&#x65B9;&#x6CD5;&#xFF0C;&#x628A;&#x76EE;&#x6807;&#x7F51;&#x7AD9;&#x57DF;&#x540D;&#x89E3;&#x6790;&#x5230;&#x9519;&#x8BEF;&#x7684;&#x5730;&#x5740;&#x4ECE;&#x800C;&#x5B9E;&#x73B0;&#x7528;&#x6237;&#x65E0;&#x6CD5;&#x8BBF;&#x95EE;&#x76EE;&#x6807;&#x7F51;&#x7AD9;&#x7684;&#x76EE;&#x7684;&#x3002;<a href="https://baike.baidu.com/item/%E5%9F%9F%E5%90%8D%E5%8A%AB%E6%8C%81/7657893?fr=aladdin" target="_blank" rel="external nofollow noopener noreferrer">&#x767E;&#x79D1;</a></p>
<h2 id="dns-&#x662F;&#x5565;&#xFF1F;"><a class="header-anchor" href="#dns-&#x662F;&#x5565;&#xFF1F;"></a>DNS &#x662F;&#x5565;&#xFF1F;</h2>
<p>DNS &#x662F;&#x6D0B;&#x6587;&#x201C;Domain Name System&#x201D;&#x7684;&#x7F29;&#x5199;&#xFF0C;&#x76F4;&#x8BD1;&#x8FC7;&#x6765;&#x5C31;&#x662F;&#x201C;&#x57DF;&#x540D;&#x7CFB;&#x7EDF;&#x201D;&#x3002;</p>
<h2 id="dns-&#x6709;&#x5565;&#x7528;&#xFF1F;"><a class="header-anchor" href="#dns-&#x6709;&#x5565;&#x7528;&#xFF1F;"></a>DNS &#x6709;&#x5565;&#x7528;&#xFF1F;</h2>
<p>&#x54B1;&#x4EEC;&#x6BCF;&#x5929;&#x6253;&#x4EA4;&#x9053;&#x7684;&#x8FD9;&#x4E2A;&#x4E92;&#x8054;&#x7F51;&#xFF0C;&#x5176;&#x5E95;&#x5C42;&#x7684;&#x57FA;&#x77F3;&#x662F;&#x201C;IP&#x201D;&#x3002;IP &#x662F;&#x201C;Internet Protocol&#x201D;&#x7684;&#x7F29;&#x5199;&#xFF0C;&#x4E2D;&#x6587;&#x5C31;&#x201C;&#x4E92;&#x8054;&#x7F51;&#x534F;&#x8BAE;&#x201D;&#xFF08;&#x5149;&#x770B;&#x540D;&#x5B57;&#x5C31;&#x77E5;&#x9053;&#x8FD9;&#x73A9;&#x610F;&#x513F;&#x5F88;&#x91CD;&#x8981;&#xFF09;&#x3002;&#x54B1;&#x4EEC;&#x65E5;&#x5E38;&#x7528;&#x7684;&#x90A3;&#x4E9B;&#x4E92;&#x8054;&#x7F51;&#x8F6F;&#x4EF6;&#xFF08;&#x6D4F;&#x89C8;&#x5668;&#x3001;&#x804A;&#x5929;&#x5DE5;&#x5177;&#x3001;&#x4E0B;&#x8F7D;&#x5DE5;&#x5177;&#x3001;&#x7B49;&#x7B49;&#xFF09;&#x5728;&#x5DE5;&#x4F5C;&#x65F6;&#xFF0C;&#x5FC5;&#x987B;&#x4F9D;&#x9760;&#x3010;IP&#x5730;&#x5740;&#x3011;&#x624D;&#x80FD;&#x8FDB;&#x884C;&#x7F51;&#x7EDC;&#x6570;&#x636E;&#x4F20;&#x8F93;&#x3002;</p>
<p>&#x201C;IP&#x5730;&#x5740;&#x201D;&#x662F;&#x8BBE;&#x8BA1;&#x7ED9;&#x8F6F;&#x4EF6;&#x7528;&#x6EF4;&#x2014;&#x2014;&#x867D;&#x7136;&#x8F6F;&#x4EF6;&#x5F88;&#x5BB9;&#x6613;&#x5904;&#x7406;&#xFF0C;&#x4F46;&#x5BF9;&#x4E8E;&#x4EBA;&#x7C7B;&#x800C;&#x8A00;&#xFF0C;&#x5374;&#x5F88;&#x96BE;&#x8BB0;&#x5FC6;&#x3002;&#x4E8E;&#x662F;&#xFF0C;&#x540E;&#x6765;&#x53C8;&#x53D1;&#x660E;&#x4E86; DNS&#x3002;&#x6709;&#x4E86; DNS&#xFF0C;&#x4EBA;&#x7C7B;&#x5C31;&#x4E0D;&#x9700;&#x8981;&#x8BB0;&#x4F4F;&#x957F;&#x957F;&#x7684;&#x4E00;&#x4E32; IP&#x5730;&#x5740;&#xFF0C;&#x800C;&#x53EA;&#x9700;&#x8BB0;&#x4F4F;&#x201C;&#x57DF;&#x540D;&#x201D;&#xFF08;&#x57DF;&#x540D;&#x901A;&#x5E38;&#x66F4;&#x77ED;&#xFF0C;&#x4E5F;&#x66F4;&#x5177;&#x6709;&#x53EF;&#x8BFB;&#x6027;&#xFF0C;<a href="http://xn--www-uc0ep96b.g.cn" target="_blank" rel="external nofollow noopener noreferrer">&#x4F8B;&#x5982;www.g.cn</a>&#xFF09;&#x3002;</p>
<p>&#x6BD4;&#x5982;&#x4F60;&#x4E0A;&#x7F51;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x53EA;&#x9700;&#x5728;&#x5730;&#x5740;&#x680F;&#x8F93;&#x5165;&#x7F51;&#x7AD9;&#x7684;&#x201C;&#x57DF;&#x540D;&#x201D;&#xFF0C;&#x800C;&#x4E0D;&#x7528;&#x8F93;&#x5165;&#x7F51;&#x7AD9;&#x7684;&#x201C;IP&#x5730;&#x5740;&#x201D;&#x3002;&#x7136;&#x540E;&#x7535;&#x8111;&#x7CFB;&#x7EDF;&#x4F1A;&#x5229;&#x7528; DNS &#x6765;&#x628A;&#x201C;&#x57DF;&#x540D;&#x201D;&#x7FFB;&#x8BD1;&#x6210;&#x201C;IP&#x5730;&#x5740;&#x201D;&#x3002;&#x8FD9;&#x4E2A;&#x7FFB;&#x8BD1;&#x7684;&#x8FC7;&#x7A0B;&#x672F;&#x8BED;&#x53EB;&#x201C;&#x57DF;&#x540D;&#x89E3;&#x6790;/DNS&#x89E3;&#x6790;&#x201D;&#x3002;</p>
<h2 id="&#x57DF;&#x540D;&#x7684;&#x7ED3;&#x6784;&#x662F;&#x548B;&#x6837;&#xFF1F;"><a class="header-anchor" href="#&#x57DF;&#x540D;&#x7684;&#x7ED3;&#x6784;&#x662F;&#x548B;&#x6837;&#xFF1F;"></a>&#x57DF;&#x540D;&#x7684;&#x7ED3;&#x6784;&#x662F;&#x548B;&#x6837;&#xFF1F;</h2>
<p>&#x57DF;&#x540D;&#x662F;&#x6309;&#x7167;&#x201C;&#x6811;&#x5F62;&#x7ED3;&#x6784;&#x201D;&#x7EC4;&#x7EC7;&#x7684;&#x3002;&#x4E0D;&#x61C2;&#x5F97;&#x5565;&#x662F;&#x201C;&#x6811;&#x5F62;&#x7ED3;&#x6784;&#x201D;&#x7684;&#x540C;&#x5B66;&#xFF0C;&#x53EF;&#x4EE5;&#x5BF9;&#x7167;&#x4E00;&#x4E0B;&#x7535;&#x8111;&#x786C;&#x76D8;&#x4E0A;&#x7684;&#x76EE;&#x5F55;&#x7ED3;&#x6784;&#x3002;&#x57DF;&#x540D;&#x7684;&#x7ED3;&#x6784;&#x548C;&#x76EE;&#x5F55;&#x7ED3;&#x6784;&#x5F88;&#x7C7B;&#x4F3C;&#xFF0C;&#x76EE;&#x5F55;&#x7ED3;&#x6784;&#x662F;&#x7528;&#x201C;&#x659C;&#x6760;&#x201D;&#x4F5C;&#x5206;&#x9694;&#x7B26;&#xFF0C;&#x800C;&#x57DF;&#x540D;&#x662F;&#x7528;&#x5C0F;&#x6570;&#x70B9;&#x4F5C;&#x5206;&#x9694;&#x7B26;&#x3002;&#x4E24;&#x8005;&#x7684;&#x4E3B;&#x8981;&#x533A;&#x522B;&#x5728;&#x4E8E;&#xFF1A;&#x76EE;&#x5F55;&#x7ED3;&#x6784;&#x540D;&#x79F0;&#x7684;&#x5F62;&#x5F0F;&#x662F;&#x4ECE;&#x5DE6;&#x5230;&#x53F3;&#xFF08;&#x4E0A;&#x7EA7;&#x5728;&#x5DE6;&#xFF0C;&#x4E0B;&#x7EA7;&#x5728;&#x53F3;&#xFF09;&#xFF0C;&#x800C;&#x57DF;&#x540D;&#x662F;&#x4ECE;&#x53F3;&#x5230;&#x5DE6;&#xFF08;&#x4E0A;&#x7EA7;&#x5728;&#x53F3;&#xFF0C;&#x4E0B;&#x7EA7;&#x5728;&#x5DE6;&#xFF09;&#x3002;</p>
<p>&#x4EE5;&#x7F51;&#x6613;&#x7684;&#x57DF;&#x540D;&#x4E3A;&#x4F8B;&#xFF1A;</p>
<p><a href="http://3g.163.com" target="_blank" rel="external nofollow noopener noreferrer">3g.163.com</a> &#x7684;&#x4E0A;&#x7EA7;&#x57DF;&#x540D;&#x662F; .163.com</p>
<p><a href="http://163.com" target="_blank" rel="external nofollow noopener noreferrer">163.com</a> &#x7684;&#x4E0A;&#x7EA7;&#x57DF;&#x540D;&#x662F; .com</p>
<p>&#x8FD9;&#x91CC;&#x7684; .com &#x5C31;&#x88AB;&#x79F0;&#x4E3A;&#x9876;&#x7EA7;&#x57DF;&#x540D;&#xFF08;Top-Level Domain&#xFF0C;&#x7B80;&#x79F0; TLD&#xFF09;&#xFF0C;&#x8DDF; .com &#x7C7B;&#x4F3C;&#x7684;&#x90A3;&#x4E9B; .net .org .gov &#x4E5F;&#x662F;&#x9876;&#x7EA7;&#x57DF;&#x540D;&#x3002;&#x8FD8;&#x6709;&#x90A3;&#x4E9B;&#x4EE5;&#x56FD;&#x5BB6;/&#x5730;&#x533A;&#x7684;&#x4EE3;&#x7801;&#x547D;&#x540D;&#x7684;&#xFF08;&#x6BD4;&#x5982; .cn .tw .hk .jp &#x7B49;&#x7B49;&#xFF09;&#x4E5F;&#x662F;&#x9876;&#x7EA7;&#x57DF;&#x540D;&#x3002;</p>
<h2 id="&#x57DF;&#x540D;&#x89E3;&#x6790;-&#x662F;&#x548B;&#x5B9E;&#x73B0;&#xFF1F;"><a class="header-anchor" href="#&#x57DF;&#x540D;&#x89E3;&#x6790;-&#x662F;&#x548B;&#x5B9E;&#x73B0;&#xFF1F;"></a>&#x201C;&#x57DF;&#x540D;&#x89E3;&#x6790;&#x201D;&#x662F;&#x548B;&#x5B9E;&#x73B0;&#xFF1F;</h2>
<p>&#x5982;&#x679C;&#x4F60;&#x66FE;&#x7ECF;&#x914D;&#x7F6E;&#x8FC7;&#x7535;&#x8111;&#x7684;&#x7F51;&#x5361;&#xFF0C;&#x5E94;&#x8BE5;&#x8BB0;&#x5F97;&#x4E0A;&#x9762;&#x9664;&#x4E86;&#x6709;IP&#x5730;&#x5740;&#x3001;&#x63A9;&#x7801;&#x7B49;&#x8BBE;&#x7F6E;&#xFF0C;&#x8FD8;&#x6709;&#x4E00;&#x9879;&#x8BBE;&#x7F6E;&#x662F;&#x201C;DNS&#x670D;&#x52A1;&#x5668;/&#x57DF;&#x540D;&#x670D;&#x52A1;&#x5668;&#x201D;&#x3002;&#x8FD9;&#x9879;&#x8BBE;&#x7F6E;&#x5C31;&#x662F;&#x7528;&#x6765;&#x5E2E;&#x52A9;&#x4F60;&#x7684;&#x7535;&#x8111;&#x8FDB;&#x884C;&#x57DF;&#x540D;&#x89E3;&#x6790;&#x7684;&#x3002;&#x4F60;&#x53EF;&#x4EE5;&#x628A;&#x8FD9;&#x4E2A;&#x201C;DNS&#x670D;&#x52A1;&#x5668;&#x201D;&#x60F3;&#x8C61;&#x6210;114&#x67E5;&#x53F7;&#x53F0;&#x3002;&#x6BCF;&#x5F53;&#x7535;&#x8111;&#x9700;&#x8981;&#x7FFB;&#x8BD1;&#x67D0;&#x4E2A;&#x57DF;&#x540D;&#xFF0C;&#x5C31;&#x627E;&#x8FD9;&#x4E2A;&#x57DF;&#x540D;&#x670D;&#x52A1;&#x5668;&#x67E5;&#x8BE2;&#xFF0C;&#x7136;&#x540E;&#x57DF;&#x540D;&#x670D;&#x52A1;&#x5668;&#x4F1A;&#x544A;&#x8BC9;&#x4F60;&#x7684;&#x7535;&#x8111;&#xFF0C;&#x8981;&#x67E5;&#x8BE2;&#x7684;&#x57DF;&#x540D;&#x5BF9;&#x5E94;&#x7684;IP&#x5730;&#x5740;&#x662F;&#x5565;&#x3002;</p>
<p>&#x4E0B;&#x9762;&#x7B80;&#x5355;&#x8BF4;&#x4E00;&#x4E0B;&#xFF0C;&#x4F60;&#x7684;&#x7535;&#x8111;&#x8FDB;&#x884C;&#x57DF;&#x540D;&#x89E3;&#x6790;&#x7684;&#x8FC7;&#x7A0B;&#x3002;</p>
<p>&#x4E3A;&#x4E86;&#x53D9;&#x8FF0;&#x65B9;&#x4FBF;&#xFF0C;&#x4EE5;&#x7F51;&#x6613;&#x4E3A;&#x4F8B;&#x3002;&#x5F53;&#x4F60;&#x5728;&#x6D4F;&#x89C8;&#x5668;&#x7684;&#x5730;&#x5740;&#x680F;&#x4E2D;&#x8F93;&#x5165; <a href="http://www.163.com" target="_blank" rel="external nofollow noopener noreferrer">www.163.com</a>&#xFF0C;&#x7136;&#x540E;&#x6572;&#x56DE;&#x8F66;&#xFF0C;&#x8FD9;&#x65F6;&#x5019;&#x7535;&#x8111;&#x8F6F;&#x4EF6;&#x4F1A;&#x8FDB;&#x884C;&#x5982;&#x4E0B;&#x4E00;&#x7CFB;&#x5217;&#x4E8B;&#x60C5;&#x3002;</p>
<ol>
<li>
<p>&#x9996;&#x5148;&#x6839;&#x636E;&#x8F93;&#x5165;&#x7684;&#x7F51;&#x5740;&#xFF0C;&#x63D0;&#x53D6;&#x51FA;&#x57DF;&#x540D;&#xFF08;</p>
</li>
<li>
<p>&#x5982;&#x679C;&#x4F60;&#x5728;&#x7CFB;&#x7EDF;&#x4E2D;&#x914D;&#x7F6E;&#x4E86; Hosts &#x6587;&#x4EF6;&#xFF0C;&#x90A3;&#x4E48;&#x7535;&#x8111;&#x4F1A;&#x5148;&#x67E5;&#x8BE2; Hosts &#x6587;&#x4EF6;&#xFF0C;<a href="http://xn--www-i68du28pud5a.163.com" target="_blank" rel="external nofollow noopener noreferrer">&#x770B;&#x8FD9;&#x4E2A;www.163.com</a> &#x5426;&#x5DF2;&#x7ECF;&#x5728; Hosts &#x91CC;&#x9762;&#x6709;&#x4E86;&#x5BF9;&#x5E94;&#x7684;&#x8BB0;&#x5F55;&#x3002;&#x5982;&#x679C;&#x6709;&#xFF0C;&#x76F4;&#x63A5;&#x5C31;&#x53EF;&#x4EE5;&#x62FF;&#x5230;&#x8BE5;&#x8BB0;&#x5F55;&#x4E2D;&#x7684; IP&#x5730;&#x5740;&#xFF0C;&#x8FC7;&#x7A0B;&#x5C31;&#x7ED3;&#x675F;&#x4E86;&#x3002;</p>
</li>
<li>
<p>&#x5982;&#x679C; Hosts &#x91CC;&#x9762;&#x6CA1;&#x6709;&#x8FD9;&#x4E2A;&#x522B;&#x540D;&#xFF0C;&#x90A3;&#x4E48;&#x7535;&#x8111;&#x4F1A;&#x770B;&#x4F60;&#x6709;&#x6CA1;&#x6709;&#x8BBE;&#x7F6E;&#x57DF;&#x540D;&#x670D;&#x52A1;&#x5668;&#xFF08;DNS &#x670D;&#x52A1;&#x5668;&#xFF09;&#x3002;&#x5982;&#x679C;&#x4F60;&#x7684;&#x7CFB;&#x7EDF;&#x6CA1;&#x6709;&#x8BBE;&#x7F6E;&#x57DF;&#x540D;&#x670D;&#x52A1;&#x5668;&#xFF0C;&#x90A3;&#x7535;&#x8111;&#x5C31;&#x6CA1;&#x8F99;&#x4E86;&#xFF0C;&#x6D4F;&#x89C8;&#x5668;&#x76F4;&#x63A5;&#x4F1A;&#x62A5;&#x9519;&#xFF0C;&#x8BF4;&#x7F51;&#x7AD9;&#x7684;&#x57DF;&#x540D;&#x65E0;&#x6CD5;&#x89E3;&#x6790;&#x3002;&#x8FC7;&#x7A0B;&#x5C31;&#x7ED3;&#x675F;&#x4E86;&#x3002;</p>
</li>
<li>
<p>&#x5982;&#x679C;&#x4F60;&#x8BBE;&#x7F6E;&#x8FC7;&#x201C;&#x57DF;&#x540D;&#x670D;&#x52A1;&#x5668;&#x201D;&#xFF0C;&#x90A3;&#x4E48;&#x7535;&#x8111;&#x4F1A;&#x5411;&#x8FD9;&#x4E2A;&#x57DF;&#x540D;&#x670D;&#x52A1;&#x5668;&#x53D1;&#x9001;&#x4E00;&#x4E2A;&#x57DF;&#x540D;&#x67E5;&#x8BE2;&#xFF08;DNS query&#xFF09;&#x7684;&#x8BF7;&#x6C42;&#xFF0C;&#x7136;&#x540E;&#x7B49;&#x5019;&#x57DF;&#x540D;&#x670D;&#x52A1;&#x5668;&#x7684;&#x56DE;&#x5E94;&#x3002;</p>
</li>
<li>
<p>&#x5982;&#x679C;&#x57DF;&#x540D;&#x670D;&#x52A1;&#x5668;&#x59CB;&#x7EC8;&#x6CA1;&#x6709;&#x56DE;&#x5E94;&#xFF08;&#x6BD4;&#x5982;&#x57DF;&#x540D;&#x670D;&#x52A1;&#x5668;&#x6302;&#x4E86;&#xFF0C;&#x6216;&#x57DF;&#x540D;&#x670D;&#x52A1;&#x5668;&#x7684;IP&#x586B;&#x9519;&#x4E86;&#xFF0C;&#x6216;&#x8BF7;&#x6C42;&#x88AB; &#x62E6;&#x622A;&#x4E86;&#xFF09;&#xFF0C;&#x90A3;&#x4E48;&#x7535;&#x8111;&#x8FD8;&#x662F;&#x6CA1;&#x8F99;&#xFF08;&#x6D4F;&#x89C8;&#x5668;&#x4F1A;&#x62A5;&#x9519;&#xFF09;&#x3002;</p>
</li>
<li>
<p>&#x5982;&#x679C;&#x57DF;&#x540D;&#x670D;&#x52A1;&#x5668;&#x56DE;&#x5E94;&#x4E86;&#xFF0C;&#x90A3;&#x4E48;&#x4F60;&#x7684;&#x7535;&#x8111;&#x5C31;&#x53EF;&#x4EE5;&#x6839;&#x636E;&#x57DF;&#x540D;&#x670D;&#x52A1;&#x5668;&#x7684;&#x5E94;&#x7B54;&#x4FE1;&#x606F;&#xFF0C;&#x5F97;&#x5230;&#x8BE5;&#x57DF;&#x540D;&#x7684; IP&#x5730;&#x5740;&#x3002;&#x4E4B;&#x540E;&#x6D4F;&#x89C8;&#x5668;&#x5C31;&#x4F1A;&#x5411;&#x8FD9;&#x4E2A; IP&#x5730;&#x5740; &#x5BF9;&#x5E94;&#x7684; Web &#x7AEF;&#x53E3;&#x53D1;&#x9001; HTTP &#x8BF7;&#x6C42;&#x3002;</p>
</li>
</ol>
<p>&#x901A;&#x5E38;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x7535;&#x8111;&#x62FF;&#x5230;&#x7684;&#xFF08;DNS&#x670D;&#x52A1;&#x5668;&#xFF09;&#x5E94;&#x7B54;&#x4FE1;&#x606F;&#x662F;&#x6B63;&#x786E;&#x7684;&#x2014;&#x2014;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#xFF0C;&#x5E94;&#x7B54;&#x4E2D;&#x7684; IP&#x5730;&#x5740; &#x786E;&#x5B9E;&#x5BF9;&#x5E94;&#x90A3;&#x4E2A;&#x57DF;&#x540D;&#x2014;&#x2014;&#x8FD9;&#x79CD;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x4F60;&#x7684;&#x7F51;&#x7EDC;&#x8F6F;&#x4EF6;&#x5C31;&#x53EF;&#x4EE5;&#x6B63;&#x5E38;&#x5DE5;&#x4F5C;&#x4E86;&#x3002;</p>
<p>&#x4F46;&#x662F;&#x5728;&#x67D0;&#x4E9B;&#x56FD;&#x5BB6;&#xFF0C;&#x4F8B;&#x5982;CHAOXIAN,&#x7535;&#x8111;&#x62FF;&#x5230;&#x7684; DNS &#x5E94;&#x7B54;&#x6709;&#x53EF;&#x80FD;&#x662F;&#x3010;&#x9519;&#x7684;&#x3011;&#x3002;&#x4E3A;&#x5565;&#x4F1A;&#x8FD9;&#x6837;&#x634F;&#xFF0C;&#x672C;&#x6587;&#x7684;&#x540E;&#x534A;&#x90E8;&#xFF0C;&#x4FFA;&#x4F1A;&#x4ECB;&#x7ECD;&#x4E00;&#x4E0B;&#x201C;&#x57DF;&#x540D;&#x52AB;&#x6301;&#x201D;&#x548C;&#x201C;&#x57DF;&#x540D;&#x6C61;&#x67D3;&#x201D;&#x3002;</p>
<h2 id="&#x57DF;&#x540D;&#x670D;&#x52A1;&#x5668;&#x5982;&#x4F55;&#x77E5;&#x9053;&#x8FD9;&#x4E9B;&#x4FE1;&#x606F;&#xFF1F;"><a class="header-anchor" href="#&#x57DF;&#x540D;&#x670D;&#x52A1;&#x5668;&#x5982;&#x4F55;&#x77E5;&#x9053;&#x8FD9;&#x4E9B;&#x4FE1;&#x606F;&#xFF1F;"></a>&#x57DF;&#x540D;&#x670D;&#x52A1;&#x5668;&#x5982;&#x4F55;&#x77E5;&#x9053;&#x8FD9;&#x4E9B;&#x4FE1;&#x606F;&#xFF1F;</h2>
<p>&#xFF08;&#x4E00;&#xFF09;&#x57DF;&#x540D;&#x7684;&#x7F13;&#x5B58;</p>
<p>&#x5927;&#x4F19;&#x513F;&#x5E73;&#x65F6;&#x4F7F;&#x7528;&#x7684;&#x57DF;&#x540D;&#x670D;&#x52A1;&#x5668;&#xFF0C;&#x6280;&#x672F;&#x672F;&#x8BED;&#x53EB;&#x201C;&#x9012;&#x5F52;&#x57DF;&#x540D;&#x670D;&#x52A1;&#x5668;&#x201D;&#x3002;&#x201C;&#x9012;&#x5F52;&#x670D;&#x52A1;&#x5668;&#x201D;&#x662F;&#x9762;&#x5411;&#x666E;&#x901A;&#x7F51;&#x53CB;&#x7684;&#x3002;&#x521A;&#x624D;&#x4ECB;&#x7ECD;&#x201C;&#x57DF;&#x540D;&#x89E3;&#x6790;&#x201D;&#x7684;&#x65F6;&#x5019;&#x63D0;&#x5230;&#x7684;&#x670D;&#x52A1;&#x5668;&#x5C31;&#x662F;&#x201C;&#x9012;&#x5F52;&#x670D;&#x52A1;&#x5668;&#x201D;&#x3002;</p>
<p>&#x201C;&#x9012;&#x5F52;&#x670D;&#x52A1;&#x5668;&#x201D;&#x7684;&#x5185;&#x90E8;&#x901A;&#x5E38;&#x4F1A;&#x6709;&#x4E00;&#x4E2A; DNS&#x8BB0;&#x5F55; &#x7684;&#x7F13;&#x5B58;&#x2014;&#x2014;&#x8FD9;&#x4E2A;&#x7F13;&#x5B58;&#x662F;&#x4E3A;&#x4E86;&#x63D0;&#x9AD8;&#x67E5;&#x8BE2;&#x6548;&#x7387;&#x7684;&#x3002;&#x5F53;&#x67D0;&#x53F0;&#x7535;&#x8111;&#x5411;&#x9012;&#x5F52;&#x670D;&#x52A1;&#x5668;&#x53D1;&#x8D77;&#x57DF;&#x540D;&#x67E5;&#x8BE2;&#x65F6;&#xFF0C;&#x9012;&#x5F52;&#x670D;&#x52A1;&#x5668;&#x9996;&#x5148;&#x770B;&#x81EA;&#x5DF1;&#x7684;&#x7F13;&#x5B58;&#x4E2D;&#x6709;&#x6CA1;&#x6709;&#x8BE5;&#x57DF;&#x540D;&#x7684;&#x8BB0;&#x5F55;&#xFF0C;&#x5982;&#x679C;&#x6709;&#xFF0C;&#x76F4;&#x63A5;&#x5C31;&#x56DE;&#x590D;&#x8BE5;&#x8BB0;&#x5F55;&#x7ED9;&#x67E5;&#x8BE2;&#x7684;&#x7535;&#x8111;&#x3002;</p>
<p>&#x4E07;&#x4E00;&#x5BF9;&#x65B9;&#x60F3;&#x8981;&#x67E5;&#x8BE2;&#x7684;&#x57DF;&#x540D;&#x6CA1;&#x627E;&#x5230;&#xFF0C;&#x548B;&#x529E;&#x634F;&#xFF1F;&#x8FD9;&#x65F6;&#x5019;&#x5C31;&#x8981;&#x8FDB;&#x884C;&#x7F13;&#x5B58;&#x7684;&#x540C;&#x6B65;&#x3002;</p>
<p>&#xFF08;&#x4E8C;&#xFF09;&#x7F13;&#x5B58;&#x7684;&#x540C;&#x6B65;</p>
<p>&#x4E0B;&#x9762;&#x5C31;&#x62FF;&#x7F51;&#x6613;&#x7684;&#x57DF;&#x540D;&#x4E3A;&#x4F8B;&#xFF0C;&#x8BF4;&#x8BF4;&#x8FD9;&#x79CD;&#x60C5;&#x51B5;&#x7684;&#x5904;&#x7406;&#x6D41;&#x7A0B;&#x3002;</p>
<ol>
<li>
<p><a href="http://xn--3g-gm1dq07apvcnv6f.163.com" target="_blank" rel="external nofollow noopener noreferrer">&#x5BF9;&#x65B9;&#x67E5;&#x8BE2;3g.163.com</a> &#x8FD9;&#x4E2A;&#x57DF;&#x540D;&#xFF0C;&#x201C;&#x9012;&#x5F52;&#x670D;&#x52A1;&#x5668;&#x201D;&#x53D1;&#x73B0;&#x81EA;&#x5DF1;&#x7684;&#x7F13;&#x5B58;&#x4E2D;&#x6CA1;&#x6709;</p>
</li>
<li>
<p>&#x201C;&#x9012;&#x5F52;&#x670D;&#x52A1;&#x5668;&#x201D;&#x4F1A;&#x5148;&#x53BB;&#x627E;&#x201C;&#x6839;&#x57DF;&#x540D;&#x670D;&#x52A1;&#x5668;&#x201D;&#x5E2E;&#x5FD9;&#xFF0C;&#x201C;&#x6839;&#x670D;&#x52A1;&#x5668;&#x201D;&#x4F1A;&#x544A;&#x8BC9;&#x201C;&#x9012;&#x5F52;&#x670D;&#x52A1;&#x5668;&#x201D;&#x8BF4;&#xFF1A;&#x8FD9;&#x4E2A;&#x57DF;&#x540D;&#x5C5E;&#x4E8E; com &#x8FD9;&#x4E2A;&#x5206;&#x652F;&#x4E4B;&#x4E0B;&#xFF0C;&#x4F60;&#x53BB;&#x627E; com &#x8FD9;&#x4E2A;&#x57DF;&#x540D;&#x7684;&#x201C;&#x6743;&#x5A01;&#x670D;&#x52A1;&#x5668;&#x201D;&#xFF0C;&#x8FD9;&#x4E2A;&#x6743;&#x5A01;&#x670D;&#x52A1;&#x5668;&#x7684; IP&#x5730;&#x5740; &#x662F; xxx&#x3002;</p>
</li>
<li>
<p>&#x7136;&#x540E;&#x201C;&#x9012;&#x5F52;&#x670D;&#x52A1;&#x5668;&#x201D;&#x6839;&#x636E;&#x62FF;&#x5230;&#x7684;&#x8FD9;&#x4E2A; xxx&#x5730;&#x5740;&#xFF0C;&#x53C8;&#x53BB;&#x627E;&#x201C;com &#x57DF;&#x540D;&#x7684;&#x6743;&#x5A01;&#x670D;&#x52A1;&#x5668;&#x201D;&#x3002;&#x201C;com &#x57DF;&#x540D;&#x7684;&#x6743;&#x5A01;&#x670D;&#x52A1;&#x5668;&#x201D;&#x544A;&#x8BC9;&#x5B83;&#xFF1A;&#x4F60;&#x5E94;&#x8BE5;&#x53BB;&#x627E;&#x201C;<a href="http://163.com" target="_blank" rel="external nofollow noopener noreferrer">163.com</a> &#x57DF;&#x540D;&#x7684;&#x6743;&#x5A01;&#x670D;&#x52A1;&#x5668;&#x201D;&#xFF0C;&#x8FD9;&#x4E2A;&#x6743;&#x5A01;&#x670D;&#x52A1;&#x5668;&#x7684; IP&#x5730;&#x5740; &#x662F; yyy</p>
</li>
<li>
<p>&#x7136;&#x540E;&#x201C;&#x9012;&#x5F52;&#x670D;&#x52A1;&#x5668;&#x201D;&#x53C8;&#x5C41;&#x98A0;&#x5C41;&#x98A0;&#x5730;&#x53BB;&#x627E;&#x201C;<a href="http://163.com" target="_blank" rel="external nofollow noopener noreferrer">163.com</a> &#x57DF;&#x540D;&#x7684;&#x6743;&#x5A01;&#x670D;&#x52A1;&#x5668;&#x201D;&#x3002;&#x8FD9;&#x65F6;&#x5019;&#x201C;<a href="http://163.com" target="_blank" rel="external nofollow noopener noreferrer">163.com</a> &#x57DF;&#x540D;&#x7684;&#x6743;&#x5A01;&#x670D;&#x52A1;&#x5668;&#x201D;&#x624D;&#x4F1A;&#x544A;&#x8BC9;&#x5B83;&#xFF0C;<a href="http://3g.163.com" target="_blank" rel="external nofollow noopener noreferrer">3g.163.com</a> &#x8FD9;&#x4E2A;&#x57DF;&#x540D;&#x7684; IP&#x5730;&#x5740; &#x5230;&#x5E95;&#x662F;&#x591A;&#x5C11;&#x3002;</p>
</li>
</ol>
<p>&#x5927;&#x4F19;&#x513F;&#x770B;&#x5230;&#x6CA1;&#x6709;&#xFF1F;&#x6574;&#x4E2A;&#x8FC7;&#x7A0B;&#x5982;&#x540C;&#x201C;&#x8E22;&#x76AE;&#x7403;&#x201D;&#xFF0C;&#x6548;&#x7387;&#x662F;&#x5F88;&#x4F4E;&#x7684;&#x3002;&#x6240;&#x4EE5;&#x4FFA;&#x524D;&#x9762;&#x63D0;&#x5230;&#xFF0C;&#x201C;&#x9012;&#x5F52;&#x57DF;&#x540D;&#x670D;&#x52A1;&#x5668;&#x201D;&#x5FC5;&#x987B;&#x5F97;&#x6709;&#x4E00;&#x4E2A;&#x7F13;&#x5B58;&#xFF0C;&#x4EE5;&#x6B64;&#x6765;&#x4F18;&#x5316;&#x6548;&#x7387;&#xFF08;&#x4E0D;&#x7528;&#x6BCF;&#x6B21;&#x67E5;&#x8BE2;&#x90FD;&#x6765;&#x4E00;&#x6B21;&#x201C;&#x8E22;&#x76AE;&#x7403;&#x201D;&#xFF09;&#x3002;</p>
<p>&#xFF08;&#x4E09;&#xFF09;&#x540C;&#x6B65;&#x7684;&#x5468;&#x671F;</p>
<p>&#x8BF4;&#x5B8C;&#x4E86;&#x201C;&#x57DF;&#x540D;&#x7684;&#x540C;&#x6B65;&#x201D;&#xFF0C;&#x987A;&#x4FBF;&#x63D0;&#x4E00;&#x4E0B;&#x201C;&#x540C;&#x6B65;&#x7684;&#x5468;&#x671F;&#x201D;&#x3002;</p>
<p>&#x56E0;&#x4E3A;&#x4E92;&#x8054;&#x7F51;&#x4E0A;&#x7684;&#x57DF;&#x540D;&#x4FE1;&#x606F;&#x662F;&#x6709;&#x53EF;&#x80FD;&#x53D1;&#x751F;&#x53D8;&#x5316;&#x7684;&#x3002;&#x6BD4;&#x5982;&#x589E;&#x52A0;&#x4E86;&#x67D0;&#x4E2A;&#x65B0;&#x57DF;&#x540D;&#xFF0C;&#x6CE8;&#x9500;&#x4E86;&#x67D0;&#x4E2A;&#x65E7;&#x57DF;&#x540D;&#xFF0C;&#x6216;&#x8005;&#x67D0;&#x4E2A;&#x57DF;&#x540D;&#x5BF9;&#x5E94;&#x7684; IP&#x5730;&#x5740; &#x53D8;&#x4E86;&#x3002;&#x6240;&#x4EE5;&#xFF0C;&#x201C;&#x9012;&#x5F52;&#x670D;&#x52A1;&#x5668;&#x201D;&#x4E0A;&#x4FDD;&#x7559;&#x7684;&#x7F13;&#x5B58;&#x4E2D;&#xFF0C;&#x6BCF;&#x4E00;&#x6761;&#x57DF;&#x540D;&#x8BB0;&#x5F55;&#x90FD;&#x6709;&#x4E00;&#x4E2A;&#x751F;&#x547D;&#x5468;&#x671F;&#xFF08;&#x53EF;&#x80FD;&#x662F;&#x51E0;&#x5206;&#x949F;&#xFF0C;&#x4E5F;&#x53EF;&#x80FD;&#x662F;&#x51E0;&#x5C0F;&#x65F6;&#xFF09;&#x3002;&#x5982;&#x679C;&#x67D0;&#x6761;&#x8BB0;&#x5F55;&#x7684;&#x751F;&#x547D;&#x5468;&#x671F;&#x8FC7;&#x4E86;&#xFF0C;&#x5C31;&#x4F1A;&#x88AB;&#x5220;&#x9664;&#xFF0C;&#x7136;&#x540E;&#x91CD;&#x65B0;&#x540C;&#x6B65;&#x3002;</p>
<h2 id="&#x5565;&#x662F;-&#x57DF;&#x540D;&#x52AB;&#x6301;-&#xFF1F;"><a class="header-anchor" href="#&#x5565;&#x662F;-&#x57DF;&#x540D;&#x52AB;&#x6301;-&#xFF1F;"></a>&#x5565;&#x662F;&#x201C;&#x57DF;&#x540D;&#x52AB;&#x6301;&#x201D;&#xFF1F;</h2>
<p>&#x521A;&#x624D;&#x8BF4;&#x4E86;&#xFF0C;&#x57DF;&#x540D;&#x670D;&#x52A1;&#x5668;&#x4E0A;&#x90FD;&#x4F1A;&#x4FDD;&#x5B58;&#x4E00;&#x5927;&#x5806;&#x7684;&#x57DF;&#x540D;&#x8BB0;&#x5F55;&#xFF08;&#x6BCF;&#x6761;&#x8BB0;&#x5F55;&#x5305;&#x542B;&#x201C;&#x57DF;&#x540D;&#x201D;&#x548C;&#x201C;IP&#x5730;&#x5740;&#x201D;&#xFF09;&#x3002;&#x5F53;&#x6536;&#x5230;&#x57DF;&#x540D;&#x67E5;&#x8BE2;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x57DF;&#x540D;&#x670D;&#x52A1;&#x5668;&#x4F1A;&#x4ECE;&#x8FD9;&#x5806;&#x8BB0;&#x5F55;&#x4E2D;&#x627E;&#x5230;&#x5BF9;&#x65B9;&#x60F3;&#x8981;&#x7684;&#xFF0C;&#x7136;&#x540E;&#x56DE;&#x5E94;&#x7ED9;&#x5BF9;&#x65B9;&#x3002;</p>
<p>&#x5982;&#x679C;&#x57DF;&#x540D;&#x670D;&#x52A1;&#x5668;&#x4E0A;&#x7684;&#x67D0;&#x6761;&#x8BB0;&#x5F55;&#x88AB;&#x3010;&#x4EBA;&#x4E3A;&#x4FEE;&#x6539;&#x3011;&#x4E86;&#xFF08;&#x6539;&#x6210;&#x9519;&#x7684;&#xFF09;&#xFF0C;&#x90A3;&#x4E48;&#x4E00;&#x65E6;&#x8981;&#x67E5;&#x8BE2;&#x8FD9;&#x6761;&#x8BB0;&#x5F55;&#xFF0C;&#x5F97;&#x5230;&#x7684;&#x5C31;&#x662F;&#x9519;&#x8BEF;&#x7684;&#x7ED3;&#x679C;&#x3002;&#x8FD9;&#x79CD;&#x60C5;&#x51B5;&#x79F0;&#x4E4B;&#x4E3A;&#x201C;&#x57DF;&#x540D;&#x52AB;&#x6301;&#x201D;&#x3002;</p>
<p>&#x2605;&#x8C01;&#x6709;&#x201C;&#x57DF;&#x540D;&#x52AB;&#x6301;&#x201D;&#x7684;&#x4F01;&#x56FE;&#xFF1F;</p>
<p>&#x201C;&#x57DF;&#x540D;&#x52AB;&#x6301;&#x201D;&#x901A;&#x5E38;&#x662F;&#x7535;&#x4FE1;&#x8FD0;&#x8425;&#x5546;&#xFF08;ISP&#xFF09;&#x5E72;&#x7684;&#x597D;&#x4E8B;&#x513F;&#x3002;&#x5F88;&#x591A;&#x5BBD;&#x5E26;&#x7528;&#x6237;&#x7528;&#x7684;&#x57DF;&#x540D;&#x670D;&#x52A1;&#x5668;&#x5C31;&#x662F; ISP &#x63D0;&#x4F9B;&#x7ED9;&#x4F60;&#x7684;&#x3002;</p>
<p>&#x4E3E;&#x4F8B;&#xFF1A;</p>
<p>&#x524D;&#x51E0;&#x5E74;&#x66FE;&#x7ECF;&#x51FA;&#x73B0;&#x8FC7;&#xFF1A;&#x67D0;&#x4E2A; ISP &#x8DDF;&#x67D0;&#x7F51;&#x7AD9;&#x52FE;&#x7ED3;&#xFF0C;&#x628A;&#x7EF4;&#x57FA;&#x767E;&#x79D1;&#x7684;&#x6D41;&#x91CF;&#x91CD;&#x5B9A;&#x5411;&#x5230;XX&#x3002;&#x5177;&#x4F53;&#x641E;&#x6CD5;&#x662F;&#xFF1A;&#x8BE5; ISP &#x7BE1;&#x6539;&#x81EA;&#x5DF1;&#x7684;&#x57DF;&#x540D;&#x670D;&#x52A1;&#x5668;&#x7684;&#x8BB0;&#x5F55;&#xFF0C;&#x628A;&#x91CC;&#x9762;&#x8DDF;&#x7EF4;&#x57FA;&#x767E;&#x79D1; &#x76F8;&#x5173;&#x7684;&#x57DF;&#x540D;&#x8BB0;&#x5F55;&#x7684; IP&#x5730;&#x5740; &#x4FEE;&#x6539;&#x4E3A;XX&#x7684; IP&#x5730;&#x5740;&#x3002;&#x5982;&#x6B64;&#x4E00;&#x6765;&#xFF0C;&#x5047;&#x8BBE;&#x4F60;&#x7528;&#x7684;&#x662F;&#x8FD9;&#x4E2A; ISP &#x7684;&#x57DF;&#x540D;&#x670D;&#x52A1;&#x5668;&#xFF0C;&#x5F53;&#x4F60;&#x5728;&#x6D4F;&#x89C8;&#x5668;&#x8F93;&#x5165; <a href="http://zh.wikipedia.org/%E7%9A%84%E6%97%B6%E5%80%99%EF%BC%8C%E4%BD%A0%E7%9A%84%E7%94%B5%E8%84%91%E6%9F%A5%E8%AF%A2%E5%88%B0%E7%9A%84" target="_blank" rel="external nofollow noopener noreferrer">http://zh.wikipedia.org/&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x4F60;&#x7684;&#x7535;&#x8111;&#x67E5;&#x8BE2;&#x5230;&#x7684;</a> IP&#x5730;&#x5740; &#x5176;&#x5B9E;&#x662F;XX&#x7684; IP&#x5730;&#x5740;&#xFF0C;&#x6240;&#x4EE5;&#x6D4F;&#x89C8;&#x5668;&#x6253;&#x5F00;&#x7684;&#x662F;&#x201C;XX&#x201D;&#x7684;&#x4E3B;&#x9875;&#x3002;</p>
<p>&#x2605;&#x5982;&#x4F55;&#x5BF9;&#x4ED8;&#x201C;&#x57DF;&#x540D;&#x52AB;&#x6301;&#x201D;&#xFF1F;</p>
<p>&#x521A;&#x624D;&#x8BF4;&#x4E86;&#xFF0C;&#x201C;&#x57DF;&#x540D;&#x52AB;&#x6301;&#x201D;&#x7684;&#x6839;&#x6E90;&#x5728;&#x4E8E;&#xFF1A;&#x57DF;&#x540D;&#x670D;&#x52A1;&#x5668;&#x4E0A;&#x7684;&#x8BB0;&#x5F55;&#x88AB;&#x4EBA;&#x7ED9;&#x6539;&#x4E86;&#x3002;&#x8981;&#x5BF9;&#x4ED8;&#x8FD9;&#x79CD;&#x800D;&#x6D41;&#x6C13;&#xFF0C;&#x6700;&#x76F4;&#x63A5;&#x7684;&#x529E;&#x6CD5;&#x5C31;&#x662F;&#x4E0D;&#x8981;&#x4F7F;&#x7528;&#x8FD9;&#x79CD;&#x6D41;&#x6C13; ISP &#x63D0;&#x4F9B;&#x7684;&#x57DF;&#x540D;&#x670D;&#x52A1;&#x5668;&#xFF0C;&#x6539;&#x7528;&#x56FD;&#x5916;&#x90A3;&#x4E9B;&#x6BD4;&#x8F83;&#x9760;&#x8C31;&#x7684;&#x3002;&#x76EE;&#x524D;&#x53E3;&#x7891;&#x6700;&#x597D;&#x7684;&#xFF0C;&#x5927;&#x6982;&#x662F; Google &#x63D0;&#x4F9B;&#x7684;&#x4E24;&#x4E2A;&#x57DF;&#x540D;&#x670D;&#x52A1;&#x5668;&#xFF0C;IP&#x5730;&#x5740; &#x5206;&#x522B;&#x662F; 8.8.8.8 &#x548C; 8.8.4.4 &#x2014;&#x2014;&#x8FD9;&#x4FE9;&#x4E0D;&#x5149;&#x662F;&#x5730;&#x5740;&#x597D;&#x8BB0;&#xFF0C;&#x66F4;&#x91CD;&#x8981;&#x7684;&#x662F;&#xFF0C;&#x4E0D;&#x4F1A;&#x800D;&#x6D41;&#x6C13;&#x3002;</p>
<h2 id="&#x5565;&#x662F;-&#x57DF;&#x540D;&#x6C61;&#x67D3;-&#xFF1F;"><a class="header-anchor" href="#&#x5565;&#x662F;-&#x57DF;&#x540D;&#x6C61;&#x67D3;-&#xFF1F;"></a>&#x5565;&#x662F;&#x201C;&#x57DF;&#x540D;&#x6C61;&#x67D3;&#x201D;&#xFF1F;</h2>
<p>&#x5148;&#x63D0;&#x9192;&#x4E00;&#x4E0B;&#xFF1A;&#x201C;&#x57DF;&#x540D;&#x6C61;&#x67D3;&#x201D;&#x8FD9;&#x4E2A;&#x8BCD;&#x8FD8;&#x6709;&#x5176;&#x5B83;&#x51E0;&#x4E2A;&#x522B;&#x540D;&#xFF0C;&#x5206;&#x522B;&#x662F;&#x201C;&#x57DF;&#x540D;&#x6B3A;&#x9A97;&#x201D;&#x3001;&#x201C;&#x57DF;&#x540D;&#x7F13;&#x5B58;&#x6295;&#x6BD2;&#x201D;&#xFF08;&#x6D0B;&#x6587;&#x53EB;&#xFF1A;DNS cache poisoning&#xFF09;&#x3002;&#x4ECA;&#x540E;&#x770B;&#x5230;&#x8FD9;&#x51E0;&#x4E2A;&#x522B;&#x540D;&#xFF0C;&#x8981;&#x6653;&#x5F97;&#x662F;&#x540C;&#x4E00;&#x4E2A;&#x610F;&#x601D;&#x3002;</p>
<p>&#x201C;&#x57DF;&#x540D;&#x6C61;&#x67D3;&#x201D;&#x7684;&#x539F;&#x7406;&#xFF0C;&#x7B80;&#x5355;&#x8BF4;&#x6765;&#x662F;&#x8FD9;&#x6837;&#x6EF4;&#xFF1A;&#x5F53;&#x4F60;&#x7684;&#x7535;&#x8111;&#x5411;&#x57DF;&#x540D;&#x670D;&#x52A1;&#x5668;&#x53D1;&#x9001;&#x4E86;&#x201C;&#x57DF;&#x540D;&#x67E5;&#x8BE2;&#x201D;&#x7684;&#x8BF7;&#x6C42;&#xFF0C;&#x7136;&#x540E;&#x57DF;&#x540D;&#x670D;&#x52A1;&#x5668;&#x628A;&#x56DE;&#x5E94;&#x53D1;&#x9001;&#x7ED9;&#x4F60;&#x7684;&#x7535;&#x8111;&#xFF0C;&#x8FD9;&#x4E4B;&#x95F4;&#x662F;&#x6709;&#x4E00;&#x4E2A;&#x65F6;&#x95F4;&#x5DEE;&#x7684;&#x3002;&#x5982;&#x679C;&#x67D0;&#x4E2A;&#x653B;&#x51FB;&#x8005;&#x80FD;&#x591F;&#x5728;&#x57DF;&#x540D;&#x670D;&#x52A1;&#x5668;&#x7684;&#x201C;DNS&#x5E94;&#x7B54;&#x201D;&#x8FD8;&#x6CA1;&#x6709;&#x5230;&#x8FBE;&#x4F60;&#x7684;&#x7535;&#x8111;&#x4E4B;&#x524D;&#xFF0C;&#x5148;&#x4F2A;&#x9020;&#x4E00;&#x4E2A;&#x9519;&#x8BEF;&#x7684;&#x201C;DNS&#x5E94;&#x7B54;&#x201D;&#x53D1;&#x7ED9;&#x4F60;&#x7535;&#x8111;&#x3002;&#x90A3;&#x4E48;&#x4F60;&#x7684;&#x7535;&#x8111;&#x6536;&#x5230;&#x7684;&#x5C31;&#x662F;&#x9519;&#x8BEF;&#x7684;&#x4FE1;&#x606F;&#xFF0C;&#x5E76;&#x5F97;&#x5230;&#x4E00;&#x4E2A;&#x9519;&#x8BEF;&#x7684; IP&#x5730;&#x5740;&#x3002;</p>
<p>&#x2605;&#x8C01;&#x6709;&#x201C;&#x57DF;&#x540D;&#x6C61;&#x67D3;&#x201D;&#x7684;&#x4F01;&#x56FE;&#xFF1F;</p>
<p>&#x4ECE;&#x6280;&#x672F;&#x4E0A;&#x8BB2;&#xFF0C;&#x53EA;&#x8981;&#x653B;&#x51FB;&#x8005;&#x80FD;&#x591F;&#x4F4D;&#x4E8E;&#x201C;&#x4F60;&#x201D;&#x548C;&#x201C;&#x57DF;&#x540D;&#x670D;&#x52A1;&#x5668;&#x201D;&#x7684;&#x4F20;&#x8F93;&#x7EBF;&#x8DEF;&#x4E2D;&#x95F4;&#xFF0C;&#x90A3;&#x4E48;&#x653B;&#x51FB;&#x8005;&#x5C31;&#x6709;&#x673A;&#x4F1A;&#x641E;&#x201C;&#x57DF;&#x540D;&#x6C61;&#x67D3;&#x201D;&#x3002;&#x80FD;&#x591F;&#x505A;&#x5230;&#x8FD9;&#x70B9;&#x7684;&#xFF0C;&#x53EF;&#x80FD;&#x662F;&#x4E00;&#x4E2A;&#x9ED1;&#x5BA2;/&#x9A87;&#x5BA2;&#xFF0C;&#x4E5F;&#x53EF;&#x80FD;&#x662F; ISP&#x3002;</p>
<p>&#x2605;&#x67D0;&#x56FD;&#x5BB6;&#x9632;&#x706B;&#x5899;&#x7684;&#x4E24;&#x79CD;&#x201C;&#x57DF;&#x540D;&#x6C61;&#x67D3;&#x201D;</p>
<p>&#x521A;&#x624D;&#x4FFA;&#x89E3;&#x91CA;&#x4E86;&#x201C;&#x57DF;&#x540D;&#x6C61;&#x67D3;&#x201D;&#x7684;&#x539F;&#x7406;&#xFF0C;&#x90A3;&#x79CD;&#x5F62;&#x5F0F;&#x4E0D;&#x59A8;&#x79F0;&#x4E3A;&#x201C;&#x76F4;&#x63A5;&#x6C61;&#x67D3;&#x201D;&#x3002;&#x7531;&#x4E8E;&#x67D0;&#x56FD;&#x5BB6;&#x9632;&#x706B;&#x5899;&#x7684;&#x7279;&#x6B8A;&#x6027;&#xFF0C;&#x5B83;&#x4E0D;&#x4F46;&#x53EF;&#x4EE5;&#x505A;&#x5230;&#x201C;&#x76F4;&#x63A5;&#x6C61;&#x67D3;&#x201D;&#xFF0C;&#x8FD8;&#x53EF;&#x4EE5;&#x505A;&#x5230;&#x201C;&#x95F4;&#x63A5;&#x6C61;&#x67D3;&#x201D;&#x3002;&#x800C;&#x666E;&#x901A;&#x7684;&#x9A87;&#x5BA2;&#x9876;&#x591A;&#x53EA;&#x80FD;&#x505A;&#x5230;&#x201C;&#x76F4;&#x63A5;&#x6C61;&#x67D3;&#x201D;&#xFF0C;&#x96BE;&#x4EE5;&#x505A;&#x5230;&#x201C;&#x5927;&#x8303;&#x56F4;&#x7684;&#x95F4;&#x63A5;&#x6C61;&#x67D3;&#x201D;&#x3002;</p>
<p>&#x90A3;&#x4E48;&#x8FD9;&#x4E24;&#x79CD;&#x6C61;&#x67D3;&#x6709;&#x5565;&#x533A;&#x522B;&#x634F;&#xFF1F;&#x4E14;&#x542C;&#x4FFA;&#x7EC6;&#x7EC6;&#x9053;&#x6765;&#x3002;</p>
<p>&#x25C7;&#x67D0;&#x56FD;&#x5BB6;&#x9632;&#x706B;&#x5899;&#x90E8;&#x7F72;&#x5728;&#x54EA;&#xFF1F;</p>
<p>&#x9996;&#x5148;&#x6709;&#x5FC5;&#x8981;&#x5148;&#x626B;&#x76F2;&#x4E00;&#x4E0B;&#x201C;&#x67D0;&#x56FD;&#x5BB6;&#x9632;&#x706B;&#x5899;&#xFF08;&#x5176;&#x5B9E;&#x662F;&#x4E00;&#x79CD;IDS&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x5165;&#x4FB5;&#x68C0;&#x6D4B;&#x7CFB;&#x7EDF;&#xFF09;&#x7684;&#x90E8;&#x7F72;&#x4F4D;&#x7F6E;&#x201D;&#x3002;X&#x56FD;&#x4E92;&#x8054;&#x7F51;&#x53EA;&#x6709;&#x5C11;&#x6570;&#x51E0;&#x4E2A;&#x56FD;&#x9645;&#x51FA;&#x53E3;&#xFF08;&#x540D;&#x6C14;&#x8F83;&#x5927;&#x7684;&#x662F;&#xFF1A;A&#x51FA;&#x53E3;&#x3001;B&#x51FA;&#x53E3;&#x3001;C&#x51FA;&#x53E3;&#xFF09;&#x3002;&#x5982;&#x679C;&#x4F60;&#x8981;&#x8BBF;&#x95EE;&#x56FD;&#x5916;&#x7F51;&#x7AD9;&#xFF0C;&#x4F60;&#x7684;&#x7F51;&#x7EDC;&#x6570;&#x636E;&#x6D41;&#x5C31;&#x5FC5;&#x5B9A;&#x4F1A;&#x7ECF;&#x8FC7;&#x5176;&#x4E2D;&#x7684;&#x67D0;&#x4E2A;&#x201C;&#x56FD;&#x9645;&#x51FA;&#x53E3;&#x201D;&#x3002;</p>
<p>&#x25C7;&#x67D0;&#x56FD;&#x5BB6;&#x9632;&#x706B;&#x5899;&#x7684;&#x76F4;&#x63A5;&#x6C61;&#x67D3;</p>
<p>&#x56E0;&#x4E3A;&#x67D0;&#x56FD;&#x5BB6;&#x9632;&#x706B;&#x5899;&#x90E8;&#x7F72;&#x5728;&#x56FD;&#x9645;&#x51FA;&#x53E3;&#x3002;&#x5982;&#x679C;&#x4F60;&#x7528;&#x7684;&#x662F;&#x3010;&#x56FD;&#x5916;&#x7684;&#x3011;&#x57DF;&#x540D;&#x670D;&#x52A1;&#x5668;&#xFF0C;&#x4F60;&#x7684;&#x201C;DNS&#x8BF7;&#x6C42;&#x201D;&#x5FC5;&#x5B9A;&#x4F1A;&#x7ECF;&#x8FC7;&#x56FD;&#x9645;&#x51FA;&#x53E3;&#xFF1B;&#x540C;&#x6837;&#xFF0C;&#x57DF;&#x540D;&#x670D;&#x52A1;&#x5668;&#x7684;&#x201C;DNS&#x5E94;&#x7B54;&#x201D;&#x5FC5;&#x5B9A;&#x4E5F;&#x4F1A;&#x7ECF;&#x8FC7;&#x56FD;&#x9645;&#x51FA;&#x53E3;&#x624D;&#x80FD;&#x5230;&#x4F60;&#x7684;&#x7535;&#x8111;&#x3002;&#x8FD9;&#x4E00;&#x6765;&#x4E00;&#x56DE;&#x5C31;&#x7ED9;&#x67D0;&#x56FD;&#x5BB6;&#x9632;&#x706B;&#x5899; &#x63D0;&#x4F9B;&#x4E86;&#x673A;&#x4F1A;&#x3002;</p>
<p>&#x8FD9;&#x79CD;&#x6C61;&#x67D3;&#x5C31;&#x662F;&#x4FFA;&#x6240;&#x8BF4;&#x7684;&#x201C;&#x76F4;&#x63A5;&#x6C61;&#x67D3;&#x201D;&#x3002;</p>
<p>&#x25C7;&#x67D0;&#x56FD;&#x5BB6;&#x9632;&#x706B;&#x5899; &#x7684;&#x95F4;&#x63A5;&#x6C61;&#x67D3;</p>
<p>&#x521A;&#x624D;&#x4ECB;&#x7ECD;&#x4E86;&#x201C;&#x4F7F;&#x7528;&#x56FD;&#x5916;&#x57DF;&#x540D;&#x670D;&#x52A1;&#x5668;&#x4F1A;&#x88AB;&#x76F4;&#x63A5;&#x6C61;&#x67D3;&#x201D;&#x3002;&#x90A3;&#x5982;&#x679C;&#x4F60;&#x7528;&#x7684;&#x662F;&#x3010;&#x56FD;&#x5185;&#x7684;&#x3011;&#x57DF;&#x540D;&#x670D;&#x52A1;&#x5668;&#x634F;&#xFF1F;&#x5C31;&#x4F1A;&#x88AB;&#x201C;&#x95F4;&#x63A5;&#x6C61;&#x67D3;&#x201D;&#x3002;&#x8FC7;&#x7A0B;&#x5982;&#x4E0B;&#xFF1A;</p>
<ol>
<li>
<p>&#x6BD4;&#x65B9;&#x8BF4;&#x4F60;&#x7528;&#x7684;&#x662F;&#x7535;&#x4FE1;&#x7684; DNS&#x670D;&#x52A1;&#x5668;&#xFF0C;&#x7136;&#x540E;&#x4F60;&#x60F3;&#x8981;&#x8BBF;&#x95EE;&#x67D0;&#x4E2A;&#x88AB;&#x4E0D;&#x53D7;&#x6B22;&#x8FCE;&#x7684;&#x7F51;&#x7AD9;&#x3002;</p>
</li>
<li>
<p>&#x5BF9;&#x4E8E;&#x4E0D;&#x53D7;&#x6B22;&#x8FCE;&#x7684;&#x7F51;&#x7AD9;&#xFF0C;&#x5176;&#x7F51;&#x7AD9;&#x670D;&#x52A1;&#x5668;&#x5FC5;&#x5B9A;&#x5728;&#x56FD;&#x5916;&#xFF0C;&#x800C;&#x4E14;&#x7F51;&#x7AD9;&#x7684;&#x57DF;&#x540D;&#x80AF;&#x5B9A;&#x4E5F;&#x4E0D;&#x4F1A;&#x4F7F;&#x7528; CN &#x4E4B;&#x4E0B;&#x7684;&#x57DF;&#x540D;&#x3002;&#x6240;&#x4EE5;&#xFF0C;&#x88AB;&#x5C01;&#x9501;&#x7684;&#x7F51;&#x7AD9;&#xFF0C;&#x5176;&#x4E0A;&#x7EA7;&#x57DF;&#x540D;&#x7684;&#x201C;&#x6743;&#x5A01;&#x57DF;&#x540D;&#x670D;&#x52A1;&#x5668;&#x201D;&#x80AF;&#x5B9A;&#x4E5F;&#x662F;&#x5728;&#x56FD;&#x5916;&#x3002;</p>
</li>
<li>
<p>&#x5F53;&#x4F60;&#x5411;&#x201C;&#x7535;&#x4FE1;&#x7684;DNS&#x670D;&#x52A1;&#x5668;&#x201D;&#x67E5;&#x8BE2;&#x53CD;&#x5171;&#x7F51;&#x7AD9;&#x7684;&#x57DF;&#x540D;&#xFF0C;&#x8FD9;&#x53F0;&#x201C;&#x7535;&#x4FE1;&#x7684;DNS&#x670D;&#x52A1;&#x5668;&#x201D;&#x5C31;&#x4F1A;&#x53BB;&#x627E;&#x8FD9;&#x4E2A;&#x4E0D;&#x53D7;&#x6B22;&#x8FCE;&#x7684;&#x7F51;&#x7AD9;&#x7684;&#x4E0A;&#x4E00;&#x7EA7;&#x57DF;&#x540D;&#x5BF9;&#x5E94;&#x7684;&#x201C;&#x6743;&#x5A01;&#x57DF;&#x540D;&#x670D;&#x52A1;&#x5668;&#x201D;&#x53BB;&#x8FDB;&#x884C;&#x201C;&#x57DF;&#x540D;&#x67E5;&#x8BE2;&#x201D;&#x3002;</p>
</li>
<li>
<p>&#x56E0;&#x4E3A;&#x662F;&#x4ECE;&#x56FD;&#x5916;&#x8FDB;&#x884C;&#x57DF;&#x540D;&#x67E5;&#x8BE2;&#xFF0C;&#x76F8;&#x5173;&#x7684;&#x6570;&#x636E;&#x6D41;&#x5FC5;&#x5B9A;&#x8981;&#x7ECF;&#x8FC7;&#x56FD;&#x9645;&#x51FA;&#x53E3;&#x3002;&#x4E00;&#x65E6;&#x7ECF;&#x8FC7;&#x56FD;&#x9645;&#x51FA;&#x53E3;&#xFF0C;&#x5C31;&#x4F1A;&#x88AB; &#x67D0;&#x56FD;&#x5BB6;&#x9632;&#x706B;&#x5899; &#x6C61;&#x67D3;&#x3002;</p>
</li>
<li>
<p>&#x5982;&#x6B64;&#x4E00;&#x6765;&#xFF0C;&#x201C;&#x7535;&#x4FE1;&#x7684;&#x57DF;&#x540D;&#x670D;&#x52A1;&#x5668;&#x201D;&#x62FF;&#x5230;&#x7684;&#x662F;&#x5DF2;&#x7ECF;&#x88AB;&#x6C61;&#x67D3;&#x7684;&#x57DF;&#x540D;&#x8BB0;&#x5F55;&#xFF08;&#x91CC;&#x9762;&#x7684;IP&#x662F;&#x9519;&#x7684;&#xFF09;&#x3002;&#x800C;&#x4E14;&#x201C;&#x7535;&#x4FE1;&#x7684;&#x57DF;&#x540D;&#x670D;&#x52A1;&#x5668;&#x201D;&#x4F1A;&#x628A;&#x8FD9;&#x6761;&#x9519;&#x8BEF;&#x7684;&#x8BB0;&#x5F55;&#x4FDD;&#x5B58;&#x5728;&#x81EA;&#x5DF1;&#x7684;&#x57DF;&#x540D;&#x7F13;&#x5B58;&#x4E2D;&#x3002;</p>
</li>
<li>
<p>&#x4E0B;&#x6B21;&#x5982;&#x679C;&#x6709;&#x53E6;&#x4E00;&#x4E2A;&#x7F51;&#x53CB;&#x4E5F;&#x627E;&#x8FD9;&#x53F0;&#x201C;&#x7535;&#x4FE1;&#x7684;&#x57DF;&#x540D;&#x670D;&#x52A1;&#x201D;&#x67E5;&#x8BE2;&#x8FD9;&#x4E2A;&#x4E0D;&#x53D7;&#x6B22;&#x8FCE;&#x7684;&#x7F51;&#x7AD9;&#xFF0C;&#x4E5F;&#x4F1A;&#x67E5;&#x5230;&#x9519;&#x8BEF;&#x7684;&#x7ED3;&#x679C;&#x3002;</p>
</li>
</ol>
<p>&#x4E0A;&#x8FF0;&#x8FC7;&#x7A0B;&#x4E0D;&#x65AD;&#x91CD;&#x590D;&#xFF0C;&#x6700;&#x7EC8;&#x4F1A;&#x5BFC;&#x81F4;&#xFF1A;&#x5168;&#x56FD;&#x6240;&#x6709;&#x7684;&#x57DF;&#x540D;&#x670D;&#x52A1;&#x5668;&#xFF0C;&#x5B83;&#x4EEC;&#x7684;&#x7F13;&#x5B58;&#x4E2D;&#x53EA;&#x8981;&#x662F;&#x5305;&#x542B;&#x4E86;&#x4E0D;&#x53D7;&#x6B22;&#x8FCE;&#x7684;&#x7F51;&#x7AD9;&#x7684;&#x8BB0;&#x5F55;&#xFF0C;&#x8BB0;&#x5F55;&#x4E2D;&#x7684; IP&#x5730;&#x5740; &#x5FC5;&#x5B9A;&#x662F;&#x9519;&#x7684;&#xFF08;&#x8FD9;&#x4E2A;&#x9519;&#x8BEF;&#x7684; IP&#x5730;&#x5740; &#x4E5F;&#x5C31;&#x662F; &#x67D0;&#x56FD;&#x5BB6;&#x9632;&#x706B;&#x5899; &#x4F2A;&#x9020;&#x7684;&#x90A3;&#x4E2A;&#xFF09;&#x3002;&#x6240;&#x4EE5;&#x8BF4;&#x201C;&#x95F4;&#x63A5;&#x6C61;&#x67D3;&#x201D;&#x662F;&#x5F88;&#x725B;&#x903C;&#x7684;&#xFF0C;&#x53EF;&#x4EE5;&#x628A;&#x9519;&#x8BEF;&#x7684;&#x57DF;&#x540D;&#x8BB0;&#x5F55;&#x6269;&#x6563;&#x5230;&#x5168;&#x56FD;&#x3002;</p>
<p>&#x521A;&#x624D;&#x4FFA;&#x8BF4;&#x4E86;&#xFF0C;&#x201C;&#x57DF;&#x540D;&#x6C61;&#x67D3;&#x201D;&#x4E5F;&#x53EB;&#x201C;&#x57DF;&#x540D;&#x7F13;&#x5B58;&#x6295;&#x6BD2;&#x201D;&#x3002;&#x201C;&#x6295;&#x6BD2;&#x201D;&#x4E00;&#x8BCD;&#x771F;&#x7684;&#x975E;&#x5E38;&#x5F62;&#x8C61;&#x2014;&#x2014;&#x5C31;&#x597D;&#x8C61;&#x5728;&#x67D0;&#x6761;&#x6CB3;&#x6D41;&#x7684;&#x6E90;&#x5934;&#x4E0B;&#x6BD2;&#xFF0C;&#x4ECE;&#x800C;&#x628A;&#x6574;&#x6761;&#x6CB3;&#x6D41;&#x7684;&#x6C34;&#x90FD;&#x6C61;&#x67D3;&#x3002;&#x201C;&#x57DF;&#x540D;&#x6C61;&#x67D3;&#x201D;&#x76F4;&#x63A5;&#x7834;&#x574F;&#x4E86;&#x4E92;&#x8054;&#x7F51;&#x7684;&#x57FA;&#x7840;&#x8BBE;&#x65BD;&#x3002;</p>
<p>&#x539F;&#x6587;&#x5730;&#x5740;&#xFF1A;<a href="http://www.music4x.com/post/877" target="_blank" rel="external nofollow noopener noreferrer">http://www.music4x.com/post/877</a></p>
<h2 id="&#x4E91;&#x6816;&#x793E;&#x4F1A;&#x7684;&#x89E3;&#x6790;"><a class="header-anchor" href="#&#x4E91;&#x6816;&#x793E;&#x4F1A;&#x7684;&#x89E3;&#x6790;"></a><a href="https://m.aliyun.com/yunqi/articles/26413" target="_blank" rel="external nofollow noopener noreferrer">&#x4E91;&#x6816;&#x793E;&#x4F1A;&#x7684;&#x89E3;&#x6790;</a></h2>
<p>&#x57DF;&#x540D;&#x52AB;&#x6301;&#x662F;&#x5E38;&#x89C1;&#x7684;&#x4E92;&#x8054;&#x7F51;&#x653B;&#x51FB;&#x884C;&#x4E3A;&#xFF0C;&#x5176;&#x653B;&#x51FB;&#x539F;&#x7406;&#x4E3B;&#x8981;&#x5206;&#x4E3A;&#x5982;&#x4E0B;&#x51E0;&#x79CD;&#xFF1A;</p>
<ul>
<li>&#x653B;&#x51FB;&#x8005;&#x76D1;&#x6D4B;&#x7528;&#x6237;&#x7684;DNS&#x67E5;&#x8BE2;&#x8BF7;&#x6C42;&#xFF0C;&#x53D1;&#x73B0;&#x6709;&#x67E5;&#x8BE2;&#x7533;&#x8BF7;&#x65F6;&#xFF0C;&#x653B;&#x51FB;&#x8005;&#x4F2A;&#x88C5;&#x6210;DNS&#x670D;&#x52A1;&#x5668;&#x5411;&#x53D1;&#x51FA;&#x8BF7;&#x6C42;&#x7684;&#x4E3B;&#x673A;&#x56DE;&#x590D;&#x4F2A;&#x88C5;&#x7684;DNS&#x54CD;&#x5E94;&#x62A5;&#x6587;&#xFF0C;&#x8FDB;&#x800C;&#x5F15;&#x5BFC;&#x7528;&#x6237;&#x8BBF;&#x95EE;&#x653B;&#x51FB;&#x8005;&#x8BBE;&#x5B9A;&#x7684;&#x975E;&#x6CD5;&#x670D;&#x52A1;&#x5668;&#x5730;&#x5740;&#xFF1B;</li>
<li>LOCALDNS&#x670D;&#x52A1;&#x5668;&#x7684;&#x672C;&#x5730;&#x7F13;&#x5B58;&#x7531;&#x4E8E;&#x67D0;&#x4E9B;&#x539F;&#x56E0;&#x53D7;&#x5230;&#x4E86;&#x6C61;&#x67D3;&#xFF0C;&#x540E;&#x7EED;&#x7684;DNS&#x67E5;&#x8BE2;&#x8BF7;&#x6C42;&#x90FD;&#x4F1A;&#x547D;&#x4E2D;&#x88AB;&#x6C61;&#x67D3;&#x7684;DNS&#x89E3;&#x6790;&#x7ED3;&#x679C;&#xFF0C;&#x8FDB;&#x800C;&#x5BFC;&#x81F4;&#x7528;&#x6237;&#x7684;&#x8BBF;&#x95EE;&#x884C;&#x4E3A;&#x88AB;&#x52AB;&#x6301;&#xFF1B;</li>
</ul>
<p>&#x57DF;&#x540D;&#x52AB;&#x6301;&#x540E;&#x7684;&#x4E1A;&#x52A1;&#x73B0;&#x8C61;&#x8868;&#x73B0;&#x4E3A;&#xFF1A;</p>
<ul>
<li>&#x65E0;&#x6CD5;&#x6B63;&#x5E38;&#x8BBF;&#x95EE;&#x4E1A;&#x52A1;&#x57DF;&#x540D;&#xFF0C;&#x8BBF;&#x95EE;&#x8D85;&#x65F6;&#x6216;&#x8FD4;&#x56DE;&#x9519;&#x8BEF;&#xFF1B;</li>
<li>&#x8BBF;&#x95EE;&#x4E1A;&#x52A1;&#x57DF;&#x540D;&#x8FD4;&#x56DE;&#x6D89;&#x653F;&#x3001;&#x6D89;&#x9EC4;&#x7B49;&#x654F;&#x611F;&#x3001;&#x8FDD;&#x6CD5;&#x9875;&#x9762;&#xFF1B;</li>
<li>&#x8BBF;&#x95EE;&#x4E1A;&#x52A1;&#x57DF;&#x540D;&#x8FD4;&#x56DE;&#x5E7F;&#x544A;&#x3001;&#x5BFC;&#x822A;&#x7B49;&#x7B2C;&#x4E09;&#x65B9;&#x9875;&#x9762;&#xFF1B;</li>
</ul>]]></content>
    
    <summary type="html">
    
      DNS 工作原理是什么，域名劫持、域名欺骗、域名污染又是什么？
    
    </summary>
    
      <category term="通信" scheme="http://ngudream.com/categories/%E9%80%9A%E4%BF%A1/"/>
    
    
      <category term="HTTP" scheme="http://ngudream.com/tags/HTTP/"/>
    
  </entry>
  
  <entry>
    <title>RxJava 内部如何管理线程？</title>
    <link href="http://ngudream.com/2017/08/10/rxjava-why-io/"/>
    <id>http://ngudream.com/2017/08/10/rxjava-why-io/</id>
    <published>2017-08-10T13:37:24.000Z</published>
    <updated>2017-08-10T14:38:44.174Z</updated>
    
    <content type="html"><![CDATA[<p>RxJava&#x4F7F;&#x7528;subscribeOn&#x3001;observeOn&#x548C;onNext&#x7684;&#x65F6;&#x5019;&#x53EF;&#x4EE5;&#x6539;&#x53D8;&#x548C;&#x5207;&#x6362;&#x7EBF;&#x7A0B;&#xFF0C;&#x5B83;&#x4EEC;&#x90FD;&#x662F;&#x6309;&#x987A;&#x5E8F;&#x6267;&#x884C;&#x7684;&#xFF0C;&#x4E0D;&#x662F;&#x5E76;&#x53D1;&#x6267;&#x884C;&#xFF0C;&#x81F3;&#x591A;&#x4E5F;&#x5C31;&#x5207;&#x6362;&#x5230;&#x53E6;&#x5916;&#x4E00;&#x4E2A;&#x7EBF;&#x7A0B;&#xFF0C;&#x5982;&#x679C;&#x5B83;&#x4E2D;&#x95F4;&#x7684;&#x64CD;&#x4F5C;&#x662F;&#x963B;&#x585E;&#x7684;&#xFF0C;&#x4E45;&#x4F1A;&#x5F71;&#x54CD;&#x6574;&#x4E2A;Rx&#x7684;&#x6267;&#x884C;&#x3002;</p>
<p>Rx&#x662F;&#x901A;&#x8FC7;&#x8C03;&#x5EA6;&#x5668;&#x6765;&#x9009;&#x62E9;&#x54EA;&#x4E2A;&#x7EBF;&#x7A0B;&#x6267;&#x884C;&#x7684;&#xFF0C;RxJava&#x5185;&#x7F6E;&#x4E86;&#x51E0;&#x79CD;&#x8C03;&#x5EA6;&#x5668;&#xFF0C;&#x5206;&#x522B;&#x4E3A;&#x4E0D;&#x540C;&#x7684;case&#x63D0;&#x4F9B;&#x7EBF;&#x7A0B;&#xFF1A;</p>
<h2 id="&#x8C03;&#x5EA6;&#x5668;&#x5206;&#x7C7B;"><a class="header-anchor" href="#&#x8C03;&#x5EA6;&#x5668;&#x5206;&#x7C7B;"></a>&#x8C03;&#x5EA6;&#x5668;&#x5206;&#x7C7B;</h2>
<table>
<thead>
<tr>
<th>&#x8C03;&#x5EA6;&#x5668;&#x7C7B;&#x578B;</th>
<th>&#x4F5C;&#x7528;</th>
</tr>
</thead>
<tbody>
<tr>
<td>Schedulers.computation(&#x202F;)</td>
<td>&#x7528;&#x4E8E;&#x8BA1;&#x7B97;&#x4EFB;&#x52A1;&#xFF0C;&#x5982;&#x4E8B;&#x4EF6;&#x5FAA;&#x73AF;&#x6216;&#x548C;&#x56DE;&#x8C03;&#x5904;&#x7406;&#xFF0C;&#x4E0D;&#x8981;&#x7528;&#x4E8E;IO&#x64CD;&#x4F5C;&#xFF0C;&#x9ED8;&#x8BA4;&#x7EBF;&#x7A0B;&#x6570;&#x7B49;&#x4E8E;&#x5904;&#x7406;&#x5668;&#x7684;&#x6570;&#x91CF;&#x3002;&#x5B83;&#x4E5F;&#x662F;&#x8BB8;&#x591A;RxJava&#x65B9;&#x6CD5;&#x7684;&#x9ED8;&#x8BA4;&#x8C03;&#x5EA6;&#x5668;&#xFF1A;buffer(),debounce(),delay(),interval(),sample(),skip()&#x3002;</td>
</tr>
<tr>
<td>Schedulers.from(executor)</td>
<td>&#x4F7F;&#x7528;&#x6307;&#x5B9A;&#x7684;Executor&#x4F5C;&#x4E3A;&#x8C03;&#x5EA6;&#x5668;</td>
</tr>
<tr>
<td>Schedulers.immediate(&#x202F;)</td>
<td>&#x8FD9;&#x4E2A;&#x8C03;&#x5EA6;&#x5668;&#x5141;&#x8BB8;&#x4F60;&#x7ACB;&#x5373;&#x5728;&#x5F53;&#x524D;&#x7EBF;&#x7A0B;&#x6267;&#x884C;&#x4F60;&#x6307;&#x5B9A;&#x7684;&#x5DE5;&#x4F5C;&#x3002;&#x5B83;&#x662F;timeout(),timeInterval(),&#x4EE5;&#x53CA;timestamp()&#x65B9;&#x6CD5;&#x9ED8;&#x8BA4;&#x7684;&#x8C03;&#x5EA6;&#x5668;</td>
</tr>
<tr>
<td><a href="http://Schedulers.io" target="_blank" rel="external nofollow noopener noreferrer">Schedulers.io</a>(&#x202F;)</td>
<td>&#x7528;&#x4E8E;IO&#x5BC6;&#x96C6;&#x578B;&#x4EFB;&#x52A1;&#xFF0C;&#x5982;&#x5F02;&#x6B65;&#x963B;&#x585E;IO&#x64CD;&#x4F5C;&#xFF08;&#x8BFB;&#x5199;&#x6587;&#x4EF6;&#x3001;&#x8BFB;&#x5199;&#x6570;&#x636E;&#x5E93;&#x3001;&#x7F51;&#x7EDC;&#x4FE1;&#x606F;&#x4EA4;&#x4E92;&#x7B49;&#xFF09;&#xFF0C;&#x8FD9;&#x4E2A;&#x8C03;&#x5EA6;&#x5668;&#x7684;&#x7EBF;&#x7A0B;&#x6C60;&#x4F1A;&#x6839;&#x636E;&#x9700;&#x8981;&#x589E;&#x957F;&#xFF1B;&#x5BF9;&#x4E8E;&#x666E;&#x901A;&#x7684;&#x8BA1;&#x7B97;&#x4EFB;&#x52A1;&#xFF0C;&#x8BF7;&#x4F7F;&#x7528;Schedulers.computation()&#xFF1B;<a href="http://Schedulers.io" target="_blank" rel="external nofollow noopener noreferrer">Schedulers.io</a>(&#x202F;)&#x9ED8;&#x8BA4;&#x662F;&#x4E00;&#x4E2A;CachedThreadScheduler&#xFF0C;&#x5F88;&#x50CF;&#x4E00;&#x4E2A;&#x6709;&#x7EBF;&#x7A0B;&#x7F13;&#x5B58;&#x7684;&#x65B0;&#x7EBF;&#x7A0B;&#x8C03;&#x5EA6;&#x5668;</td>
</tr>
<tr>
<td>Schedulers.newThread(&#x202F;)</td>
<td>&#x4E3A;&#x6BCF;&#x4E2A;&#x4EFB;&#x52A1;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x65B0;&#x7EBF;&#x7A0B;&#xFF0C;&#x5B83;&#x662F;&#x6CA1;&#x6709;&#x7EBF;&#x7A0B;&#x6C60;&#x5728;&#x7BA1;&#x7406;&#x7684;</td>
</tr>
<tr>
<td>Schedulers.trampoline(&#x202F;)</td>
<td>&#x4E3A;&#x5F53;&#x524D;&#x7EBF;&#x7A0B;&#x5EFA;&#x7ACB;&#x4E00;&#x4E2A;&#x961F;&#x5217;&#xFF0C;&#x5C06;&#x5F53;&#x524D;&#x4EFB;&#x52A1;&#x52A0;&#x5165;&#x5230;&#x961F;&#x5217;&#x4E2D;&#x4F9D;&#x6B21;&#x6267;&#x884C;&#x3002;&#x5F53;&#x5176;&#x5B83;&#x6392;&#x961F;&#x7684;&#x4EFB;&#x52A1;&#x5B8C;&#x6210;&#x540E;&#xFF0C;&#x5728;&#x5F53;&#x524D;&#x7EBF;&#x7A0B;&#x6392;&#x961F;&#x5F00;&#x59CB;&#x6267;&#x884C;</td>
</tr>
<tr>
<td>AndroidSchedulers.mainThread()</td>
<td>&#x5728;&#x4E3B;&#x7EBF;&#x7A0B;&#x4E2D;&#x5DE5;&#x4F5C;</td>
</tr>
</tbody>
</table>
<p>&#x6211;&#x4EEC;&#x6765;&#x770B;&#x4E00;&#x4E0B;&#x6E90;&#x7801;&#xFF0C;&#x770B;&#x5B83;&#x662F;&#x5982;&#x4F55;&#x533A;&#x5206;&#x7EBF;&#x7A0B;&#x7684;&#xFF1F;</p>
<pre><code>private Schedulers() {
        Scheduler c = RxJavaPlugins.getInstance().getSchedulersHook().getComputationScheduler();
        if (c != null) {
            computationScheduler = c;
        } else {
            computationScheduler = new EventLoopsScheduler();
        }

        Scheduler io = RxJavaPlugins.getInstance().getSchedulersHook().getIOScheduler();
        if (io != null) {
            ioScheduler = io;
        } else {
            ioScheduler = new CachedThreadScheduler();
        }

        Scheduler nt = RxJavaPlugins.getInstance().getSchedulersHook().getNewThreadScheduler();
        if (nt != null) {
            newThreadScheduler = nt;
        } else {
            newThreadScheduler = NewThreadScheduler.instance();
        }
    }
</code></pre>
<p>&#x5B83;&#x5185;&#x90E8;&#x7EF4;&#x62A4;&#x4E86;&#x4E00;&#x4E2A;Schedulers&#x7684;&#x5355;&#x4F8B;&#x5BF9;&#x8C61;&#xFF1A;private static final Schedulers INSTANCE = new Schedulers(); &#x5728;&#x5B83;&#x7684;&#x79C1;&#x6709;&#x6784;&#x9020;&#x51FD;&#x6570;&#x4E2D;&#xFF0C;&#x6839;&#x636E;&#x4E0D;&#x540C;&#x7C7B;&#x578B;&#x521B;&#x5EFA;&#x4E86;&#x76F8;&#x5E94;&#x7684;Scheduler&#xFF0C;&#x4E5F;&#x5373;WorkThread&#x3002;</p>
<p><strong>&#x6211;&#x4EEC;&#x5148;&#x6765;&#x770B;&#x4E00;&#x4E0B;computation&#x65B9;&#x5F0F;</strong>&#xFF0C;&#x5B83;&#x662F;&#x4E00;&#x4E2A;EventLoopsScheduler&#xFF0C;&#x5728;&#x8FD9;&#x4E2A;&#x7C7B;&#x5185;&#x90E8;&#x5B9A;&#x4E49;&#x4E86;&#x4E00;&#x4E2A;&#x9759;&#x6001;&#x7684;&#x5185;&#x90E8;&#x7C7B;&#xFF0C;</p>
<pre><code> static final class FixedSchedulerPool {
        final int cores;

        final PoolWorker[] eventLoops;
        long n;

        FixedSchedulerPool() {
            // initialize event loops
            this.cores = MAX_THREADS; //&#x51B3;&#x5B9A;&#x7EBF;&#x7A0B;&#x6C60;&#x4E2D;&#x7EBF;&#x7A0B;&#x4E2A;&#x6570;
            this.eventLoops = new PoolWorker[cores];
            for (int i = 0; i &lt; cores; i++) {
                this.eventLoops[i] = new PoolWorker(THREAD_FACTORY);
            }
        }

        public PoolWorker getEventLoop() {
            // simple round robin, improvements to come
            return eventLoops[(int)(n++ % cores)];
        }
    }
</code></pre>
<p>&#x5B83;&#x7684;&#x7EBF;&#x7A0B;&#x4E2A;&#x6570;&#x662F;&#x6839;&#x636E;MAX_THREADS&#x6765;&#x5B9A;&#x7684;&#xFF0C;&#x90A3;&#x8FD9;&#x4E2A;&#x503C;&#x53C8;&#x662F;&#x5728;&#x54EA;&#x91CC;&#x8D4B;&#x503C;&#x7684;&#x5462;&#xFF1F;&#x8FD8;&#x662F;&#x8FD9;&#x4E2A;&#x7C7B;&#xFF0C;&#x5B83;&#x6709;&#x4E00;&#x4E2A;&#x9759;&#x6001;&#x4EE3;&#x7801;&#x5757;&#xFF1A;</p>
<pre><code>/** 
     * Key to setting the maximum number of computation scheduler threads.
     * Zero or less is interpreted as use available. Capped by available.
     */
    static final String KEY_MAX_THREADS = &quot;rx.scheduler.max-computation-threads&quot;;

static {
        int maxThreads = Integer.getInteger(KEY_MAX_THREADS, 0);
        int ncpu = Runtime.getRuntime().availableProcessors();
        int max;
        if (maxThreads &lt;= 0 || maxThreads &gt; ncpu) {
            max = ncpu;
        } else {
            max = maxThreads;
        }
        MAX_THREADS = max;
    }

</code></pre>
<p>&#x5B83;&#x5148;&#x53D6;SystemProperty&#x4E2D;&#x7684;&#x53D8;&#x91CF;KEY_MAX_THREADS&#xFF0C;&#x7136;&#x540E;&#x5224;&#x65AD;&#x8FD9;&#x4E2A;&#x503C;&#x662F;&#x4E0D;&#x662F;&#x5927;&#x4E8E;cpu&#x4E2A;&#x6570;&#xFF0C;&#x5982;&#x679C;&#x5C0F;&#x4E8E;&#xFF0C;&#x5E76;&#x4E14;&#x5927;&#x5C0F;0&#x5219;&#x4EE5;&#x8FD9;&#x4E2A;&#x503C;&#x4E3A;&#x7EBF;&#x7A0B;&#x7684;&#x4E2A;&#x6570;&#x3002;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x6539;&#x53D8;KEY_MAX_THREADS&#x7684;&#x503C;&#xFF0C;&#x6765;&#x6539;&#x53D8;&#x7EBF;&#x7A0B;&#x6C60;&#x4E2D;&#x7EBF;&#x7A0B;&#x7684;&#x6700;&#x5927;&#x4E2A;&#x6570;&#xFF0C;&#x4F46;&#x4E0D;&#x80FD;&#x5927;&#x4E8E;cpu&#x5185;&#x6838;&#x4E2A;&#x6570;&#x3002;</p>
<p><strong>&#x6211;&#x4EEC;&#x518D;&#x6765;&#x770B;&#x4E00;&#x4E0B;io()&#x65B9;&#x5F0F;&#xFF1A;</strong></p>
<pre><code>private static final class CachedWorkerPool {
        private final long keepAliveTime;
        private final ConcurrentLinkedQueue&lt;ThreadWorker&gt; expiringWorkerQueue;
        private final ScheduledExecutorService evictExpiredWorkerExecutor;

        CachedWorkerPool(long keepAliveTime, TimeUnit unit) {
            this.keepAliveTime = unit.toNanos(keepAliveTime);
            this.expiringWorkerQueue = new ConcurrentLinkedQueue&lt;ThreadWorker&gt;();
		//&#x521B;&#x5EFA;&#x7EBF;&#x7A0B;&#x6C60;
            evictExpiredWorkerExecutor = Executors.newScheduledThreadPool(1, EVICTOR_THREAD_FACTORY);
            evictExpiredWorkerExecutor.scheduleWithFixedDelay(
                    new Runnable() {
                        @Override
                        public void run() {
                            evictExpiredWorkers();
                        }
                    }, this.keepAliveTime, this.keepAliveTime, TimeUnit.NANOSECONDS
            );
        }

        private static CachedWorkerPool INSTANCE = new CachedWorkerPool(
                60L, TimeUnit.SECONDS
        );//&#x6700;&#x5927;&#x4FDD;&#x6D3B;&#x65F6;&#x95F4;

        ThreadWorker get() {
            while (!expiringWorkerQueue.isEmpty()) {//&#x5982;&#x679C;&#x7A7A;&#x95F2;&#x961F;&#x5217;&#x4E0D;&#x4E3A;&#x7A7A;&#xFF0C;&#x5219;&#x4ECE;&#x7A7A;&#x95F2;&#x961F;&#x5217;&#x4E2D;&#x53D6;&#x4E00;&#x4E2A;&#x7EBF;&#x7A0B;&#x6765;&#x7528;&#xFF0C;&#x800C;&#x4E0D;&#x7528;&#x6BCF;&#x6B21;&#x65B0;&#x521B;&#x5EFA;&#x7EBF;&#x7A0B;
                ThreadWorker threadWorker = expiringWorkerQueue.poll();
                if (threadWorker != null) {
                    return threadWorker;
                }
            }

            // No cached worker found, so create a new one.
            return new ThreadWorker(WORKER_THREAD_FACTORY);
        }

        void release(ThreadWorker threadWorker) {
            // Refresh expire time before putting worker back in pool
            threadWorker.setExpirationTime(now() + keepAliveTime);

            expiringWorkerQueue.offer(threadWorker);
        }

        void evictExpiredWorkers() {
            if (!expiringWorkerQueue.isEmpty()) {
                long currentTimestamp = now();

                for (ThreadWorker threadWorker : expiringWorkerQueue) {
                    if (threadWorker.getExpirationTime() &lt;= currentTimestamp) {
                        if (expiringWorkerQueue.remove(threadWorker)) {
                            threadWorker.unsubscribe();
                        }
                    } else {
                        // Queue is ordered with the worker that will expire first in the beginning, so when we
                        // find a non-expired worker we can stop evicting.
                        break;
                    }
                }
            }
        }

        long now() {
            return System.nanoTime();
        }
    }
</code></pre>
<p>CachedThreadScheduler&#x7C7B;&#x5185;&#x90E8;&#x4E5F;&#x5B9A;&#x4E49;&#x4E86;&#x4E00;&#x4E2A;&#x9759;&#x6001;&#x5185;&#x90E8;&#x7C7B;&#xFF0C;&#x7528;&#x6765;&#x521B;&#x5EFA;&#x7EBF;&#x7A0B;&#x6C60;&#x3002;&#x7EBF;&#x7A0B;&#x6C60;&#x662F;&#x7528;Executors.newScheduledThreadPool&#x6765;&#x521B;&#x5EFA;&#x7684;&#xFF0C;&#x6838;&#x5FC3;&#x7EBF;&#x7A0B;&#x4E2A;&#x6570;&#x4E3A;1&#xFF0C;&#x5E76;&#x4F20;&#x5165;&#x4E86;&#x4E00;&#x4E2A;&#x81EA;&#x5B9A;&#x4E49;&#x7684;RxThreadFactory&#xFF1A;</p>
<pre><code>private static final RxThreadFactory EVICTOR_THREAD_FACTORY =
            new RxThreadFactory(EVICTOR_THREAD_NAME_PREFIX);
</code></pre>
<p>RxThreadFactory&#x7C7B;&#x5185;&#x90E8;&#x662F;&#x901A;&#x8FC7;AtomicLongFieldUpdater&#x6765;&#x4E3A;&#x7EBF;&#x7A0B;&#x5B9A;&#x4E49;&#x540D;&#x5B57;&#x7684;&#xFF0C;&#x5B83;&#x4EE5;&#x5BF9;&#x6307;&#x5B9A;&quot;&#x7C7B;&#x7684; &apos;volatile long&#x2019;&#x7C7B;&#x578B;&#x7684;&#x6210;&#x5458;&quot;&#x8FDB;&#x884C;&#x539F;&#x5B50;&#x66F4;&#x65B0;&#x3002;&#x5B83;&#x662F;&#x57FA;&#x4E8E;&#x53CD;&#x5C04;&#x539F;&#x7406;&#x5B9E;&#x73B0;&#x7684;&#x3002;&#x5C31;&#x662F;&#x8BF4;&#xFF0C;&#x5728;&#x4E0D;&#x65AD;&#x8C03;&#x7528;io()&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5982;&#x679C;&#x6CA1;&#x6709;&#x7A7A;&#x95F2;&#x7EBF;&#x7A0B;&#xFF0C;&#x5219;&#x6BCF;&#x6B21;&#x65B0;&#x5EFA;&#x4E00;&#x4E2A;&#xFF0C;&#x8FD9;&#x4E2A;&#x7EBF;&#x7A0B;&#x7684;&#x7684;&#x540D;&#x5B57;&#x662F;&#x7531;&#x524D;&#x7F00;prefix&#x4E0E;counter&#x7EC4;&#x6210;&#x7684;&#x3002;</p>
<pre><code>public final class RxThreadFactory implements ThreadFactory {
    final String prefix;
    volatile long counter;
    static final AtomicLongFieldUpdater&lt;RxThreadFactory&gt; COUNTER_UPDATER
            = AtomicLongFieldUpdater.newUpdater(RxThreadFactory.class, &quot;counter&quot;);

    public RxThreadFactory(String prefix) {
        this.prefix = prefix;
    }

    @Override
    public Thread newThread(Runnable r) {
        Thread t = new Thread(r, prefix + COUNTER_UPDATER.incrementAndGet(this));
        t.setDaemon(true);
        return t;
    }
}
</code></pre>
<p>&#x901A;&#x8FC7;&#x4EE5;&#x4E0A;&#x6E90;&#x7801;&#x7684;&#x5206;&#x6790;&#xFF0C;&#x6211;&#x4EEC;&#x5927;&#x81F4;&#x4E86;&#x89E3;&#x4E86;RxJava&#x662F;&#x5982;&#x4F55;&#x521D;&#x59CB;&#x5316;&#x3001;&#x7BA1;&#x7406;&#x7EBF;&#x7A0B;&#x6C60;&#x7684;&#x3002;&#x6211;&#x4EEC;&#x4E5F;&#x53EF;&#x4EE5;&#x56DE;&#x987E;&#x4E00;&#x4E0B;&#x5728;computation&#x6216;io&#x8C03;&#x5EA6;&#x7684;&#x6A21;&#x5757;&#x91CC;&#x9762;&#x4F7F;&#x7528;Thread.currentThread().getName()&#x65B9;&#x6CD5;&#xFF0C;&#x662F;&#x4E0D;&#x662F;&#x4F1A;&#x5206;&#x522B;&#x6253;&#x5370;&#x4EE5;&#x4E0B;log&#xFF1A;</p>
<pre><code>08-10 22:33:37.180 11395-11565/com.ngudream.rxjava.example D/-----&gt;: -------&gt;onNext&#x7EBF;&#x7A0B;:RxNewThreadScheduler-1
08-10 22:33:37.180 11395-11565/com.ngudream.rxjava.example D/-----&gt;: -------&gt;call&#x7EBF;&#x7A0B;:RxNewThreadScheduler-1

08-10 22:33:39.810 11395-11582/com.ngudream.rxjava.example D/-----&gt;: -------&gt;onNext&#x7EBF;&#x7A0B;:RxCachedThreadScheduler-1
08-10 22:33:39.812 11395-11582/com.ngudream.rxjava.example D/-----&gt;: -------&gt;call&#x7EBF;&#x7A0B;:RxCachedThreadScheduler-1

08-10 22:33:42.112 11395-11601/com.ngudream.rxjava.example D/-----&gt;: -------&gt;onNext&#x7EBF;&#x7A0B;:RxComputationThreadPool-1
08-10 22:33:42.113 11395-11601/com.ngudream.rxjava.example D/-----&gt;: -------&gt;call&#x7EBF;&#x7A0B;:RxComputationThreadPool-1
</code></pre>
<h2 id="&#x603B;&#x7ED3;"><a class="header-anchor" href="#&#x603B;&#x7ED3;"></a>&#x603B;&#x7ED3;</h2>
<p>&#x6211;&#x4EEC;&#x7279;&#x522B;&#x5F3A;&#x8C03;&#x4E00;&#x4E0B;io&#x548C;computation&#xFF0C;&#x56E0;&#x4E3A;&#x5B83;&#x4EEC;&#x4E24;&#x4E2A;&#x90FD;&#x662F;&#x4F9D;&#x8D56;&#x7EBF;&#x7A0B;&#x6C60;&#x6765;&#x7EF4;&#x62A4;&#x7EBF;&#x7A0B;&#x7684;&#xFF0C;&#x533A;&#x522B;&#x5C31;&#x662F;io&#x7EBF;&#x7A0B;&#x6C60;&#x4E2D;&#x7684;&#x4E2A;&#x6570;&#x662F;&#x65E0;&#x9650;&#x7684;&#xFF0C;&#x7531;AtomicLongFieldUpdater&#x4EA7;&#x751F;&#x7684;&#x9012;&#x589E;&#x503C;&#x548C;prefix&#x6765;&#x51B3;&#x5B9A;&#x7EBF;&#x7A0B;&#x7684;&#x540D;&#x5B57;&#xFF1B;&#x800C;computation&#x4E2D;&#x5219;&#x662F;&#x4E00;&#x4E2A;&#x56FA;&#x5B9A;&#x7EBF;&#x7A0B;&#x6570;&#x91CF;&#x7684;&#x7EBF;&#x7A0B;&#x6C60;&#xFF0C;&#x6570;&#x636E;&#x4E3A;cpu&#x4E2A;&#x6570;&#xFF0C;&#x5E76;&#x4E14;&#x4E0D;&#x8981;&#x628A; I/O &#x64CD;&#x4F5C;&#x653E;&#x5728; computation() &#x4E2D;&#xFF0C;&#x5426;&#x5219; I/O &#x64CD;&#x4F5C;&#x7684;&#x7B49;&#x5F85;&#x65F6;&#x95F4;&#x4F1A;&#x6D6A;&#x8D39; CPU&#x3002;</p>
<br>
<p>&#x6240;&#x4EE5;&#x6211;&#x4EEC;&#x5728;&#x4F7F;&#x7528;&#x65F6;&#xFF0C;&#x9700;&#x8981;&#x6CE8;&#x610F;&#xFF0C;&#x63A7;&#x5236;io&#x7EBF;&#x7A0B;&#x7684;&#x6570;&#x91CF;&#xFF0C;&#x5982;&#x679C;&#x4F60;&#x4F7F;&#x7528;&#x4E86;&#x5927;&#x91CF;&#x7684;&#x7EBF;&#x7A0B;&#x7684;&#x8BDD;&#xFF0C;&#x53EF;&#x80FD;&#x4F1A;&#x5BFC;&#x81F4;OutOfMemory&#x7B49;&#x8D44;&#x6E90;&#x7528;&#x5C3D;&#x7684;&#x5F02;&#x5E38;&#x3002;</p>
<br>
<p>io() &#x7684;&#x884C;&#x4E3A;&#x6A21;&#x5F0F;&#x548C; newThread() &#x5DEE;&#x4E0D;&#x591A;&#xFF0C;&#x533A;&#x522B;&#x5728;&#x4E8E; io() &#x7684;&#x5185;&#x90E8;&#x5B9E;&#x73B0;&#x662F;&#x662F;&#x7528;&#x4E00;&#x4E2A;&#x65E0;&#x6570;&#x91CF;&#x4E0A;&#x9650;&#x7684;&#x7EBF;&#x7A0B;&#x6C60;&#xFF0C;&#x53EF;&#x4EE5;&#x91CD;&#x7528;&#x7A7A;&#x95F2;&#x7684;&#x7EBF;&#x7A0B;&#xFF0C;&#x56E0;&#x6B64;&#x591A;&#x6570;&#x60C5;&#x51B5;&#x4E0B; io() &#x6BD4; newThread() &#x66F4;&#x6709;&#x6548;&#x7387;&#x3002;&#x4E0D;&#x8981;&#x628A;&#x8BA1;&#x7B97;&#x5DE5;&#x4F5C;&#x653E;&#x5728; io() &#x4E2D;&#xFF0C;&#x53EF;&#x4EE5;&#x907F;&#x514D;&#x521B;&#x5EFA;&#x4E0D;&#x5FC5;&#x8981;&#x7684;&#x7EBF;&#x7A0B;&#x3002;</p>
<br>
<p>&#x53C2;&#x8003;&#xFF1A;</p>
<ul>
<li><a href="http://www.importnew.com/23325.html" target="_blank" rel="external nofollow noopener noreferrer">http://www.importnew.com/23325.html</a></li>
<li><a href="http://blog.csdn.net/wangkai0681080/article/details/50512415" target="_blank" rel="external nofollow noopener noreferrer">http://blog.csdn.net/wangkai0681080/article/details/50512415</a></li>
<li><a href="http://www.jianshu.com/p/129a26c8ba9e" target="_blank" rel="external nofollow noopener noreferrer">http://www.jianshu.com/p/129a26c8ba9e</a></li>
</ul>]]></content>
    
    <summary type="html">
    
      RxJava 中 Schedulers 有很多种线程切换调度，在不指定线程的情况下，RxJava遵循的是线程不变原则，也就是说，它是在调用 subscribe 方法的那个线程中执行的。我们可以指定切换成哪种线程，那它的内部是如何维护各种不同的线程的呢？
    
    </summary>
    
      <category term="移动开发" scheme="http://ngudream.com/categories/%E7%A7%BB%E5%8A%A8%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="Android" scheme="http://ngudream.com/tags/Android/"/>
    
      <category term="RxJava" scheme="http://ngudream.com/tags/RxJava/"/>
    
  </entry>
  
  <entry>
    <title>Kotlin 如何创建静态方法</title>
    <link href="http://ngudream.com/2017/07/24/kotlin-static-method/"/>
    <id>http://ngudream.com/2017/07/24/kotlin-static-method/</id>
    <published>2017-07-24T12:39:54.000Z</published>
    <updated>2017-07-24T13:22:24.971Z</updated>
    
    <content type="html"><![CDATA[<h2 id="kotlin-&#x5982;&#x4F55;&#x521B;&#x5EFA;&#x9759;&#x6001;&#x65B9;&#x6CD5;"><a class="header-anchor" href="#kotlin-&#x5982;&#x4F55;&#x521B;&#x5EFA;&#x9759;&#x6001;&#x65B9;&#x6CD5;"></a>Kotlin &#x5982;&#x4F55;&#x521B;&#x5EFA;&#x9759;&#x6001;&#x65B9;&#x6CD5;</h2>
<p>&#x6709;&#x4E09;&#x79CD;&#x65B9;&#x6CD5;&#x53EF;&#x4EE5;&#x5B9E;&#x73B0;&#x7C7B;&#x4F3C;Java&#x7684;&#x9759;&#x6001;&#x65B9;&#x6CD5;&#xFF0C;&#x5206;&#x522B;&#x662F;&#xFF1A;&#x5BF9;&#x8C61;&#x58F0;&#x660E;&#x3001;&#x6269;&#x5C55;&#x51FD;&#x6570;&#x3001;&#x4F34;&#x751F;&#x5BF9;&#x8C61;&#x3002;</p>
<h3 id="&#x5BF9;&#x8C61;&#x58F0;&#x660E;"><a class="header-anchor" href="#&#x5BF9;&#x8C61;&#x58F0;&#x660E;"></a>&#x5BF9;&#x8C61;&#x58F0;&#x660E;</h3>
<p>&#x5BF9;&#x8C61;&#x58F0;&#x660E;&#x975E;&#x5E38;&#x597D;&#x7406;&#x89E3;&#xFF0C;&#x5C31;&#x662F;&#x7528;object&#x5173;&#x952E;&#x5B57;&#x58F0;&#x660E;&#x4E86;&#x4E00;&#x4E2A;&#x5BF9;&#x8C61;&#xFF0C;&#x5BF9;&#x8C61;&#x91CC;&#x9762;&#x53EF;&#x4EE5;&#x6709;&#x53D8;&#x91CF;&#x4E5F;&#x53EF;&#x4EE5;&#x6709;&#x65B9;&#x6CD5;&#xFF0C;<br>
&#x5373;&#x6211;&#x4EEC;&#x5728;&#x5B9A;&#x4E49;&#x7C7B;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5C06;&#x5173;&#x952E;&#x5B57;class&#x6539;&#x6210;object&#x6765;&#x4FEE;&#x9970;&#xFF0C;&#x90A3;&#x4E48;&#x8BE5;&#x7C7B;&#x540D;&#x4E0B;&#x7684;&#x65B9;&#x6CD5;&#x90FD;&#x662F;&#x9759;&#x6001;&#x65B9;&#x6CD5;&#x4E86;&#x3002;</p>
<pre><code>/**
 * Created by ngudream on 17-7-24.
 * &#x7C7B;&#x5185;&#x5168;&#x90E8;&#x662F;&#x9759;&#x6001;&#x65B9;&#x6CD5;&#xFF0C;dp&#x548C;px&#x4E4B;&#x95F4;&#x7684;&#x6362;&#x7B97;&#x5DE5;&#x5177;&#x7C7B;
 */
object DensityUtil {

    /**
     * &#x6839;&#x636E;&#x624B;&#x673A;&#x7684;&#x5206;&#x8FA8;&#x7387;&#x4ECE; dp &#x7684;&#x5355;&#x4F4D; &#x8F6C;&#x6210;&#x4E3A; px(&#x50CF;&#x7D20;)
     */
    fun dip2px(context: Context, dpValue: Float): Int {
        val scale = context.resources.displayMetrics.density
        return (dpValue * scale + 0.5f).toInt()
    }

    /**
     * &#x6839;&#x636E;&#x624B;&#x673A;&#x7684;&#x5206;&#x8FA8;&#x7387;&#x4ECE; px(&#x50CF;&#x7D20;) &#x7684;&#x5355;&#x4F4D; &#x8F6C;&#x6210;&#x4E3A; dp
     */
    fun px2dip(context: Context, pxValue: Float): Int {
        val scale = context.resources.displayMetrics.density
        return (pxValue / scale + 0.5f).toInt()
    }

}
</code></pre>
<h3 id="&#x6269;&#x5C55;&#x51FD;&#x6570;"><a class="header-anchor" href="#&#x6269;&#x5C55;&#x51FD;&#x6570;"></a>&#x6269;&#x5C55;&#x51FD;&#x6570;</h3>
<p>&#x5982;&#x679C;&#x4F60;&#x8981;&#x5199;&#x4E00;&#x4E2A;&#x6CA1;&#x6709;&#x5B9E;&#x4F8B;&#x7C7B;&#x5C31;&#x53EF;&#x4EE5;&#x8C03;&#x7528;&#x7684;&#x65B9;&#x6CD5;&#xFF0C;&#x4F46;&#x9700;&#x8981;&#x8BBF;&#x95EE;&#x5230;&#x7C7B;&#x5185;&#x90E8;(&#x6BD4;&#x5982;&#x8BF4;&#x4E00;&#x4E2A;&#x5DE5;&#x5382;&#x65B9;&#x6CD5;)&#xFF0C;&#x4F60;&#x53EF;&#x4EE5;&#x628A;&#x5B83;&#x5199;&#x6210;&#x5B83;&#x6240;&#x5728;&#x7C7B;&#x7684;&#x4E00;&#x4E2A;<a href="http://kotlinlang.org/docs/reference/object-declarations.html" target="_blank" rel="external nofollow noopener noreferrer">&#x6210;&#x5458;</a>(you can write it as a member of an object declaration inside that class)&#x3002;</p>
<ul>
<li>&#x6269;&#x5C55;&#x51FD;&#x6570;&#x662F;&#x9759;&#x6001;&#x89E3;&#x6790;&#x7684;&#xFF0C;&#x5E76;&#x672A;&#x5BF9;&#x539F;&#x7C7B;&#x6DFB;&#x52A0;&#x51FD;&#x6570;&#x6216;&#x5C5E;&#x6027;&#xFF0C;&#x5BF9;&#x7C7B;&#x672C;&#x8EAB;&#x6CA1;&#x6709;&#x4EFB;&#x4F55;&#x5F71;&#x54CD;&#x3002;</li>
<li>&#x6269;&#x5C55;&#x5C5E;&#x6027;&#x5141;&#x8BB8;&#x5B9A;&#x4E49;&#x5728;&#x7C7B;&#x6216;&#x8005;kotlin&#x6587;&#x4EF6;&#x4E2D;&#xFF0C;&#x4E0D;&#x5141;&#x8BB8;&#x5B9A;&#x4E49;&#x5728;&#x51FD;&#x6570;&#x4E2D;&#x3002;</li>
</ul>
<p>&#x6BD4;&#x5982;&#x6211;&#x4EEC;&#x60F3;&#x8BA9;Activity&#x5F02;&#x6B65;&#x52A0;&#x8F7D;&#x56FE;&#x7247;&#xFF0C;Activity&#x4E2D;&#x6DFB;&#x52A0;&#x65B0;&#x7684;&#x65B9;&#x6CD5;&#xFF0C;Java&#x7684;&#x5199;&#x6CD5;&#x662F;&#xFF1A;</p>
<pre><code>public static void setImageAsync(ImageView iv, String url) {
  new Thread(new Runnable() {
          @Override
          public void run() {
              //&#x5F02;&#x6B65;&#x83B7;&#x53D6;url&#x6570;&#x636E;&#xFF0C;&#x7136;&#x540E;&#x8BBE;&#x7F6E;&#x5230;imageview&#x4E2D;
          }
      }).start();
  }
</code></pre>
<p>&#x5728;Kotlin&#x4E2D;&#x4F7F;&#x7528;&#x6269;&#x5C55;&#x51FD;&#x6570;&#x7684;&#x8BDD;&#xFF0C;&#x5199;&#x6CD5;&#x53EF;&#x4EE5;&#x8FD9;&#x6837;&#x5199;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x5728;&#x4EFB;&#x4F55;&#x5730;&#x65B9;&#xFF08;&#x5982;&#x4E00;&#x4E2A;utils&#x6587;&#x4EF6;&#x4E2D;&#xFF09;&#x58F0;&#x660E;&#x8FD9;&#x4E2A;&#x51FD;&#x6570;&#xFF0C;&#x5728;&#x6211;&#x4EEC;&#x7684;Activity&#x5BF9;&#x8C61;&#x4E2D;&#x5C06;&#x5B83;&#x4F5C;&#x4E3A;&#x666E;&#x901A;&#x65B9;&#x6CD5;&#x6765;&#x4F7F;&#x7528;&#xFF1A;</p>
<ul>
<li>Activity&#xFF1A;&#x8868;&#x793A;&#x51FD;&#x6570;&#x7684;&#x63A5;&#x6536;&#x8005;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x51FD;&#x6570;&#x6269;&#x5C55;&#x7684;&#x5BF9;&#x8C61;</li>
<li>. &#xFF1A;&#x6269;&#x5C55;&#x51FD;&#x6570;&#x4FEE;&#x9970;&#x7B26;</li>
<li>setImageAsync&#xFF1A;&#x6269;&#x5C55;&#x51FD;&#x6570;&#x7684;&#x540D;&#x79F0;</li>
</ul>
<pre><code>fun Activity.setImageAsync(url: String?) {
        Thread(Runnable {
            //&#x5F02;&#x6B65;&#x83B7;&#x53D6;url&#x6570;&#x636E;&#xFF0C;&#x7136;&#x540E;&#x8BBE;&#x7F6E;&#x5230;imageview&#x4E2D;
        }).start()
    }


</code></pre>
<p>&#x5728;activity&#x4E2D;&#x8C03;&#x7528;</p>
<pre><code>override fun onCreate(savedInstanceState: Bundle?) {
     super&lt;BaseActivity&gt;.onCreate(savedInstanceState)

     setImageAsync(&quot;url&quot;)
}
</code></pre>
<h3 id="&#x4F34;&#x751F;&#x5BF9;&#x8C61;"><a class="header-anchor" href="#&#x4F34;&#x751F;&#x5BF9;&#x8C61;"></a>&#x4F34;&#x751F;&#x5BF9;&#x8C61;</h3>
<p>&#x76F8;&#x6BD4;&#x6269;&#x5C55;&#x51FD;&#x6570;&#xFF0C;&#x66F4;&#x9AD8;&#x6548;&#x7684;&#x65B9;&#x6CD5;&#x662F;&#xFF0C;&#x4F60;&#x53EF;&#x4EE5;&#x5728;&#x4F60;&#x7684;&#x7C7B;&#x4E2D;&#x58F0;&#x660E;&#x4E00;&#x4E2A;<a href="http://kotlinlang.org/docs/reference/object-declarations.html#companion-objects" target="_blank" rel="external nofollow noopener noreferrer">&#x4F34;&#x968F;&#x5BF9;&#x8C61;</a>&#xFF0C;&#x8FD9;&#x6837;&#x4F60;&#x5C31;&#x53EF;&#x4EE5;&#x50CF; java/c# &#x90A3;&#x6837;&#x628A;&#x5B83;&#x5F53;&#x505A;&#x9759;&#x6001;&#x65B9;&#x6CD5;&#x8C03;&#x7528;&#xFF0C;&#x53EA;&#x9700;&#x8981;&#x5B83;&#x7684;&#x7C7B;&#x540D;&#x505A;&#x4E00;&#x4E2A;&#x8BC6;&#x522B;&#x5C31;&#x597D;&#x4E86;&#x3002;</p>
<p>&#x5927;&#x5BB6;&#x5728;&#x4F7F;&#x7528;Java&#x7684;&#x65F6;&#x4E0D;&#x77E5;&#x6709;&#x6CA1;&#x6709;&#x6CE8;&#x610F;&#x5230;&#xFF0C;Java&#x7C7B;&#x4E2D;&#x7684;&#x9759;&#x6001;&#x53D8;&#x91CF;&#x53CA;&#x65B9;&#x6CD5;&#x662F;&#x5728;&#x4EC0;&#x4E48;&#x65F6;&#x5019;&#x521D;&#x59CB;&#x5316;&#x7684;&#xFF1F;&#x662F;&#x5728;&#x9759;&#x6001;&#x65B9;&#x6CD5;&#x7B2C;&#x4E00;&#x6B21;&#x8C03;&#x7528;&#x65F6;&#x8FD8;&#x662F;&#x5728;&#x76F8;&#x5E94;&#x7684;Java&#x7C7B;&#x88AB;&#x52A0;&#x8F7D;&#x65F6;&#xFF1F;&#x7B54;&#x6848;&#x662F;&#x5728;Java&#x7C7B;&#x88AB;&#x52A0;&#x8F7D;&#x65F6;&#xFF08;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#x5982;&#x679C;&#x4F60;&#x8C03;&#x7528;&#x8FC7;Java&#x7C7B;&#x4E2D;&#x7684;&#x5B9E;&#x4F8B;&#x53D8;&#x91CF;&#x53CA;&#x65B9;&#x6CD5;&#x540E;&#xFF0C;&#x5373;&#x4F7F;&#x4F60;&#x6CA1;&#x6709;&#x4F7F;&#x7528;&#x9759;&#x6001;&#x53D8;&#x91CF;&#x53CA;&#x65B9;&#x6CD5;&#xFF0C;&#x9759;&#x6001;&#x53D8;&#x91CF;&#x5DF2;&#x7ECF;&#x521D;&#x59CB;&#x5316;&#x4E86;&#xFF09;&#x3002;&#x8FD9;&#x79CD;&#x73B0;&#x8C61;&#x7528;&#x4F34;&#x751F;&#x6765;&#x63CF;&#x8FF0;&#x662F;&#x4E0D;&#x662F;&#x5F88;&#x8D34;&#x5207;&#x3002;&#x4F34;&#x751F;&#x5BF9;&#x8C61;&#x6240;&#x5728;&#x7684;&#x7C7B;&#x88AB;&#x52A0;&#x8F7D;&#xFF0C;&#x4F34;&#x751F;&#x5BF9;&#x8C61;&#x88AB;&#x521D;&#x59CB;&#x5316;&#xFF0C;&#x4E0E;Java&#x9759;&#x6001;&#x6210;&#x5458;&#x4E00;&#x6837;&#x3002;</p>
<p>Kotlin&#x7684;class&#x5E76;&#x4E0D;&#x652F;&#x6301;static&#x53D8;&#x91CF;&#xFF0C;&#x6240;&#x4EE5;&#x9700;&#x8981;&#x4F7F;&#x7528;companion object&#x6765;&#x58F0;&#x660E;static&#x53D8;&#x91CF;&#xFF0C;&#x7F16;&#x8BD1;&#x5668;&#x4F1A;&#x81EA;&#x52A8;&#x751F;&#x6210;&#x4E00;&#x4E2A;companion&#x5185;&#x90E8;&#x7C7B;&#x3002;</p>
<pre><code>class Books(var name: String, val page: Int) {
    companion object ComBooks{
        val a : Int = 10
        fun doNote() {
            println(&quot;do note&quot;)
        }
    }
}

fun main(args: Array&lt;String&gt;) {
    Books.ComBooks.doNote()//&#x7B2C;&#x4E00;&#x79CD;&#x8C03;&#x7528;&#x65B9;&#x6CD5;

    println(&quot;Book.a = ${Books.ComBooks.a}&quot;)

    println(&quot;-------------&quot;)

    Books.doNote()//&#x7B2C;&#x4E8C;&#x79CD;&#x8C03;&#x7528;&#x65B9;&#x6CD5;

}

// Log
do note
Book.a = 10
-------------
do note
</code></pre>
<p>&#x5982;&#x4E0A;&#x4EE3;&#x7801;&#x53EF;&#x77E5;&#xFF0C;&#x4F34;&#x751F;&#x5BF9;&#x8C61;&#x53EF;&#x4EE5;&#x5B9E;&#x73B0;&#x9759;&#x6001;&#x8C03;&#x7528;&#xFF0C;&#x901A;&#x8FC7;&#x7C7B;&#x540D;.&#x5C5E;&#x6027;&#x540D;&#x6216;&#x8005;&#x7C7B;&#x540D;.&#x65B9;&#x6CD5;&#x540D;&#x8FDB;&#x884C;&#x8C03;&#x7528;&#x3002;</p>]]></content>
    
    <summary type="html">
    
      Kotlin中如何实现类似Java或C#中的静态方法？这里总结有三种方法可以实现类似Java的静态方法，分别是：对象声明、扩展函数、伴生对象。
    
    </summary>
    
      <category term="移动开发" scheme="http://ngudream.com/categories/%E7%A7%BB%E5%8A%A8%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="Android" scheme="http://ngudream.com/tags/Android/"/>
    
      <category term="Kotlin" scheme="http://ngudream.com/tags/Kotlin/"/>
    
  </entry>
  
  <entry>
    <title>Java 面试题之并发与性能</title>
    <link href="http://ngudream.com/2017/07/13/java-interview-high-concurrent/"/>
    <id>http://ngudream.com/2017/07/13/java-interview-high-concurrent/</id>
    <published>2017-07-13T13:57:52.000Z</published>
    <updated>2017-07-24T14:17:16.064Z</updated>
    
    <content type="html"><![CDATA[<h2 id="&#x5E76;&#x53D1;&#x4E0E;&#x6027;&#x80FD;&#x8C03;&#x4F18;"><a class="header-anchor" href="#&#x5E76;&#x53D1;&#x4E0E;&#x6027;&#x80FD;&#x8C03;&#x4F18;"></a>&#x5E76;&#x53D1;&#x4E0E;&#x6027;&#x80FD;&#x8C03;&#x4F18;</h2>
<p><strong>1. &#x6709;&#x4E2A;&#x6BCF;&#x79D2;&#x949F;5k&#x4E2A;&#x8BF7;&#x6C42;&#xFF0C;&#x67E5;&#x8BE2;&#x624B;&#x673A;&#x53F7;&#x6240;&#x5C5E;&#x5730;&#x7684;&#x7B14;&#x8BD5;&#x9898;&#xFF0C;&#x5982;&#x4F55;&#x8BBE;&#x8BA1;&#x7B97;&#x6CD5;?&#x8BF7;&#x6C42;&#x518D;&#x591A;&#xFF0C;&#x6BD4;&#x5982;5w&#xFF0C;&#x5982;&#x4F55;&#x8BBE;&#x8BA1;&#x6574;&#x4E2A;&#x7CFB;&#x7EDF;?</strong></p>
<p>&#x8BA4;&#x6E05;&#x7CFB;&#x7EDF;&#x7684;&#x9AD8;&#x5E76;&#x53D1;&#x7531;3&#x4E2A;&#x5C42;&#x9762;&#x5BFC;&#x81F4;&#xFF1A;</p>
<ol>
<li>&#x4F20;&#x8F93;&#x5C42;&#xFF1A;&#x5927;&#x91CF;&#x7528;&#x6237;&#x5BF9;&#x7CFB;&#x7EDF;&#x8BF7;&#x6C42;&#x540E;&#xFF0C;&#x5C06;&#x4F1A;&#x9020;&#x6210;&#x7F51;&#x7EDC;&#x5E26;&#x5BBD;&#x548C;Web&#x670D;&#x52A1;&#x5668;&#x7684;I/O&#x74F6;&#x9888;&#x3002;</li>
<li>&#x8BA1;&#x7B97;&#x5C42;&#xFF1A;&#x63A5;&#x6536;&#x5927;&#x91CF;&#x7528;&#x6237;&#x8BF7;&#x6C42;&#x8FDB;&#x884C;&#x8BA1;&#x7B97;&#xFF0C;&#x5C06;&#x4F1A;&#x9020;&#x6210;&#x4E1A;&#x52A1;&#x670D;&#x52A1;&#x5668;&#x548C;&#x4E1A;&#x52A1;&#x652F;&#x6491;&#x670D;&#x52A1;&#x5668;&#x7684;&#x74F6;&#x9888;&#x3002;</li>
<li>&#x5B58;&#x50A8;&#x5C42;&#xFF1A;&#x4F20;&#x8F93;&#x5C42;&#x548C;&#x8BA1;&#x7B97;&#x5C42;&#x5C06;&#x4F1A;&#x4EA7;&#x751F;&#x5927;&#x91CF;&#x7684;&#x6570;&#x636E;&#xFF0C;&#x6570;&#x636E;&#x91CF;&#x66B4;&#x589E;&#xFF0C;&#x5C06;&#x4F1A;&#x5BFC;&#x81F4;&#x6570;&#x636E;&#x5E93;&#x548C;&#x50A8;&#x5B58;&#x4E0A;&#x7684;&#x74F6;&#x9888;&#x3002;</li>
</ol>
<p>&#x9AD8;&#x5E76;&#x53D1;&#x7684;&#x89E3;&#x51B3;&#x65B9;&#x6CD5;&#x6709;&#x4E24;&#x79CD;&#xFF0C;&#x4E00;&#x79CD;&#x662F;&#x4F7F;&#x7528;&#x7F13;&#x5B58;&#x3001;&#x53E6;&#x4E00;&#x79CD;&#x662F;&#x4F7F;&#x7528;&#x751F;&#x6210;&#x9759;&#x6001;&#x9875;&#x9762;&#xFF1B;</p>
<ul>
<li>&#x7528;&#x5206;&#x5E03;&#x5F0F;&#x5E94;&#x7528;&#x8BBE;&#x8BA1;</li>
<li>&#x5206;&#x5E03;&#x5F0F;&#x7F13;&#x5B58;&#x6570;&#x636E;&#x5E93;</li>
<li>&#x4EE3;&#x7801;&#x4F18;&#x5316;
<ul>
<li>&#x4E0D;&#x8981;&#x9891;&#x7E41;&#x7684;new&#x5BF9;&#x8C61;&#xFF0C;&#x5BF9;&#x4E8E;&#x5728;&#x6574;&#x4E2A;&#x5E94;&#x7528;&#x4E2D;&#x53EA;&#x9700;&#x8981;&#x5B58;&#x5728;&#x4E00;&#x4E2A;&#x5B9E;&#x4F8B;&#x7684;&#x7C7B;&#x4F7F;&#x7528;&#x5355;&#x4F8B;&#x6A21;&#x5F0F;&#x3002;&#x5BF9;&#x4E8E;String&#x7684;&#x8FDE;&#x63A5;&#x64CD;&#x4F5C;&#xFF0C;&#x4F7F;&#x7528;StringBuffer&#x6216;&#x8005;StringBuilder&#x3002;&#x5BF9;&#x4E8E;utility&#x7C7B;&#x578B;&#x7684;&#x7C7B;&#x901A;&#x8FC7;&#x9759;&#x6001;&#x65B9;&#x6CD5;&#x6765;&#x8BBF;&#x95EE;&#x3002;</li>
<li>&#x907F;&#x514D;&#x4F7F;&#x7528;&#x9519;&#x8BEF;&#x7684;&#x65B9;&#x5F0F;&#xFF0C;&#x5982;Exception&#x53EF;&#x4EE5;&#x63A7;&#x5236;&#x65B9;&#x6CD5;&#x63A8;&#x51FA;&#xFF0C;&#x4F46;&#x662F;Exception&#x8981;&#x4FDD;&#x7559;stacktrace&#x6D88;&#x8017;&#x6027;&#x80FD;&#xFF0C;&#x9664;&#x975E;&#x5FC5;&#x8981;&#x4E0D;&#x8981;&#x4F7F;&#x7528; instanceof &#x505A;&#x6761;&#x4EF6;&#x5224;&#x65AD;&#xFF0C;&#x5C3D;&#x91CF;&#x4F7F;&#x7528;&#x6BD4;&#x7684;&#x6761;&#x4EF6;&#x5224;&#x65AD;&#x65B9;&#x5F0F;&#x3002;&#x4F7F;&#x7528;JAVA&#x4E2D;&#x6548;&#x7387;&#x9AD8;&#x7684;&#x7C7B;&#xFF0C;&#x6BD4;&#x5982;ArrayList&#x6BD4;Vector&#x6027;&#x80FD;&#x597D;&#x3002;</li>
</ul>
</li>
</ul>
<p>&#x4F7F;&#x7528;&#x9759;&#x6001;&#x9875;&#x9762;</p>
<p>&#x8865;&#x5145;&#xFF1A;&#x9875;&#x9762;&#x9759;&#x6001;&#x5316;</p>
<p><strong>2. &#x9AD8;&#x5E76;&#x53D1;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x6211;&#x4EEC;&#x7CFB;&#x7EDF;&#x662F;&#x5982;&#x4F55;&#x652F;&#x6491;&#x5927;&#x91CF;&#x7684;&#x8BF7;&#x6C42;&#x7684;</strong></p>
<p><strong>&#xFF08;1&#xFF09;&#x5206;&#x6790;&#x4E00;</strong></p>
<p>&#x4F18;&#x5316;&#x7A0B;&#x5E8F;&#xFF0C;&#x4F18;&#x5316;&#x670D;&#x52A1;&#x914D;&#x7F6E;&#xFF0C;&#x4F18;&#x5316;&#x7CFB;&#x7EDF;&#x914D;&#x7F6E;</p>
<p>&#x51E0;&#x70B9;&#x9700;&#x8981;&#x6CE8;&#x610F;&#xFF1A;</p>
<ul>
<li>&#x5C3D;&#x91CF;&#x4F7F;&#x7528;&#x7F13;&#x5B58;&#xFF0C;&#x5305;&#x62EC;&#x7528;&#x6237;&#x7F13;&#x5B58;&#xFF0C;&#x4FE1;&#x606F;&#x7F13;&#x5B58;&#x7B49;&#xFF0C;&#x591A;&#x82B1;&#x70B9;&#x5185;&#x5B58;&#x6765;&#x505A;&#x7F13;&#x5B58;&#xFF0C;&#x53EF;&#x4EE5;&#x5927;&#x91CF;&#x51CF;&#x5C11;&#x4E0E;&#x6570;&#x636E;&#x5E93;&#x7684;&#x4EA4;&#x4E92;&#xFF0C;&#x63D0;&#x9AD8;&#x6027;&#x80FD;&#x3002;</li>
<li>&#x7528;jprofiler&#x7B49;&#x5DE5;&#x5177;&#x627E;&#x51FA;&#x6027;&#x80FD;&#x74F6;&#x9888;&#xFF0C;&#x51CF;&#x5C11;&#x989D;&#x5916;&#x7684;&#x5F00;&#x9500;&#x3002;<br>
&#x4F18;&#x5316;&#x6570;&#x636E;&#x5E93;&#x67E5;&#x8BE2;&#x8BED;&#x53E5;&#xFF0C;&#x51CF;&#x5C11;&#x76F4;&#x63A5;&#x4F7F;&#x7528;hibernate&#x7B49;&#x5DE5;&#x5177;&#x7684;&#x76F4;&#x63A5;&#x751F;&#x6210;&#x8BED;&#x53E5;&#xFF08;&#x4EC5;&#x8017;&#x65F6;&#x8F83;&#x957F;&#x7684;&#x67E5;&#x8BE2;&#x505A;&#x4F18;&#x5316;&#xFF09;&#x3002;</li>
<li>&#x4F18;&#x5316;&#x6570;&#x636E;&#x5E93;&#x7ED3;&#x6784;&#xFF0C;&#x591A;&#x505A;&#x7D22;&#x5F15;&#xFF0C;&#x63D0;&#x9AD8;&#x67E5;&#x8BE2;&#x6548;&#x7387;&#x3002;</li>
<li>&#x7EDF;&#x8BA1;&#x7684;&#x529F;&#x80FD;&#x5C3D;&#x91CF;&#x505A;&#x7F13;&#x5B58;&#xFF0C;&#x6216;&#x6309;&#x6BCF;&#x5929;&#x4E00;&#x7EDF;&#x8BA1;&#x6216;&#x5B9A;&#x65F6;&#x7EDF;&#x8BA1;&#x76F8;&#x5173;&#x62A5;&#x8868;&#xFF0C;&#x907F;&#x514D;&#x9700;&#x8981;&#x65F6;&#x8FDB;&#x884C;&#x7EDF;&#x8BA1;&#x7684;&#x529F;&#x80FD;&#x3002;</li>
<li>&#x80FD;&#x4F7F;&#x7528;&#x9759;&#x6001;&#x9875;&#x9762;&#x7684;&#x5730;&#x65B9;&#x5C3D;&#x91CF;&#x4F7F;&#x7528;&#xFF0C;&#x51CF;&#x5C11;&#x5BB9;&#x5668;&#x7684;&#x89E3;&#x6790;&#xFF08;&#x5C3D;&#x91CF;&#x5C06;&#x52A8;&#x6001;&#x5185;&#x5BB9;&#x751F;&#x6210;&#x9759;&#x6001;html&#x6765;&#x663E;&#x793A;&#xFF09;&#x3002;</li>
<li>&#x89E3;&#x51B3;&#x4EE5;&#x4E0A;&#x95EE;&#x9898;&#x540E;&#xFF0C;&#x4F7F;&#x7528;&#x670D;&#x52A1;&#x5668;&#x96C6;&#x7FA4;&#x6765;&#x89E3;&#x51B3;&#x5355;&#x53F0;&#x7684;&#x74F6;&#x9888;&#x95EE;&#x9898;&#x3002;</li>
</ul>
<p>&#x57FA;&#x672C;&#x4E0A;&#x4EE5;&#x4E0A;&#x8FF0;&#x95EE;&#x9898;&#x89E3;&#x51B3;&#x540E;&#xFF0C;&#x8FBE;&#x5230;&#x7CFB;&#x7EDF;&#x6700;&#x4F18;&#x3002;</p>
<p><strong>&#xFF08;2&#xFF09;&#x5206;&#x6790;&#x4E8C;</strong></p>
<p>&#x5728;&#x9762;&#x5BF9;&#x5927;&#x91CF;&#x7528;&#x6237;&#x8BBF;&#x95EE;&#x3001;&#x9AD8;&#x5E76;&#x53D1;&#x8BF7;&#x6C42;&#x65B9;&#x9762;&#xFF0C;&#x57FA;&#x672C;&#x7684;&#x89E3;&#x51B3;&#x65B9;&#x6848;&#x96C6;&#x4E2D;&#x5728;&#x8FD9;&#x6837;&#x51E0;&#x4E2A;&#x73AF;&#x8282;&#xFF1A;<br>
&#x4F7F;&#x7528;<strong>&#x9AD8;&#x6027;&#x80FD;&#x7684;&#x670D;&#x52A1;&#x5668;&#x3001;&#x9AD8;&#x6027;&#x80FD;&#x7684;&#x6570;&#x636E;&#x5E93;&#x3001;&#x9AD8;&#x6548;&#x7387;&#x7684;&#x7F16;&#x7A0B;&#x8BED;&#x8A00;&#x3001;&#x8FD8;&#x6709;&#x9AD8;&#x6027;&#x80FD;&#x7684;Web&#x5BB9;&#x5668;</strong>&#x3002;&#x4F46;&#x662F;&#x9664;&#x4E86;&#x8FD9;&#x51E0;&#x4E2A;&#x65B9;&#x9762;&#xFF0C;&#x8FD8;&#x6CA1;&#x6CD5;&#x6839;&#x672C;&#x89E3;&#x51B3;&#x5927;&#x578B;&#x7F51;&#x7AD9;&#x9762;&#x4E34;&#x7684;&#x9AD8;&#x8D1F;&#x8F7D;&#x548C;&#x9AD8;&#x5E76;&#x53D1;&#x95EE;&#x9898;&#x3002;</p>
<p>&#x4E0A;&#x9762;&#x63D0;&#x4F9B;&#x7684;&#x51E0;&#x4E2A;&#x89E3;&#x51B3;&#x601D;&#x8DEF;&#x5728;&#x4E00;&#x5B9A;&#x7A0B;&#x5EA6;&#x4E0A;&#x4E5F;&#x610F;&#x5473;&#x7740;&#x66F4;&#x5927;&#x7684;&#x6295;&#x5165;&#xFF0C;&#x5E76;&#x4E14;&#x8FD9;&#x6837;&#x7684;&#x89E3;&#x51B3;&#x601D;&#x8DEF;&#x5177;&#x5907;&#x74F6;&#x9888;&#xFF0C;&#x6CA1;&#x6709;&#x5F88;&#x597D;&#x7684;&#x6269;&#x5C55;&#x6027;&#xFF0C;&#x4E0B;&#x9762;&#x6211;&#x4ECE;&#x4F4E;&#x6210;&#x672C;&#x3001;&#x9AD8;&#x6027;&#x80FD;&#x548C;&#x9AD8;&#x6269;&#x5F20;&#x6027;&#x7684;&#x89D2;&#x5EA6;&#x6765;&#x8BF4;&#x8BF4;&#x6211;&#x7684;&#x4E00;&#x4E9B;&#x7ECF;&#x9A8C;&#x3002;</p>
<p>1&#xFF09;&#x3001;HTML&#x9759;&#x6001;&#x5316;</p>
<p>&#x5176;&#x5B9E;&#x5927;&#x5BB6;&#x90FD;&#x77E5;&#x9053;&#xFF0C;&#x6548;&#x7387;&#x6700;&#x9AD8;&#x3001;&#x6D88;&#x8017;&#x6700;&#x5C0F;&#x7684;&#x5C31;&#x662F;&#x7EAF;&#x9759;&#x6001;&#x5316;&#x7684;html&#x9875;&#x9762;&#xFF0C;&#x6240;&#x4EE5;&#x6211;&#x4EEC;&#x5C3D;&#x53EF;&#x80FD;&#x4F7F;&#x6211;&#x4EEC;&#x7684;&#x7F51;&#x7AD9;&#x4E0A;&#x7684;&#x9875;&#x9762;&#x91C7;&#x7528;&#x9759;&#x6001;&#x9875;&#x9762;&#x6765;&#x5B9E;&#x73B0;&#xFF0C;&#x8FD9;&#x4E2A;&#x6700;&#x7B80;&#x5355;&#x7684;&#x65B9;&#x6CD5;&#x5176;&#x5B9E;&#x4E5F;&#x662F;&#x6700;&#x6709;&#x6548;&#x7684;&#x65B9;&#x6CD5;&#x3002;&#x4F46;&#x662F;&#x5BF9;&#x4E8E;&#x5927;&#x91CF;&#x5185;&#x5BB9;&#x5E76;&#x4E14;&#x9891;&#x7E41;&#x66F4;&#x65B0;&#x7684;&#x7F51;&#x7AD9;&#xFF0C;&#x6211;&#x4EEC;&#x65E0;&#x6CD5;&#x5168;&#x90E8;&#x624B;&#x52A8;&#x53BB;&#x6328;&#x4E2A;&#x5B9E;&#x73B0;&#xFF0C;&#x4E8E;&#x662F;&#x51FA;&#x73B0;&#x4E86;&#x6211;&#x4EEC;&#x5E38;&#x89C1;&#x7684;&#x4FE1;&#x606F;&#x53D1;&#x5E03;&#x7CFB;&#x7EDF;CMS&#xFF0C;&#x50CF;&#x6211;&#x4EEC;&#x5E38;&#x8BBF;&#x95EE;&#x7684;&#x5404;&#x4E2A;&#x95E8;&#x6237;&#x7AD9;&#x70B9;&#x7684;&#x65B0;&#x95FB;&#x9891;&#x9053;&#xFF0C;&#x751A;&#x81F3;&#x4ED6;&#x4EEC;&#x7684;&#x5176;&#x4ED6;&#x9891;&#x9053;&#xFF0C;&#x90FD;&#x662F;&#x901A;&#x8FC7;&#x4FE1;&#x606F;&#x53D1;&#x5E03;&#x7CFB;&#x7EDF;&#x6765;&#x7BA1;&#x7406;&#x548C;&#x5B9E;&#x73B0;&#x7684;&#xFF0C;&#x4FE1;&#x606F;&#x53D1;&#x5E03;&#x7CFB;&#x7EDF;&#x53EF;&#x4EE5;&#x5B9E;&#x73B0;&#x6700;&#x7B80;&#x5355;&#x7684;&#x4FE1;&#x606F;&#x5F55;&#x5165;&#x81EA;&#x52A8;&#x751F;&#x6210;&#x9759;&#x6001;&#x9875;&#x9762;&#xFF0C;&#x8FD8;&#x80FD;&#x5177;&#x5907;&#x9891;&#x9053;&#x7BA1;&#x7406;&#x3001;&#x6743;&#x9650;&#x7BA1;&#x7406;&#x3001;&#x81EA;&#x52A8;&#x6293;&#x53D6;&#x7B49;&#x529F;&#x80FD;&#xFF0C;&#x5BF9;&#x4E8E;&#x4E00;&#x4E2A;&#x5927;&#x578B;&#x7F51;&#x7AD9;&#x6765;&#x8BF4;&#xFF0C;&#x62E5;&#x6709;&#x4E00;&#x5957;&#x9AD8;&#x6548;&#x3001;&#x53EF;&#x7BA1;&#x7406;&#x7684;CMS&#x662F;&#x5FC5;&#x4E0D;&#x53EF;&#x5C11;&#x7684;&#x3002;</p>
<p>2&#xFF09;&#x3001;&#x56FE;&#x7247;&#x670D;&#x52A1;&#x5668;&#x5206;&#x79BB;</p>
<p>&#x5927;&#x5BB6;&#x77E5;&#x9053;&#xFF0C;&#x5BF9;&#x4E8E;Web&#x670D;&#x52A1;&#x5668;&#x6765;&#x8BF4;&#xFF0C;&#x4E0D;&#x7BA1;&#x662F;Apache&#x3001;IIS&#x8FD8;&#x662F;&#x5176;&#x4ED6;&#x5BB9;&#x5668;&#xFF0C;&#x56FE;&#x7247;&#x662F;&#x6700;&#x6D88;&#x8017;&#x8D44;&#x6E90;&#x7684;&#xFF0C;&#x4E8E;&#x662F;&#x6211;&#x4EEC;&#x6709;&#x5FC5;&#x8981;&#x5C06;&#x56FE;&#x7247;&#x4E0E;&#x9875;&#x9762;&#x8FDB;&#x884C;&#x5206;&#x79BB;&#xFF0C;&#x8FD9;&#x662F;&#x57FA;&#x672C;&#x4E0A;&#x5927;&#x578B;&#x7F51;&#x7AD9;&#x90FD;&#x4F1A;&#x91C7;&#x7528;&#x7684;&#x7B56;&#x7565;&#xFF0C;&#x4ED6;&#x4EEC;&#x90FD;&#x6709;&#x72EC;&#x7ACB;&#x7684;&#x56FE;&#x7247;&#x670D;&#x52A1;&#x5668;&#xFF0C;&#x751A;&#x81F3;&#x5F88;&#x591A;&#x53F0;&#x56FE;&#x7247;&#x670D;&#x52A1;&#x5668;&#x3002;&#x8FD9;&#x6837;&#x7684;&#x67B6;&#x6784;&#x53EF;&#x4EE5;&#x964D;&#x4F4E;&#x63D0;&#x4F9B;&#x9875;&#x9762;&#x8BBF;&#x95EE;&#x8BF7;&#x6C42;&#x7684;&#x670D;&#x52A1;&#x5668;&#x7CFB;&#x7EDF;&#x538B;&#x529B;&#xFF0C;&#x5E76;&#x4E14;&#x53EF;&#x4EE5;&#x4FDD;&#x8BC1;&#x7CFB;&#x7EDF;&#x4E0D;&#x4F1A;&#x56E0;&#x4E3A;&#x56FE;&#x7247;&#x95EE;&#x9898;&#x800C;&#x5D29;&#x6E83;&#xFF0C;&#x5728;&#x5E94;&#x7528;&#x670D;&#x52A1;&#x5668;&#x548C;&#x56FE;&#x7247;&#x670D;&#x52A1;&#x5668;&#x4E0A;&#xFF0C;&#x53EF;&#x4EE5;&#x8FDB;&#x884C;&#x4E0D;&#x540C;&#x7684;&#x914D;&#x7F6E;&#x4F18;&#x5316;&#xFF0C;&#x6BD4;&#x5982;apache&#x5728;&#x914D;&#x7F6E;ContentType&#x7684;&#x65F6;&#x5019;&#x53EF;&#x4EE5;&#x5C3D;&#x91CF;&#x5C11;&#x652F;&#x6301;&#xFF0C;&#x5C3D;&#x53EF;&#x80FD;&#x5C11;&#x7684;LoadModule&#xFF0C;&#x4FDD;&#x8BC1;&#x66F4;&#x9AD8;&#x7684;&#x7CFB;&#x7EDF;&#x6D88;&#x8017;&#x548C;&#x6267;&#x884C;&#x6548;&#x7387;&#x3002; &#x8FD9;&#x4E00;&#x5B9E;&#x73B0;&#x8D77;&#x6765;&#x662F;&#x6BD4;&#x8F83;&#x5BB9;&#x6613;&#x7684;&#x4E00;&#x73B0;&#xFF0C;&#x5982;&#x679C;&#x670D;&#x52A1;&#x5668;&#x96C6;&#x7FA4;&#x64CD;&#x4F5C;&#x8D77;&#x6765;&#x66F4;&#x65B9;&#x4FBF;&#xFF0C;&#x5982;&#x679C;&#x662F;&#x72EC;&#x7ACB;&#x7684;&#x670D;&#x52A1;&#x5668;&#xFF0C;&#x65B0;&#x624B;&#x53EF;&#x80FD;&#x51FA;&#x73B0;&#x4E0A;&#x4F20;&#x56FE;&#x7247;&#x53EA;&#x80FD;&#x5728;&#x670D;&#x52A1;&#x5668;&#x672C;&#x5730;&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x53EF;&#x4EE5;&#x5728;&#x4EE4;&#x4E00;&#x53F0;&#x670D;&#x52A1;&#x5668;&#x8BBE;&#x7F6E;&#x7684;IIS&#x91C7;&#x7528;&#x7F51;&#x7EDC;&#x8DEF;&#x5F84;&#x6765;&#x5B9E;&#x73B0;&#x56FE;&#x7247;&#x670D;&#x52A1;&#x5668;&#xFF0C;&#x5373;&#x4E0D;&#x7528;&#x6539;&#x53D8;&#x7A0B;&#x5E8F;&#xFF0C;&#x53C8;&#x80FD;&#x63D0;&#x9AD8;&#x6027;&#x80FD;&#xFF0C;&#x4F46;&#x5BF9;&#x4E8E;&#x670D;&#x52A1;&#x5668;&#x672C;&#x8EAB;&#x7684;IO&#x5904;&#x7406;&#x6027;&#x80FD;&#x662F;&#x6CA1;&#x6709;&#x4EFB;&#x4F55;&#x7684;&#x6539;&#x53D8;&#x3002;</p>
<p>3&#xFF09;&#x3001;&#x6570;&#x636E;&#x5E93;&#x96C6;&#x7FA4;&#x548C;&#x5E93;&#x8868;&#x6563;&#x5217;</p>
<p>&#x5927;&#x578B;&#x7F51;&#x7AD9;&#x90FD;&#x6709;&#x590D;&#x6742;&#x7684;&#x5E94;&#x7528;&#xFF0C;&#x8FD9;&#x4E9B;&#x5E94;&#x7528;&#x5FC5;&#x987B;&#x4F7F;&#x7528;&#x6570;&#x636E;&#x5E93;&#xFF0C;&#x90A3;&#x4E48;&#x5728;&#x9762;&#x5BF9;&#x5927;&#x91CF;&#x8BBF;&#x95EE;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x6570;&#x636E;&#x5E93;&#x7684;&#x74F6;&#x9888;&#x5F88;&#x5FEB;&#x5C31;&#x80FD;&#x663E;&#x73B0;&#x51FA;&#x6765;&#xFF0C;&#x8FD9;&#x65F6;&#x4E00;&#x53F0;&#x6570;&#x636E;&#x5E93;&#x5C06;&#x5F88;&#x5FEB;&#x65E0;&#x6CD5;&#x6EE1;&#x8DB3;&#x5E94;&#x7528;&#xFF0C;&#x4E8E;&#x662F;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x4F7F;&#x7528;&#x6570;&#x636E;&#x5E93;&#x96C6;&#x7FA4;&#x6216;&#x8005;&#x5E93;&#x8868;&#x6563;&#x5217;&#x3002;</p>
<p>&#x5728;&#x6570;&#x636E;&#x5E93;&#x96C6;&#x7FA4;&#x65B9;&#x9762;&#xFF0C;&#x5F88;&#x591A;&#x6570;&#x636E;&#x5E93;&#x90FD;&#x6709;&#x81EA;&#x5DF1;&#x7684;&#x89E3;&#x51B3;&#x65B9;&#x6848;&#xFF0C;Oracle&#x3001;Sybase&#x7B49;&#x90FD;&#x6709;&#x5F88;&#x597D;&#x7684;&#x65B9;&#x6848;&#xFF0C;&#x5E38;&#x7528;&#x7684;MySQL&#x63D0;&#x4F9B;&#x7684;Master/Slave&#x4E5F;&#x662F;&#x7C7B;&#x4F3C;&#x7684;&#x65B9;&#x6848;&#xFF0C;&#x60A8;&#x4F7F;&#x7528;&#x4E86;&#x4EC0;&#x4E48;&#x6837;&#x7684;DB&#xFF0C;&#x5C31;&#x53C2;&#x8003;&#x76F8;&#x5E94;&#x7684;&#x89E3;&#x51B3;&#x65B9;&#x6848;&#x6765;&#x5B9E;&#x65BD;&#x5373;&#x53EF;&#x3002;</p>
<p>&#x4E0A;&#x9762;&#x63D0;&#x5230;&#x7684;&#x6570;&#x636E;&#x5E93;&#x96C6;&#x7FA4;&#x7531;&#x4E8E;&#x5728;&#x67B6;&#x6784;&#x3001;&#x6210;&#x672C;&#x3001;&#x6269;&#x5F20;&#x6027;&#x65B9;&#x9762;&#x90FD;&#x4F1A;&#x53D7;&#x5230;&#x6240;&#x91C7;&#x7528;DB&#x7C7B;&#x578B;&#x7684;&#x9650;&#x5236;&#xFF0C;&#x4E8E;&#x662F;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x4ECE;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x7684;&#x89D2;&#x5EA6;&#x6765;&#x8003;&#x8651;&#x6539;&#x5584;&#x7CFB;&#x7EDF;&#x67B6;&#x6784;&#xFF0C;&#x5E93;&#x8868;&#x6563;&#x5217;&#x662F;&#x5E38;&#x7528;&#x5E76;&#x4E14;&#x6700;&#x6709;&#x6548;&#x7684;&#x89E3;&#x51B3;&#x65B9;&#x6848;&#x3002;&#x6211;&#x4EEC;&#x5728;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x4E2D;&#x5B89;&#x88C5;&#x4E1A;&#x52A1;&#x548C;&#x5E94;&#x7528;&#x6216;&#x8005;&#x529F;&#x80FD;&#x6A21;&#x5757;&#x5C06;&#x6570;&#x636E;&#x5E93;&#x8FDB;&#x884C;&#x5206;&#x79BB;&#xFF0C;&#x4E0D;&#x540C;&#x7684;&#x6A21;&#x5757;&#x5BF9;&#x5E94;&#x4E0D;&#x540C;&#x7684;&#x6570;&#x636E;&#x5E93;&#x6216;&#x8005;&#x8868;&#xFF0C;&#x518D;&#x6309;&#x7167;&#x4E00;&#x5B9A;&#x7684;&#x7B56;&#x7565;&#x5BF9;&#x67D0;&#x4E2A;&#x9875;&#x9762;&#x6216;&#x8005;&#x529F;&#x80FD;&#x8FDB;&#x884C;&#x66F4;&#x5C0F;&#x7684;&#x6570;&#x636E;&#x5E93;&#x6563;&#x5217;&#xFF0C;&#x6BD4;&#x5982;&#x7528;&#x6237;&#x8868;&#xFF0C;&#x6309;&#x7167;&#x7528;&#x6237;ID&#x8FDB;&#x884C;&#x8868;&#x6563;&#x5217;&#xFF0C;&#x8FD9;&#x6837;&#x5C31;&#x80FD;&#x591F;&#x4F4E;&#x6210;&#x672C;&#x7684;&#x63D0;&#x5347;&#x7CFB;&#x7EDF;&#x7684;&#x6027;&#x80FD;&#x5E76;&#x4E14;&#x6709;&#x5F88;&#x597D;&#x7684;&#x6269;&#x5C55;&#x6027;&#x3002;sohu&#x7684;&#x8BBA;&#x575B;&#x5C31;&#x662F;&#x91C7;&#x7528;&#x4E86;&#x8FD9;&#x6837;&#x7684;&#x67B6;&#x6784;&#xFF0C;&#x5C06;&#x8BBA;&#x575B;&#x7684;&#x7528;&#x6237;&#x3001;&#x8BBE;&#x7F6E;&#x3001;&#x5E16;&#x5B50;&#x7B49;&#x4FE1;&#x606F;&#x8FDB;&#x884C;&#x6570;&#x636E;&#x5E93;&#x5206;&#x79BB;&#xFF0C;&#x7136;&#x540E;&#x5BF9;&#x5E16;&#x5B50;&#x3001;&#x7528;&#x6237;&#x6309;&#x7167;&#x677F;&#x5757;&#x548C;ID&#x8FDB;&#x884C;&#x6563;&#x5217;&#x6570;&#x636E;&#x5E93;&#x548C;&#x8868;&#xFF0C;&#x6700;&#x7EC8;&#x53EF;&#x4EE5;&#x5728;&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#x4E2D;&#x8FDB;&#x884C;&#x7B80;&#x5355;&#x7684;&#x914D;&#x7F6E;&#x4FBF;&#x80FD;&#x8BA9;&#x7CFB;&#x7EDF;&#x968F;&#x65F6;&#x589E;&#x52A0;&#x4E00;&#x53F0;&#x4F4E;&#x6210;&#x672C;&#x7684;&#x6570;&#x636E;&#x5E93;&#x8FDB;&#x6765;&#x8865;&#x5145;&#x7CFB;&#x7EDF;&#x6027;&#x80FD;&#x3002;</p>
<p>4&#xFF09;&#x3001;&#x7F13;&#x5B58;</p>
<p>&#x7F13;&#x5B58;&#x4E00;&#x8BCD;&#x641E;&#x6280;&#x672F;&#x7684;&#x90FD;&#x63A5;&#x89E6;&#x8FC7;&#xFF0C;&#x5F88;&#x591A;&#x5730;&#x65B9;&#x7528;&#x5230;&#x7F13;&#x5B58;&#x3002;&#x7F51;&#x7AD9;&#x67B6;&#x6784;&#x548C;&#x7F51;&#x7AD9;&#x5F00;&#x53D1;&#x4E2D;&#x7684;&#x7F13;&#x5B58;&#x4E5F;&#x662F;&#x975E;&#x5E38;&#x91CD;&#x8981;&#x3002;&#x8FD9;&#x91CC;&#x5148;&#x8BB2;&#x8FF0;&#x6700;&#x57FA;&#x672C;&#x7684;&#x4E24;&#x79CD;&#x7F13;&#x5B58;&#x3002;&#x9AD8;&#x7EA7;&#x548C;&#x5206;&#x5E03;&#x5F0F;&#x7684;&#x7F13;&#x5B58;&#x5728;&#x540E;&#x9762;&#x8BB2;&#x8FF0;&#x3002;<br>
&#x67B6;&#x6784;&#x65B9;&#x9762;&#x7684;&#x7F13;&#x5B58;&#xFF0C;&#x5BF9;Apache&#x6BD4;&#x8F83;&#x719F;&#x6089;&#x7684;&#x4EBA;&#x90FD;&#x80FD;&#x77E5;&#x9053;Apache&#x63D0;&#x4F9B;&#x4E86;&#x81EA;&#x5DF1;&#x7684;&#x7F13;&#x5B58;&#x6A21;&#x5757;&#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x5916;&#x52A0;&#x7684;Squid&#x6A21;&#x5757;&#x8FDB;&#x884C;&#x7F13;&#x5B58;&#xFF0C;&#x8FD9;&#x4E24;&#x79CD;&#x65B9;&#x5F0F;&#x5747;&#x53EF;&#x4EE5;&#x6709;&#x6548;&#x7684;&#x63D0;&#x9AD8;Apache&#x7684;&#x8BBF;&#x95EE;&#x54CD;&#x5E94;&#x80FD;&#x529B;&#x3002;<br>
&#x7F51;&#x7AD9;&#x7A0B;&#x5E8F;&#x5F00;&#x53D1;&#x65B9;&#x9762;&#x7684;&#x7F13;&#x5B58;&#xFF0C;Linux&#x4E0A;&#x63D0;&#x4F9B;&#x7684;Memory Cache&#x662F;&#x5E38;&#x7528;&#x7684;&#x7F13;&#x5B58;&#x63A5;&#x53E3;&#xFF0C;&#x53EF;&#x4EE5;&#x5728;web&#x5F00;&#x53D1;&#x4E2D;&#x4F7F;&#x7528;&#xFF0C;&#x6BD4;&#x5982;&#x7528;Java&#x5F00;&#x53D1;&#x7684;&#x65F6;&#x5019;&#x5C31;&#x53EF;&#x4EE5;&#x8C03;&#x7528;MemoryCache&#x5BF9;&#x4E00;&#x4E9B;&#x6570;&#x636E;&#x8FDB;&#x884C;&#x7F13;&#x5B58;&#x548C;&#x901A;&#x8BAF;&#x5171;&#x4EAB;&#xFF0C;&#x4E00;&#x4E9B;&#x5927;&#x578B;&#x793E;&#x533A;&#x4F7F;&#x7528;&#x4E86;&#x8FD9;&#x6837;&#x7684;&#x67B6;&#x6784;&#x3002;<br>
&#x5728;&#x4F7F;&#x7528;web&#x8BED;&#x8A00;&#x5F00;&#x53D1;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5404;&#x79CD;&#x8BED;&#x8A00;&#x57FA;&#x672C;&#x90FD;&#x6709;&#x81EA;&#x5DF1;&#x7684;&#x7F13;&#x5B58;&#x6A21;&#x5757;&#x548C;&#x65B9;&#x6CD5;&#xFF0C;PHP&#x6709;Pear&#x7684;Cache&#x6A21;&#x5757;&#xFF0C;Java&#x5C31;&#x66F4;&#x591A;&#x4E86;&#xFF0C;.net&#x4E0D;&#x662F;&#x5F88;&#x719F;&#x6089;&#xFF0C;&#x76F8;&#x4FE1;&#x4E5F;&#x80AF;&#x5B9A;&#x6709;&#x3002;</p>
<p>5&#xFF09;&#x3001;&#x955C;&#x50CF;</p>
<p>&#x955C;&#x50CF;&#x662F;&#x5927;&#x578B;&#x7F51;&#x7AD9;&#x5E38;&#x91C7;&#x7528;&#x7684;&#x63D0;&#x9AD8;&#x6027;&#x80FD;&#x548C;&#x6570;&#x636E;&#x5B89;&#x5168;&#x6027;&#x7684;&#x65B9;&#x5F0F;&#xFF0C;&#x955C;&#x50CF;&#x7684;&#x6280;&#x672F;&#x53EF;&#x4EE5;&#x89E3;&#x51B3;&#x4E0D;&#x540C;&#x7F51;&#x7EDC;&#x63A5;&#x5165;&#x5546;&#x548C;&#x5730;&#x57DF;&#x5E26;&#x6765;&#x7684;&#x7528;&#x6237;&#x8BBF;&#x95EE;&#x901F;&#x5EA6;&#x5DEE;&#x5F02;&#xFF0C;&#x6BD4;&#x5982;ChinaNet&#x548C;EduNet&#x4E4B;&#x95F4;&#x7684;&#x5DEE;&#x5F02;&#x5C31;&#x4FC3;&#x4F7F;&#x4E86;&#x5F88;&#x591A;&#x7F51;&#x7AD9;&#x5728;&#x6559;&#x80B2;&#x7F51;&#x5185;&#x642D;&#x5EFA;&#x955C;&#x50CF;&#x7AD9;&#x70B9;&#xFF0C;&#x6570;&#x636E;&#x8FDB;&#x884C;&#x5B9A;&#x65F6;&#x66F4;&#x65B0;&#x6216;&#x8005;&#x5B9E;&#x65F6;&#x66F4;&#x65B0;&#x3002;&#x5728;&#x955C;&#x50CF;&#x7684;&#x7EC6;&#x8282;&#x6280;&#x672F;&#x65B9;&#x9762;&#xFF0C;&#x8FD9;&#x91CC;&#x4E0D;&#x9610;&#x8FF0;&#x592A;&#x6DF1;&#xFF0C;&#x6709;&#x5F88;&#x591A;&#x4E13;&#x4E1A;&#x7684;&#x73B0;&#x6210;&#x7684;&#x89E3;&#x51B3;&#x67B6;&#x6784;&#x548C;&#x4EA7;&#x54C1;&#x53EF;&#x9009;&#x3002;&#x4E5F;&#x6709;&#x5EC9;&#x4EF7;&#x7684;&#x901A;&#x8FC7;&#x8F6F;&#x4EF6;&#x5B9E;&#x73B0;&#x7684;&#x601D;&#x8DEF;&#xFF0C;&#x6BD4;&#x5982;Linux&#x4E0A;&#x7684;rsync&#x7B49;&#x5DE5;&#x5177;&#x3002;</p>
<p>6&#xFF09;&#x3001;&#x8D1F;&#x8F7D;&#x5747;&#x8861;<br>
&#x8D1F;&#x8F7D;&#x5747;&#x8861;&#x5C06;&#x662F;&#x5927;&#x578B;&#x7F51;&#x7AD9;&#x89E3;&#x51B3;&#x9AD8;&#x8D1F;&#x8377;&#x8BBF;&#x95EE;&#x548C;&#x5927;&#x91CF;&#x5E76;&#x53D1;&#x8BF7;&#x6C42;&#x91C7;&#x7528;&#x7684;&#x7EC8;&#x6781;&#x89E3;&#x51B3;&#x529E;&#x6CD5;&#x3002;</p>
<p><strong>&#x786C;&#x4EF6;&#x56DB;&#x5C42;&#x4EA4;&#x6362;</strong></p>
<p>&#x7B2C;&#x56DB;&#x5C42;&#x4EA4;&#x6362;&#x4F7F;&#x7528;&#x7B2C;&#x4E09;&#x5C42;&#x548C;&#x7B2C;&#x56DB;&#x5C42;&#x4FE1;&#x606F;&#x5305;&#x7684;&#x62A5;&#x5934;&#x4FE1;&#x606F;&#xFF0C;&#x6839;&#x636E;&#x5E94;&#x7528;&#x533A;&#x95F4;&#x8BC6;&#x522B;&#x4E1A;&#x52A1;&#x6D41;&#xFF0C;&#x5C06;&#x6574;&#x4E2A;&#x533A;&#x95F4;&#x6BB5;&#x7684;&#x4E1A;&#x52A1;&#x6D41;&#x5206;&#x914D;&#x5230;&#x5408;&#x9002;&#x7684;&#x5E94;&#x7528;&#x670D;&#x52A1;&#x5668;&#x8FDB;&#x884C;&#x5904;&#x7406;&#x3002;&#x3000;&#x7B2C;&#x56DB;&#x5C42;&#x4EA4;&#x6362;&#x529F;&#x80FD;&#x5C31;&#x50CF;&#x662F;&#x865A;IP&#xFF0C;&#x6307;&#x5411;&#x7269;&#x7406;&#x670D;&#x52A1;&#x5668;&#x3002;&#x5B83;&#x4F20;&#x8F93;&#x7684;&#x4E1A;&#x52A1;&#x670D;&#x4ECE;&#x7684;&#x534F;&#x8BAE;&#x591A;&#x79CD;&#x591A;&#x6837;&#xFF0C;&#x6709;HTTP&#x3001;FTP&#x3001;NFS&#x3001;Telnet&#x6216;&#x5176;&#x4ED6;&#x534F;&#x8BAE;&#x3002;&#x8FD9;&#x4E9B;&#x4E1A;&#x52A1;&#x5728;&#x7269;&#x7406;&#x670D;&#x52A1;&#x5668;&#x57FA;&#x7840;&#x4E0A;&#xFF0C;&#x9700;&#x8981;&#x590D;&#x6742;&#x7684;&#x8F7D;&#x91CF;&#x5E73;&#x8861;&#x7B97;&#x6CD5;&#x3002;&#x5728;IP&#x4E16;&#x754C;&#xFF0C;&#x4E1A;&#x52A1;&#x7C7B;&#x578B;&#x7531;&#x7EC8;&#x7AEF;TCP&#x6216;UDP&#x7AEF;&#x53E3;&#x5730;&#x5740;&#x6765;&#x51B3;&#x5B9A;&#xFF0C;&#x5728;&#x7B2C;&#x56DB;&#x5C42;&#x4EA4;&#x6362;&#x4E2D;&#x7684;&#x5E94;&#x7528;&#x533A;&#x95F4;&#x5219;&#x7531;&#x6E90;&#x7AEF;&#x548C;&#x7EC8;&#x7AEF;IP&#x5730;&#x5740;&#x3001;TCP&#x548C;UDP&#x7AEF;&#x53E3;&#x5171;&#x540C;&#x51B3;&#x5B9A;&#x3002;<br>
&#x5728;&#x786C;&#x4EF6;&#x56DB;&#x5C42;&#x4EA4;&#x6362;&#x4EA7;&#x54C1;&#x9886;&#x57DF;&#xFF0C;&#x6709;&#x4E00;&#x4E9B;&#x77E5;&#x540D;&#x7684;&#x4EA7;&#x54C1;&#x53EF;&#x4EE5;&#x9009;&#x62E9;&#xFF0C;&#x6BD4;&#x5982;Alteon&#x3001;F5&#x7B49;&#xFF0C;&#x8FD9;&#x4E9B;&#x4EA7;&#x54C1;&#x5F88;&#x6602;&#x8D35;&#xFF0C;&#x4F46;&#x662F;&#x7269;&#x6709;&#x6240;&#x503C;&#xFF0C;&#x80FD;&#x591F;&#x63D0;&#x4F9B;&#x975E;&#x5E38;&#x4F18;&#x79C0;&#x7684;&#x6027;&#x80FD;&#x548C;&#x5F88;&#x7075;&#x6D3B;&#x7684;&#x7BA1;&#x7406;&#x80FD;&#x529B;&#x3002;Yahoo&#x4E2D;&#x56FD;&#x5F53;&#x521D;&#x63A5;&#x8FD1;2000&#x53F0;&#x670D;&#x52A1;&#x5668;&#x4F7F;&#x7528;&#x4E86;&#x4E09;&#x56DB;&#x53F0;Alteon&#x5C31;&#x641E;&#x5B9A;&#x4E86;&#x3002;</p>
<p><strong>&#x8F6F;&#x4EF6;&#x56DB;&#x5C42;&#x4EA4;&#x6362;</strong></p>
<p>&#x4E86;&#x89E3;&#x4E86;&#x786C;&#x4EF6;&#x56DB;&#x5C42;&#x4EA4;&#x6362;&#x673A;&#x7684;&#x539F;&#x7406;&#x540E;&#xFF0C;&#x57FA;&#x4E8E;OSI&#x6A21;&#x578B;&#x6765;&#x5B9E;&#x73B0;&#x7684;&#x8F6F;&#x4EF6;&#x56DB;&#x5C42;&#x4EA4;&#x6362;&#x4E5F;&#x5C31;&#x5E94;&#x8FD0;&#x800C;&#x751F;&#xFF0C;&#x8FD9;&#x6837;&#x7684;&#x89E3;&#x51B3;&#x65B9;&#x6848;&#x5B9E;&#x73B0;&#x7684;&#x539F;&#x7406;&#x4E00;&#x81F4;&#xFF0C;&#x4E0D;&#x8FC7;&#x6027;&#x80FD;&#x7A0D;&#x5DEE;&#x3002;&#x4F46;&#x662F;&#x6EE1;&#x8DB3;&#x4E00;&#x5B9A;&#x91CF;&#x7684;&#x538B;&#x529B;&#x8FD8;&#x662F;&#x6E38;&#x5203;&#x6709;&#x4F59;&#x7684;&#xFF0C;&#x6709;&#x4EBA;&#x8BF4;&#x8F6F;&#x4EF6;&#x5B9E;&#x73B0;&#x65B9;&#x5F0F;&#x5176;&#x5B9E;&#x66F4;&#x7075;&#x6D3B;&#xFF0C;&#x5904;&#x7406;&#x80FD;&#x529B;&#x5B8C;&#x5168;&#x770B;&#x4F60;&#x914D;&#x7F6E;&#x7684;&#x719F;&#x6089;&#x80FD;&#x529B;&#x3002;<br>
&#x8F6F;&#x4EF6;&#x56DB;&#x5C42;&#x4EA4;&#x6362;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;Linux&#x4E0A;&#x5E38;&#x7528;&#x7684;LVS&#x6765;&#x89E3;&#x51B3;&#xFF0C;LVS&#x5C31;&#x662F;Linux Virtual Server&#xFF0C;&#x4ED6;&#x63D0;&#x4F9B;&#x4E86;&#x57FA;&#x4E8E;&#x5FC3;&#x8DF3;&#x7EBF;heartbeat&#x7684;&#x5B9E;&#x65F6;&#x707E;&#x96BE;&#x5E94;&#x5BF9;&#x89E3;&#x51B3;&#x65B9;&#x6848;&#xFF0C;&#x63D0;&#x9AD8;&#x7CFB;&#x7EDF;&#x7684;&#x9C81;&#x68D2;&#x6027;&#xFF0C;&#x540C;&#x65F6;&#x53EF;&#x4F9B;&#x4E86;&#x7075;&#x6D3B;&#x7684;&#x865A;&#x62DF;VIP&#x914D;&#x7F6E;&#x548C;&#x7BA1;&#x7406;&#x529F;&#x80FD;&#xFF0C;&#x53EF;&#x4EE5;&#x540C;&#x65F6;&#x6EE1;&#x8DB3;&#x591A;&#x79CD;&#x5E94;&#x7528;&#x9700;&#x6C42;&#xFF0C;&#x8FD9;&#x5BF9;&#x4E8E;&#x5206;&#x5E03;&#x5F0F;&#x7684;&#x7CFB;&#x7EDF;&#x6765;&#x8BF4;&#x5FC5;&#x4E0D;&#x53EF;&#x5C11;&#x3002;</p>
<p>&#x4E00;&#x4E2A;&#x5178;&#x578B;&#x7684;&#x4F7F;&#x7528;&#x8D1F;&#x8F7D;&#x5747;&#x8861;&#x7684;&#x7B56;&#x7565;&#x5C31;&#x662F;&#xFF0C;&#x5728;&#x8F6F;&#x4EF6;&#x6216;&#x8005;&#x786C;&#x4EF6;&#x56DB;&#x5C42;&#x4EA4;&#x6362;&#x7684;&#x57FA;&#x7840;&#x4E0A;&#x642D;&#x5EFA;squid&#x96C6;&#x7FA4;&#xFF0C;&#x8FD9;&#x79CD;&#x601D;&#x8DEF;&#x5728;&#x5F88;&#x591A;&#x5927;&#x578B;&#x7F51;&#x7AD9;&#x5305;&#x62EC;&#x641C;&#x7D22;&#x5F15;&#x64CE;&#x4E0A;&#x88AB;&#x91C7;&#x7528;&#xFF0C;&#x8FD9;&#x6837;&#x7684;&#x67B6;&#x6784;&#x4F4E;&#x6210;&#x672C;&#x3001;&#x9AD8;&#x6027;&#x80FD;&#x8FD8;&#x6709;&#x5F88;&#x5F3A;&#x7684;&#x6269;&#x5F20;&#x6027;&#xFF0C;&#x968F;&#x65F6;&#x5F80;&#x67B6;&#x6784;&#x91CC;&#x9762;&#x589E;&#x51CF;&#x8282;&#x70B9;&#x90FD;&#x975E;&#x5E38;&#x5BB9;&#x6613;&#x3002;&#x8FD9;&#x6837;&#x7684;&#x67B6;&#x6784;&#x6211;&#x51C6;&#x5907;&#x7A7A;&#x4E86;&#x4E13;&#x95E8;&#x8BE6;&#x7EC6;&#x6574;&#x7406;&#x4E00;&#x4E0B;&#x548C;&#x5927;&#x5BB6;&#x63A2;&#x8BA8;&#x3002;</p>
<p>&#x5BF9;&#x4E8E;&#x5927;&#x578B;&#x7F51;&#x7AD9;&#x6765;&#x8BF4;&#xFF0C;&#x524D;&#x9762;&#x63D0;&#x5230;&#x7684;&#x6BCF;&#x4E2A;&#x65B9;&#x6CD5;&#x53EF;&#x80FD;&#x90FD;&#x4F1A;&#x88AB;&#x540C;&#x65F6;&#x4F7F;&#x7528;&#x5230;&#xFF0C;&#x6211;&#x8FD9;&#x91CC;&#x4ECB;&#x7ECD;&#x5F97;&#x6BD4;&#x8F83;&#x6D45;&#x663E;&#xFF0C;&#x5177;&#x4F53;&#x5B9E;&#x73B0;&#x8FC7;&#x7A0B;&#x4E2D;&#x5F88;&#x591A;&#x7EC6;&#x8282;&#x8FD8;&#x9700;&#x8981;&#x5927;&#x5BB6;&#x6162;&#x6162;&#x719F;&#x6089;&#x548C;&#x4F53;&#x4F1A;&#xFF0C;&#x6709;&#x65F6;&#x4E00;&#x4E2A;&#x5F88;&#x5C0F;&#x7684;squid&#x53C2;&#x6570;&#x6216;&#x8005;apache&#x53C2;&#x6570;&#x8BBE;&#x7F6E;&#xFF0C;&#x5BF9;&#x4E8E;&#x7CFB;&#x7EDF;&#x6027;&#x80FD;&#x7684;&#x5F71;&#x54CD;&#x5C31;&#x4F1A;&#x5F88;&#x5927;</p>
<p>&#x5177;&#x4F53;&#x53C2;&#x8003;&#xFF1A;</p>
<ul>
<li><a href="http://www.imooc.com/article/14691" target="_blank" rel="external nofollow noopener noreferrer">http://www.imooc.com/article/14691</a></li>
<li><a href="http://f.dataguru.cn/thread-609724-1-1.html" target="_blank" rel="external nofollow noopener noreferrer">http://f.dataguru.cn/thread-609724-1-1.html</a></li>
</ul>
<p><strong>3. &#x96C6;&#x7FA4;&#x5982;&#x4F55;&#x540C;&#x6B65;&#x4F1A;&#x8BDD;&#x72B6;&#x6001;</strong></p>
<p>&#x4E8B;&#x5B9E;&#x4E0A;&#xFF0C;&#x7F51;&#x7AD9;&#x603B;&#x662F;&#x6709;&#x72B6;&#x6001;&#x7684;&#x3002;&#x6BCF;&#x4E00;&#x4E2A;&#x767B;&#x5F55;&#x4FE1;&#x606F;&#x3001;&#x7528;&#x6237;&#x4FE1;&#x606F;&#x5E38;&#x5E38;&#x88AB;&#x5B58;&#x50A8;&#x5728;session&#x5185;&#x90E8;&#x3002;&#x800C;&#x5F53;&#x4E00;&#x4E2A;&#x7F51;&#x7AD9;&#x88AB;&#x90E8;&#x7F72;&#x5728;&#x4E0D;&#x6B62;&#x4E00;&#x53F0;&#x670D;&#x52A1;&#x5668;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5C31;&#x4F1A;&#x9047;&#x5230;session&#x540C;&#x6B65;&#x7684;&#x95EE;&#x9898;&#x3002;&#x4E8B;&#x5B9E;&#x4E0A;&#x5373;&#x4F7F;&#x4E00;&#x4E2A;&#x5F88;&#x5C0F;&#x7684;&#x7F51;&#x7AD9;&#xFF0C;&#x4E5F;&#x8981;&#x81F3;&#x5C11;&#x6709;&#x4E24;&#x53F0;&#x670D;&#x52A1;&#x5668;&#x4E92;&#x4E3A;&#x5907;&#x4EFD;&#xFF0C;&#x5206;&#x5355;&#x6D41;&#x91CF;&#x662F;&#x5FC5;&#x987B;&#x5F97;&#xFF0C;&#x66F4;&#x91CD;&#x8981;&#x7684;&#x662F;&#x65E0;&#x7F1D;&#x5207;&#x6D41;&#x91CF;&#x5347;&#x7EA7;&#x3002;&#x4E3A;&#x4E86;&#x4FDD;&#x8BC1;&#x670D;&#x52A1;&#x7684;&#x4E0D;&#x95F4;&#x65AD;&#x53C8;&#x8981;&#x8FDB;&#x884C;&#x7F51;&#x7AD9;&#x7684;&#x7EF4;&#x62A4;&#x5347;&#x7EA7;&#xFF0C;&#x5207;&#x6D41;&#x91CF;&#x662F;&#x6700;&#x7B80;&#x5355;&#x7684;&#x3002;&#x90A3;&#x4E48;&#x5982;&#x4F55;&#x4FDD;&#x8BC1;&#x5207;&#x6D41;&#x91CF;&#x7684;&#x65F6;&#x5019;session&#x4E5F;&#x4F1A;&#x8DDF;&#x7740;&#x540C;&#x6B65;&#x8FC7;&#x53BB;&#x5462;&#xFF1F;&#x5728;&#x96C6;&#x7FA4;&#x73AF;&#x5883;&#x4E0B;&#xFF0C;&#x5927;&#x81F4;&#x6709;&#x4EE5;&#x4E0B;&#x51E0;&#x79CD;&#x624B;&#x6BB5;&#xFF1A;</p>
<p><strong>&#xFF08;1&#xFF09;Session&#x590D;&#x5236;</strong></p>
<p>&#x8FD9;&#x662F;&#x4E00;&#x79CD;&#x5728;&#x65E9;&#x671F;&#x5E94;&#x7528;&#x7CFB;&#x7EDF;&#x4E2D;&#x4F7F;&#x7528;&#x8F83;&#x591A;&#x7684;&#x670D;&#x52A1;&#x5668;session&#x7BA1;&#x7406;&#x65B9;&#x5F0F;&#x3002;&#x5E94;&#x7528;&#x670D;&#x52A1;&#x5668;&#x5F00;&#x542F;Web&#x5BB9;&#x5668;&#x7684;session&#x7684;&#x590D;&#x5236;&#x529F;&#x80FD;&#xFF0C;&#x5728;&#x96C6;&#x7FA4;&#x4E2D;&#x7684;&#x51E0;&#x53F0;&#x670D;&#x52A1;&#x5668;&#x4E4B;&#x95F4;&#x540C;&#x6B65;session&#x5BF9;&#x8C61;&#xFF0C;&#x8FD9;&#x6837;&#x4E00;&#x53F0;&#x670D;&#x52A1;&#x5668;&#x5B95;&#x673A;&#x4E0D;&#x4F1A;&#x5BFC;&#x81F4;session&#x6570;&#x636E;&#x4E22;&#x5931;&#x3002;&#x5373;&#x6BCF;&#x4E00;&#x53F0;&#x670D;&#x52A1;&#x5668;&#x90FD;&#x6301;&#x6709;&#x96C6;&#x7FA4;&#x4E2D;&#x6240;&#x6709;&#x7684;session&#xFF0C;&#x6BCF;&#x6B21;&#x8BBF;&#x95EE;&#x4EC5;&#x4ECE;&#x672C;&#x673A;&#x83B7;&#x53D6;&#x5C31;&#x53EF;&#x4EE5;&#x4E86;&#x3002;&#x5176;&#x5DE5;&#x4F5C;&#x5F62;&#x5F0F;&#x5982;&#x4E0B;&#x6240;&#x793A;&#xFF1A;</p>
<div align="center">
<img data-original="/2017/07/13/java-interview-high-concurrent/37237-20160613221411588-1678478105.png" class="lazy">
</div>
<p>&#x4ECE;session&#x590D;&#x5236;&#x7684;&#x51E0;&#x6761;&#x7EBF;&#x5C31;&#x53EF;&#x4EE5;&#x770B;&#x51FA;&#xFF0C;&#x8FD9;&#x79CD;&#x65B9;&#x5F0F;&#x4EC5;&#x9002;&#x7528;&#x7528;&#x5C0F;&#x578B;&#x96C6;&#x7FA4;&#x3002;&#x5F53;&#x670D;&#x52A1;&#x96C6;&#x7FA4;&#x89C4;&#x6A21;&#x5F88;&#x5927;&#x65F6;&#xFF0C;&#x96C6;&#x7FA4;&#x670D;&#x52A1;&#x5668;&#x95F4;&#x7684;&#x590D;&#x5236;&#x5C31;&#x9700;&#x8981;&#x5927;&#x91CF;&#x7684;&#x901A;&#x8BAF;&#xFF0C;&#x5360;&#x7528;&#x5927;&#x91CF;&#x7F51;&#x7EDC;&#x8D44;&#x6E90;&#xFF0C;&#x751A;&#x81F3;&#x4F1A;&#x51FA;&#x73B0;&#x5185;&#x5B58;&#x4E0D;&#x591F;&#x7684;&#x60C5;&#x51B5;&#x3002;</p>
<p><strong>&#xFF08;2&#xFF09;Session&#x7ED1;&#x5B9A;</strong></p>
<p>Session&#x7ED1;&#x5B9A;&#x53EF;&#x4EE5;&#x5229;&#x7528;&#x8D1F;&#x8F7D;&#x5747;&#x8861;&#x7684;&#x6E90;&#x5730;&#x5740;Hash&#x7B97;&#x6CD5;&#x5B9E;&#x73B0;&#xFF0C;&#x8D1F;&#x8F7D;&#x5747;&#x8861;&#x670D;&#x52A1;&#x5668;&#x603B;&#x662F;&#x5C06;&#x6765;&#x81EA;&#x540C;&#x4E00;&#x4E2A;IP&#x5730;&#x5740;&#x7684;&#x8BBF;&#x95EE;&#x5206;&#x53D1;&#x5230;&#x540C;&#x4E00;&#x53F0;&#x670D;&#x52A1;&#x5668;&#x4E0A;&#x3002;&#x8FD9;&#x6837;&#x6574;&#x4E2A;&#x4F1A;&#x8BDD;&#x671F;&#x95F4;&#xFF0C;&#x7528;&#x6237;&#x6240;&#x6709;&#x7684;&#x8BF7;&#x6C42;&#x90FD;&#x6765;&#x81EA;&#x4E00;&#x53F0;&#x670D;&#x52A1;&#x5668;&#xFF0C;&#x4FDD;&#x8BC1;&#x4E86;Session&#x603B;&#x662F;&#x4ECE;&#x8FD9;&#x53F0;&#x670D;&#x52A1;&#x5668;&#x83B7;&#x53D6;&#x3002;&#x5176;&#x5DE5;&#x4F5C;&#x5F62;&#x5F0F;&#x5982;&#x4E0B;&#x56FE;&#x6240;&#x793A;&#xFF1A;</p>
<div align="center">
<img data-original="/2017/07/13/java-interview-high-concurrent/37237-20160613221524823-1753707748.png" class="lazy">
</div>
<p>&#x4F46;&#x662F;&#x8FD9;&#x6837;&#x7684;&#x7CFB;&#x7EDF;&#x663E;&#x7136;&#x4E0D;&#x7B26;&#x5408;&#x6211;&#x4EEC;&#x5BF9;&#x7CFB;&#x7EDF;&#x7684;&#x9700;&#x6C42;&#x3002;&#x5982;&#x679C;&#x4E00;&#x53F0;&#x670D;&#x52A1;&#x5668;&#x5B95;&#x673A;&#xFF0C;&#x90A3;&#x4E48;&#x5176;&#x5904;&#x7406;&#x7684;&#x6240;&#x6709;&#x8BF7;&#x6C42;Session&#x4F1A;&#x8BDD;&#x5168;&#x90E8;&#x4E22;&#x5931;&#xFF0C;&#x7528;&#x6237;&#x56E0;&#x4E3A;&#x5207;&#x6362;&#x670D;&#x52A1;&#x5668;&#x540E;&#x6CA1;&#x6709;Session&#x800C;&#x5BFC;&#x81F4;&#x65E0;&#x6CD5;&#x5B8C;&#x6210;&#x4E1A;&#x52A1;&#x3002;</p>
<p><strong>&#xFF08;3&#xFF09;&#x5229;&#x7528;Cookie&#x8BB0;&#x5F55;Session</strong></p>
<p>&#x8FD9;&#x79CD;&#x7BA1;&#x7406;&#x65B9;&#x5F0F;&#x5C06;Session&#x8BB0;&#x5F55;&#x5728;&#x5BA2;&#x6237;&#x7AEF;&#xFF0C;&#x6BCF;&#x6B21;&#x8BF7;&#x6C42;&#x670D;&#x52A1;&#x5668;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5C06;Session&#x653E;&#x5728;&#x8BF7;&#x6C42;&#x4E2D;&#x53D1;&#x9001;&#x7ED9;&#x670D;&#x52A1;&#x5668;&#xFF0C;&#x670D;&#x52A1;&#x5668;&#x5904;&#x7406;&#x5B8C;&#x6210;&#x540E;&#x518D;&#x5C06;&#x4FEE;&#x6539;&#x540E;&#x7684;Session&#x54CD;&#x5E94;&#x7ED9;&#x5BA2;&#x6237;&#x7AEF;&#x3002;</p>
<div align="center">
<img data-original="/2017/07/13/java-interview-high-concurrent/37237-20160613221654026-841062763.png" class="lazy">
</div>
<p>&#x5229;&#x7528;Cookie&#x8BB0;&#x5F55;&#x5F53;&#x7136;&#x4E5F;&#x6709;&#x7F3A;&#x70B9;&#xFF0C;&#x6BD4;&#x5982;Cookie&#x5927;&#x5C0F;&#x9650;&#x5236;&#xFF0C;&#x80FD;&#x8BB0;&#x5F55;&#x7684;&#x4FE1;&#x606F;&#x4E5F;&#x6709;&#x9650;&#xFF0C;&#x56E0;&#x4E3A;&#x5F88;&#x591A;&#x65F6;&#x5019;&#x6211;&#x4EEC;&#x5728;Session&#x4E2D;&#x50A8;&#x5B58;&#x7684;&#x4E5F;&#x5E76;&#x975E;String&#x7C7B;&#x578B;&#x7684;&#x8BB0;&#x5F55;&#x3002;&#x6BCF;&#x6B21;&#x8BF7;&#x6C42;&#x90FD;&#x9700;&#x8981;&#x4F20;&#x8F93;Cookie&#xFF0C;&#x5F71;&#x54CD;&#x6027;&#x80FD;&#xFF1B;&#x53E6;&#x5916;&#x5982;&#x679C;&#x7528;&#x6237;&#x5173;&#x95ED;Cookie&#x529F;&#x80FD;&#x5C31;&#x4E0D;&#x80FD;&#x7528;&#x4E86;&#x3002;&#x4F46;&#x662F;&#x8FD9;&#x79CD;&#x65B9;&#x5F0F;&#x56E0;&#x6B64;&#x9AD8;&#x53EF;&#x7528;&#x6027;&#x3001;&#x652F;&#x6301;&#x670D;&#x52A1;&#x5668;&#x7684;&#x7EBF;&#x6027;&#x4F38;&#x7F29;&#xFF0C;&#x8BB8;&#x591A;&#x7F51;&#x7AD9;&#x90FD;&#x5728;&#x4F7F;&#x7528;&#x8FD9;&#x79CD;&#x65B9;&#x5F0F;&#x3002;&#x6211;&#x7684;&#x5B66;&#x6821;&#x7F51;&#x7AD9;&#x4E5F;&#x5E94;&#x7528;&#x4E86;&#x8FD9;&#x79CD;&#x6280;&#x672F;&#x3002;</p>
<p><strong>&#xFF08;4&#xFF09;Session&#x670D;&#x52A1;&#x5668;</strong></p>
<p>&#x5982;&#x679C;&#x6709;&#x8FD9;&#x6837;&#x4E00;&#x4E2A;&#x670D;&#x52A1;&#x5668;&#xFF0C;&#x53EF;&#x7528;&#x6027;&#x9AD8;&#x3001;&#x4F38;&#x7F29;&#x6027;&#x597D;&#x3001;&#x6027;&#x80FD;&#x4E5F;&#x4E0D;&#x9519;&#xFF0C;&#x5BF9;&#x4FE1;&#x606F;&#x5927;&#x5C0F;&#x53C8;&#x6CA1;&#x6709;&#x9650;&#x5236;&#xFF0C;&#x90A3;&#x5B83;&#x5C31;&#x662F;Session&#x670D;&#x52A1;&#x5668;&#x3002;&#x5229;&#x7528;&#x72EC;&#x7ACB;&#x90E8;&#x7F72;&#x7684;Session&#x670D;&#x52A1;&#x5668;&#x7EDF;&#x4E00;&#x7BA1;&#x7406;Session&#xFF0C;&#x5E94;&#x7528;&#x670D;&#x52A1;&#x5668;&#x6BCF;&#x6B21;&#x8BFB;&#x5199;Session&#x65F6;&#xFF0C;&#x90FD;&#x8BBF;&#x95EE;Session&#x670D;&#x52A1;&#x5668;&#x3002;&#x5176;&#x5DE5;&#x4F5C;&#x5F62;&#x5F0F;&#x5982;&#x4E0B;&#x6240;&#x793A;&#xFF1A;</p>
<div align="center">
<img data-original="/2017/07/13/java-interview-high-concurrent/37237-20160613221831463-1126758099.png" class="lazy">
</div>
<p>&#x8FD9;&#x79CD;&#x65B9;&#x5F0F;&#x5B9E;&#x9645;&#x4E0A;&#x662F;&#x5C06;&#x5E94;&#x7528;&#x670D;&#x52A1;&#x5668;&#x7684;&#x72B6;&#x6001;&#x5206;&#x79BB;&#xFF0C;&#x5206;&#x4E3A;&#x65E0;&#x72B6;&#x6001;&#x7684;&#x5E94;&#x7528;&#x670D;&#x52A1;&#x5668;&#x548C;&#x6709;&#x72B6;&#x6001;&#x7684;Session&#x670D;&#x52A1;&#x5668;&#xFF0C;&#x7136;&#x540E;&#x9488;&#x5BF9;&#x8FD9;&#x4E24;&#x79CD;&#x670D;&#x52A1;&#x5668;&#x7684;&#x4E0D;&#x540C;&#x7279;&#x6027;&#x5206;&#x522B;&#x8BBE;&#x8BA1;&#x5176;&#x67B6;&#x6784;&#x3002;</p>
<p>&#x5BF9;&#x4E8E;&#x6709;&#x72B6;&#x6001;&#x7684;Session&#x670D;&#x52A1;&#x5668;&#xFF0C;&#x4E00;&#x79CD;&#x6BD4;&#x8F83;&#x7B80;&#x5355;&#x7684;&#x65B9;&#x5F0F;&#x662F;&#x5229;&#x7528;&#x5206;&#x5E03;&#x5F0F;&#x7F13;&#x5B58;&#x3001;&#x6570;&#x636E;&#x5E93;&#x7B49;&#x3002;</p>
<p>&#x5177;&#x4F53;&#x8BF7;&#x770B;&#xFF1A;</p>
<ul>
<li><a href="http://blog.csdn.net/u010723709/article/details/50326877" target="_blank" rel="external nofollow noopener noreferrer">http://blog.csdn.net/u010723709/article/details/50326877</a></li>
<li><a href="http://blog.csdn.net/shimiso/article/details/8978922" target="_blank" rel="external nofollow noopener noreferrer">http://blog.csdn.net/shimiso/article/details/8978922</a></li>
</ul>
<p><strong>4. &#x8D1F;&#x8F7D;&#x5747;&#x8861;&#x7684;&#x539F;&#x7406;</strong></p>
<p><strong>5 .&#x5982;&#x679C;&#x6709;&#x4E00;&#x4E2A;&#x7279;&#x522B;&#x5927;&#x7684;&#x8BBF;&#x95EE;&#x91CF;&#xFF0C;&#x5230;&#x6570;&#x636E;&#x5E93;&#x4E0A;&#xFF0C;&#x600E;&#x4E48;&#x505A;&#x4F18;&#x5316;&#xFF08;DB&#x8BBE;&#x8BA1;&#xFF0C;DBIO&#xFF0C;SQL&#x4F18;&#x5316;&#xFF0C;Java&#x4F18;&#x5316;&#xFF09;</strong></p>
<p><strong>6. &#x5982;&#x679C;&#x51FA;&#x73B0;&#x5927;&#x9762;&#x79EF;&#x5E76;&#x53D1;&#xFF0C;&#x5728;&#x4E0D;&#x589E;&#x52A0;&#x670D;&#x52A1;&#x5668;&#x7684;&#x57FA;&#x7840;&#x4E0A;&#xFF0C;&#x5982;&#x4F55;&#x89E3;&#x51B3;&#x670D;&#x52A1;&#x5668;&#x54CD;&#x5E94;&#x4E0D;&#x53CA;&#x65F6;&#x95EE;&#x9898;&#x3002;</strong></p>
<p><strong>7. &#x5047;&#x5982;&#x4F60;&#x7684;&#x9879;&#x76EE;&#x51FA;&#x73B0;&#x6027;&#x80FD;&#x74F6;&#x9888;&#x4E86;&#xFF0C;&#x4F60;&#x89C9;&#x5F97;&#x53EF;&#x80FD;&#x4F1A;&#x662F;&#x54EA;&#x4E9B;&#x65B9;&#x9762;&#xFF0C;&#x600E;&#x4E48;&#x89E3;&#x51B3;&#x95EE;&#x9898;&#x3002;</strong></p>
<p><strong>8. &#x5982;&#x4F55;&#x67E5;&#x627E; &#x9020;&#x6210; &#x6027;&#x80FD;&#x74F6;&#x9888;&#x51FA;&#x73B0;&#x7684;&#x4F4D;&#x7F6E;&#xFF0C;&#x662F;&#x54EA;&#x4E2A;&#x4F4D;&#x7F6E;&#x7167;&#x6210;&#x6027;&#x80FD;&#x74F6;&#x9888;&#x3002;</strong></p>
<p><strong>9. &#x4F60;&#x7684;&#x9879;&#x76EE;&#x4E2D;&#x4F7F;&#x7528;&#x8FC7;&#x7F13;&#x5B58;&#x673A;&#x5236;&#x5417;&#xFF1F;&#x6709;&#x6CA1;&#x7528;&#x7528;&#x6237;&#x975E;&#x672C;&#x5730;&#x7F13;&#x5B58;</strong></p>]]></content>
    
    <summary type="html">
    
      本篇汇总了 Java 面试题中并发与性能的部分知识点，正在持续添加中，方便复习之用......
    
    </summary>
    
      <category term="编程" scheme="http://ngudream.com/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="Java" scheme="http://ngudream.com/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Kotlin 封装OKHttp请求</title>
    <link href="http://ngudream.com/2017/06/20/kotlin-okhttp/"/>
    <id>http://ngudream.com/2017/06/20/kotlin-okhttp/</id>
    <published>2017-06-20T12:01:38.000Z</published>
    <updated>2017-08-02T11:20:05.784Z</updated>
    
    <content type="html"><![CDATA[<p>&#x73B0;&#x5728;&#x8D8A;&#x6765;&#x8D8A;&#x591A;&#x7684;&#x670B;&#x53CB;&#x4F7F;&#x7528;OKHttp&#x4F5C;&#x4E3A;&#x7F51;&#x7EDC;&#x8BF7;&#x6C42;&#x6846;&#x67B6;&#xFF0C;&#x6211;&#x81EA;&#x5DF1;&#x4E5F;&#x4E0D;&#x4F8B;&#x5916;&#x3002;&#x90A3;&#x4E48;&#x5728;Kotlin&#x4E2D;&#x5177;&#x4F53;&#x662F;&#x600E;&#x4E48;&#x5B9E;&#x73B0;&#x7684;&#x5462;&#xFF1F;&#x4E0B;&#x9762;&#x4ECB;&#x7ECD;&#x4E0B;&#x5BF9;&#x5176;&#x7684;&#x5C01;&#x88C5;&#x3002;</p>
<h2 id="&#x5C01;&#x88C5;okhttp&#x8BF7;&#x6C42;"><a class="header-anchor" href="#&#x5C01;&#x88C5;okhttp&#x8BF7;&#x6C42;"></a>&#x5C01;&#x88C5;OKHttp&#x8BF7;&#x6C42;</h2>
<p>&#x56E0;&#x4E3A;&#x9879;&#x76EE;&#x4E2D;&#x4F7F;&#x7528;&#x5230;OKHttp3&#xFF0C;&#x5728;&#x8FD9;&#x4E2A;&#x5468;&#x672B;&#xFF0C;&#x62BD;&#x70B9;&#x65F6;&#x95F4;&#x4F7F;&#x7528;Kotlin&#x5C01;&#x88C5;&#x4E86;&#x4E00;&#x4E0B;&#xFF0C;&#x4E3B;&#x8981;&#x662F;&#x4F7F;&#x7528;Kotlin&#x8BED;&#x6CD5;&#x8FDB;&#x884C;&#x7B80;&#x5316;&#x3002;</p>
<p>Gradle&#x6DFB;&#x52A0;&#x76F8;&#x5173;&#x4F9D;&#x8D56;&#x5305;&#xFF1A;</p>
<pre><code>compile &quot;org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version&quot;
compile &quot;org.jetbrains.kotlin:kotlin-reflect:$kotlin_version&quot;
compile &apos;com.squareup.okhttp3:okhttp:3.8.1&apos;
compile &apos;com.squareup.okio:okio:1.13.0&apos;
</code></pre>
<p>&#x5148;&#x5B9A;&#x4E49;&#x4E00;&#x4E0B;&#x81EA;&#x5DF1;&#x7684;Response&#xFF0C;&#x5185;&#x90E8;&#x53EF;&#x4EE5;&#x505A;&#x4E00;&#x4E9B;&#x81EA;&#x5DF1;&#x7684;&#x5904;&#x7406;&#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x76F4;&#x63A5;&#x4F7F;&#x7528;OKHttp&#x7684;Response&#x3002;</p>
<pre><code>/**
 * Created by ngudream 2017-06-20
 */
@Keep //&#x4E0D;&#x6DF7;&#x6DC6;&#x6B64;&#x7C7B;
open class AccountResponse {

    var statusCode: Int = 0
        private set
    private var responseAsString: String? = null
    private var responseAsBytes: ByteArray? = null
    private var headers: MutableMap&lt;String, MutableList&lt;String&gt;&gt;? = null

    /**
     * &#x521B;&#x5EFA;&#x83B7;&#x53D6;InputStream&#x4E2D;&#x6570;&#x636E;&#x7684;&#x7ED3;&#x679C;&#x7ED3;&#x6784;&#x3002;
     * &lt;br&gt;&lt;/br&gt;&#x6CE8;&#x610F;&#xFF0C;&#x8FD9;&#x4E2A;&#x6784;&#x9020;&#x65B9;&#x6CD5;&#x4F1A;&#x76F4;&#x63A5;&#x4ECE;&#x8F93;&#x5165;&#x6D41;&#x4E2D;&#x8BFB;&#x53D6;&#x6570;&#x636E;&#x5E76;&#x4E14;&#x5173;&#x95ED;&#x8F93;&#x5165;&#x6D41;&#xFF0C;&#x540E;&#x7EED;&#x4E0D;&#x80FD;&#x518D;&#x5BF9;&#x8F93;&#x5165;&#x6D41;&#x8FDB;&#x884C;&#x64CD;&#x4F5C;&#xFF08;&#x540C;&#x65F6;&#xFF0C;&#x8F93;&#x5165;&#x6D41;&#x53EF;&#x80FD;&#x5728;&#x5176;&#x4ED6;&#x5730;&#x65B9;&#x88AB;&#x5173;&#x95ED;&#xFF0C;&#x6240;&#x4EE5;&#x4E0D;&#x8981;&#x5728;&#x6784;&#x9020;&#x65B9;&#x6CD5;&#x4E4B;&#x5916;&#x64CD;&#x4F5C;&#x5B83;&#xFF09;&#x3002;
     */
    @Throws(IOException::class)
    constructor(statusCode: Int, datas: ByteArray?, headers: MutableMap&lt;String, MutableList&lt;String&gt;&gt;?) {
        this.statusCode = statusCode
        // &#x5728;&#x8FD9;&#x91CC;&#x83B7;&#x53D6;stream&#x7684;&#x6570;&#x636E;&#xFF0C;&#x56E0;&#x4E3A;&#x8BE5;&#x65B9;&#x6CD5;&#x4E4B;&#x540E;stream&#x4F1A;close&#x6389;
        this.responseAsBytes = datas
        this.headers = headers
    }

    constructor(content: String, responseCode: Int) {
        responseAsString = content
        statusCode = responseCode
    }

    fun getResponseAsString(): String? {
        responseAsString = responseAsBytes?.toString(Charset.forName(&quot;utf-8&quot;))
        return responseAsString
    }

    fun getHeadersByName(name: String): MutableList&lt;String&gt;? {
        if (headers != null) {
            return headers?.get(name)
        }
        return null
    }

    override fun toString(): String {
        if (null != getResponseAsString()) {
            return responseAsString?: &quot;&quot;
        }
        return &quot;Response{&quot; +
                &quot;statusCode=&quot; + statusCode +
                &quot;, responseString=&apos;&quot; + responseAsString +
                &apos;}&apos;
    }
}
</code></pre>
<p>&#x63A5;&#x4E0B;&#x6765;&#x6211;&#x4EEC;&#x4F7F;&#x7528;Kotlin&#x8FDB;&#x884C;OKHttp&#x7F51;&#x7EDC;&#x8BF7;&#x6C42;&#x7684;&#x5C01;&#x88C5;&#xFF0C;&#x4E3B;&#x8981;&#x662F;&#x4F7F;&#x7528;companion object&#x521B;&#x5EFA;<a href="/2017/06/10/kotlin-singleton/">&#x5355;&#x4F8B;</a>&#xFF0C;&#x8FD9;&#x6837;&#x53EF;&#x4EE5;&#x590D;&#x7528;OkHttpClient&#x7684;&#x5B9E;&#x4F8B;</p>
<pre><code>/**
 * Created by ngudream 2017-06-20
 * &#x5C01;&#x88C5;okhttp&#x8BF7;&#x6C42;
 */
class AccountHttpClient private constructor() {

    private val TAG = &quot;AccountHttpClient&quot;

    /**
     * &#x53EA;&#x4F7F;&#x7528;&#x4E00;&#x4E2A;&#x5B9E;&#x4F8B;&#x7684;&#xFF0C;&#x4EE5;&#x4FBF;&#x91CD;&#x7528;response cache&#x3001;thread pool&#x3001;connection re-use &#x7B49;
     */
    private val mOkHttpCilent: OkHttpClient

    private object Holder { val INSTANCE = AccountHttpClient()}

    companion object {//&#x6784;&#x9020;&#x5355;&#x4F8B;
        private var CONNECTION_TIME_OUT = 30 * 1000
        private var READ_TIME_OUT = 30 * 1000
        private var WRITE_TIME_OUT = 30 * 1000
        val  instance: AccountHttpClient by lazy { Holder.INSTANCE }
    }

    //&#x7531;&#x4E8E;primary constructor&#x4E0D;&#x80FD;&#x5305;&#x542B;&#x4EFB;&#x4F55;&#x4EE3;&#x7801;&#xFF0C;&#x56E0;&#x6B64;&#x4F7F;&#x7528; init &#x4EE3;&#x7801;&#x5757;&#x5BF9;&#x5176;&#x521D;&#x59CB;&#x5316;&#xFF0C;&#x540C;&#x65F6;&#x53EF;&#x4EE5;&#x5728;&#x521D;&#x59CB;&#x5316;&#x4EE3;&#x7801;&#x5757;&#x4E2D;&#x4F7F;&#x7528;&#x6784;&#x9020;&#x51FD;&#x6570;&#x7684;&#x53C2;&#x6570;
    init {
        mOkHttpCilent = OkHttpClient.Builder()
                .connectTimeout(CONNECTION_TIME_OUT.toLong(), TimeUnit.SECONDS)//&#x6CE8;&#x610F;&#x663E;&#x793A;&#x8F6C;&#x5316;toLong
                .readTimeout(READ_TIME_OUT.toLong(), TimeUnit.SECONDS)
                .writeTimeout(WRITE_TIME_OUT.toLong(), TimeUnit.SECONDS)
                .hostnameVerifier(AccountHostnameVerifier())
                .build()
    }

    /**
     * &#x53D1;&#x8D77;get&#x8BF7;&#x6C42;
     */
    @Throws(Exception::class)
    operator fun get(url: String, requestParams: List&lt;Pair&lt;String, String&gt;&gt;,
                     requestHeaders: List&lt;Pair&lt;String, String&gt;&gt;): AccountResponse? {
        return execute(Type.GET, url, requestParams, requestHeaders)
    }

    /**
     * &#x53D1;&#x8D77;post&#x8BF7;&#x6C42;
     */
    @Throws(Exception::class)
    fun post(url: String, requestParams: List&lt;Pair&lt;String, String&gt;&gt;?,
             requestHeaders: List&lt;Pair&lt;String, String&gt;&gt;?): AccountResponse? {
        return execute(Type.POST, url, requestParams, requestHeaders)
    }

    /**
     * &#x4E0A;&#x4F20;&#x6587;&#x4EF6;
     */
    @Throws(Exception::class)
    fun uploadFile(url: String, requestParams: List&lt;Pair&lt;String, String&gt;&gt;,
                   requestHeaders: List&lt;Pair&lt;String, String&gt;&gt;, filePath: String): AccountResponse? {
        return execute(url, requestParams, requestHeaders, filePath)
    }

    /**
     * &#x4E0B;&#x8F7D;&#x6587;&#x4EF6;
     */
    @Throws(Exception::class)
    fun downloadFile(url: String, requestParams: List&lt;Pair&lt;String, String&gt;&gt;,
                     requestHeaders: List&lt;Pair&lt;String, String&gt;&gt;): AccountResponse? {
        return execute(Type.POST, url, requestParams, requestHeaders)
    }

    /**
     * &#x6267;&#x884C;&#x8BF7;&#x6C42;
     */
    @Throws(Exception::class)
    private fun execute(type: Type, url: String, requestParams: List&lt;Pair&lt;String, String&gt;&gt;?,
                        requestHeaders: List&lt;Pair&lt;String, String&gt;&gt;?): AccountResponse? {
        var result: AccountResponse? = null
        try {
            val okResponse = performRequest(OKRequest(type, url, requestParams, requestHeaders))//&#x8FDB;&#x884C;&#x53C2;&#x6570;&#x5C01;&#x88C5;&#xFF0C;&#x53D1;&#x8D77;&#x7F51;&#x7EDC;&#x8BF7;&#x6C42;
            if (okResponse != null) {
                result = AccountResponse(okResponse.responseCode, okResponse.body, okResponse.headers)
            }
        } catch (e: Exception) {
            e.printStackTrace()
            throw e
        }

        return result
    }

    @Throws(Exception::class)
    private fun execute(url: String, requestParams: List&lt;Pair&lt;String, String&gt;&gt;,
                        requestHeaders: List&lt;Pair&lt;String, String&gt;&gt;, filePath: String): AccountResponse? {
        var result: AccountResponse? = null
        try {
            val okResponse = performRequest(OKRequest(Type.POST, url, requestParams, requestHeaders, filePath))
            if (okResponse != null) {
                result = AccountResponse(okResponse.responseCode, okResponse.body, okResponse.headers)
            }
        } catch (e: Exception) {
            throw e
        }

        return result
    }

    internal enum class Type {
        GET,
        POST
    }

    /**
     * &#x8BF7;&#x6C42;&#x53C2;&#x6570;&#x7C7B;
     */
    private inner class OKRequest {
        private var mType: Type? = null
        var mUrl: String? = null
            private set
        private var mRequestParams: List&lt;Pair&lt;String, String&gt;&gt;? = null
        private var mRequestHeaders: List&lt;Pair&lt;String, String&gt;&gt;? = null
        private var mFilePath: String? = null

        constructor(type: Type, url: String,
                    requestParams: List&lt;Pair&lt;String, String&gt;&gt;?,
                    requestHeaders: List&lt;Pair&lt;String, String&gt;&gt;?) {
            mType = type
            mUrl = url
            mRequestParams = requestParams
            mRequestHeaders = requestHeaders
        }

        constructor(type: Type, url: String,
                    requestParams: List&lt;Pair&lt;String, String&gt;&gt;,
                    requestHeaders: List&lt;Pair&lt;String, String&gt;&gt;, filePath: String) {
            mType = type
            mUrl = url
            mRequestParams = requestParams
            mRequestHeaders = requestHeaders
            mFilePath = filePath
        }

        fun getDataRequest(): Request{//&#x6B64;&#x5904;&#x53EF;&#x4EE5;&#x6539;&#x6210;request&#x7684;get()&#x65B9;&#x6CD5;
            val request: Request
            val builder = Request.Builder()
            builder.url(mUrl!!)
            builder.header(&quot;Connection&quot;, &quot;Close&quot;)
            if (mRequestHeaders?.isNotEmpty() ?: false) {
                for (header in mRequestHeaders!!) {
                    builder.addHeader(header.first, header.second)
                }
            }
            if (mType == Type.GET) {
                builder.get()
            } else {
                if (mFilePath?.isNotEmpty() ?: false) {//&#x8BBE;&#x7F6E;&#x4E0A;&#x4F20;&#x6587;&#x4EF6;
                    val bodyBuilder = MultipartBody.Builder()
                            .setType(MultipartBody.FORM)
                    val file = File(mFilePath)
                    if (file.exists()) {
                        bodyBuilder.addFormDataPart(&quot;file&quot;, file.name, RequestBody.create(null, file))
                    }
                    mRequestParams?.let {
                        for (param in it) {
                            bodyBuilder.addFormDataPart(param.first, param.second)
                        }
                    }
                    builder.post(bodyBuilder.build())
                } else {//&#x8BBE;&#x7F6E;&#x53C2;&#x6570;
                    mRequestParams?.let {
                        val formBuilder = FormBody.Builder()
                        for (param in it) {
                            formBuilder.add(param.first, param.second)
                        }
                        builder.post(formBuilder.build())
                    }
                }
            }
            request = builder.build()
            return request
        }
    }

    /**
     * &#x54CD;&#x5E94;&#x7C7B;
     */
    private inner class OKResponse(private val response: Response?) {

        val responseCode: Int
            get() = mResponse!!.code()

        val body: ByteArray?
            get() {
                var result: ByteArray? = null
                if (response != null &amp;&amp; response.body() != null) {
                    try {
                        result = mResponse.body()!!.bytes()
                    } catch (e: IOException) {
                        Log.e(TAG, e.message)
                    }
                    headers
                }
                return result
            }

        val headers: MutableMap&lt;String, MutableList&lt;String&gt;&gt;?
            get() {
                var headers: MutableMap&lt;String, MutableList&lt;String&gt;&gt;? = null
                if (response != null &amp;&amp; response.headers() != null) {
                    try {
                        headers = response.headers().toMultimap()
                    } catch (e: Exception) {
                    }

                }
                return headers
            }
    }

    @Throws(IOException::class)
    private fun performRequest(request: OKRequest): OKResponse? {
        val call = mOkHttpCilent.newCall(request.getDataRequest())//new&#x4E00;&#x4E2A;call&#xFF0C;&#x901A;&#x8FC7;okhttp&#x53D1;&#x8D77;&#x8BF7;&#x6C42;
        return OKResponse(call.execute())
    }

    /**
     * &#x8BC1;&#x4E66;&#x9A8C;&#x8BC1;
     */
    private inner class AccountHostnameVerifier : HostnameVerifier {

        override fun verify(hostname: String, session: SSLSession): Boolean {
            var result = false
            try {
                val certs = session.peerCertificates as Array&lt;X509Certificate&gt;
                if (certs.isNotEmpty()) {
                    for (i in certs.indices) {//&#x628A;&#x8BC1;&#x4E66;&#x53D6;&#x51FA;&#xFF0C;&#x4E00;&#x4E2A;&#x4E00;&#x4E2A;&#x9A8C;&#x8BC1;
                        result = OkHostnameVerifier.INSTANCE.verify(hostname, certs[i])
                        if (result) {
                            break
                        }
                    }
                } else {
                    result = true
                }
            } catch (e: SSLPeerUnverifiedException) {
                e.printStackTrace()
            }

            return result
        }
    }
}
</code></pre>
<p>&#x5916;&#x8C03;&#x7528;&#x5C31;&#x6BD4;&#x8F83;&#x7B80;&#x5355;&#x4E86;&#xFF0C;&#x76F4;&#x63A5;&#x4F7F;&#x7528;&#x5355;&#x4F8B;&#x8C03;&#x7528;</p>
<pre><code>Thread(Runnable {
                    var response: AccountResponse? = AccountHttpClient.instance.post(&quot;http://www.baidu.com&quot;, null, null)
                    val result: String? = response?.getResponseAsString()
                    runOnUiThread {
                        Toast.makeText(this, result, Toast.LENGTH_SHORT).show()
                    }
                }).start()
</code></pre>]]></content>
    
    <summary type="html">
    
      现在越来越多的朋友使用OKHttp作为网络请求框架，我自己也不例外。那么在Kotlin中具体是怎么实现的呢？下面介绍下对其的封装。
    
    </summary>
    
      <category term="移动开发" scheme="http://ngudream.com/categories/%E7%A7%BB%E5%8A%A8%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="Android" scheme="http://ngudream.com/tags/Android/"/>
    
      <category term="Kotlin" scheme="http://ngudream.com/tags/Kotlin/"/>
    
  </entry>
  
  <entry>
    <title>Kotlin 单例模式</title>
    <link href="http://ngudream.com/2017/06/10/kotlin-singleton/"/>
    <id>http://ngudream.com/2017/06/10/kotlin-singleton/</id>
    <published>2017-06-10T11:59:55.000Z</published>
    <updated>2017-07-27T13:21:51.822Z</updated>
    
    <content type="html"><![CDATA[<p>&#x5355;&#x4F8B;&#x6A21;&#x5F0F;&#x662F;&#x4E00;&#x79CD;&#x5E38;&#x89C1;&#x7684;&#x8BBE;&#x8BA1;&#x6A21;&#x5F0F;&#xFF0C;&#x5B83;&#x786E;&#x4FDD;&#x67D0;&#x4E2A;&#x7C7B;&#x53EA;&#x6709;&#x4E00;&#x4E2A;&#x5B9E;&#x4F8B;&#xFF0C;&#x800C;&#x4E14;&#x81EA;&#x884C;&#x5B9E;&#x4F8B;&#x5316;&#x5E76;&#x5411;&#x6574;&#x4E2A;&#x7CFB;&#x7EDF;&#x63D0;&#x4F9B;&#x8FD9;&#x4E2A;&#x5B9E;&#x4F8B;&#x3002;&#x5355;&#x4F8B;&#x6A21;&#x5F0F;&#x7684;&#x5199;&#x6CD5;&#x6709;&#x597D;&#x51E0;&#x79CD;&#xFF0C;Kotlin&#x4E2D;&#x5982;&#x4F55;&#x5B9E;&#x73B0;&#x5462;&#xFF1F;</p>
<h2 id="kotlin-&#x5355;&#x4F8B;&#x6A21;&#x5F0F;"><a class="header-anchor" href="#kotlin-&#x5355;&#x4F8B;&#x6A21;&#x5F0F;"></a>Kotlin &#x5355;&#x4F8B;&#x6A21;&#x5F0F;</h2>
<p>&#x4E8B;&#x5B9E;&#x4E0A;&#xFF0C;&#x5BF9;&#x8C61;&#x5C31;&#x662F;&#x5177;&#x6709;&#x5355;&#x4E00;&#x5B9E;&#x73B0;&#x7684;&#x6570;&#x636E;&#x7C7B;&#x578B;&#x3002;&#x6240;&#x4EE5;&#x5982;&#x679C;&#x6211;&#x4EEC;&#x60F3;&#x5728;Java&#x4E2D;&#x627E;&#x5230;&#x7C7B;&#x4F3C;&#x7684;&#x4E1C;&#x897F;&#xFF0C;&#x90A3;&#x5C06;&#x662F;&#x5355;&#x4F8B;&#x6A21;&#x5F0F;&#x3002;&#x800C;&#x4F7F;&#x7528;Kotlin&#x53C8;&#x662F;&#x5982;&#x4F55;&#x5B9E;&#x73B0;&#x5462;&#xFF1F;&#x4E0B;&#x9762;&#x6211;&#x4EEC;&#x6765;&#x505A;&#x4E00;&#x4E0B;&#x6BD4;&#x8F83;&#x3002;</p>
<h3 id="java-&#x65B9;&#x5F0F;"><a class="header-anchor" href="#java-&#x65B9;&#x5F0F;"></a>Java &#x65B9;&#x5F0F;</h3>
<p>&#x8BA9;&#x6211;&#x4EEC;&#x5148;&#x56DE;&#x987E;&#x4E00;&#x4E0B;Java&#x7684;&#x5355;&#x4F8B;&#x6A21;&#x5F0F;&#x5199;&#x6CD5;&#x3002;</p>
<p>&#x7B2C;&#x4E00;&#x79CD;&#xFF08;&#x61D2;&#x6C49;&#xFF0C;&#x7EBF;&#x7A0B;&#x4E0D;&#x5B89;&#x5168;&#xFF09;&#xFF1A;</p>
<pre><code>/**
 * Created by ngudream on 17-6-10.
 */
public class Singleton {  
      private static Singleton instance;  
      private Singleton (){}   
      public static Singleton getInstance() {  
      if (instance == null) {  
          instance = new Singleton();  
      }  
      return instance;  
      }  
 }  
</code></pre>
<p>&#x7B2C;&#x4E8C;&#x79CD;&#xFF08;&#x61D2;&#x6C49;&#xFF0C;&#x7EBF;&#x7A0B;&#x5B89;&#x5168;&#xFF09;&#xFF1A;</p>
<pre><code>/**
 * Created by ngudream on 17-6-10.
 */
public class Singleton {  
     private static Singleton instance;  
     private Singleton (){}
     public static synchronized Singleton getInstance() {  
     if (instance == null) {  
         instance = new Singleton();  
     }  
     return instance;  
     }  
 }  
</code></pre>
<p>&#x7B2C;&#x4E09;&#x79CD;&#xFF08;&#x997F;&#x6C49;&#xFF09;&#xFF1A;</p>
<pre><code>public class Singleton {  
      private Singleton instance = null;  
      static {  
      instance = new Singleton();  
      }  
      private Singleton (){}
      public static Singleton getInstance() {  
      return this.instance;  
      }  
 }  
</code></pre>
<p>&#x7B2C;&#x56DB;&#x79CD;&#xFF08;&#x53CC;&#x91CD;&#x6821;&#x9A8C;&#x9501;&#xFF09;&#xFF1A;</p>
<pre><code>/**
 * Created by ngudream on 17-6-10.
 */
public class Singleton {  
      private volatile static Singleton singleton;  
      private Singleton (){}   
      public static Singleton getSingleton() {  
      if (singleton == null) {  
          synchronized (Singleton.class) {  
          if (singleton == null) {  
              singleton = new Singleton();  
          }  
         }  
     }  
     return singleton;  
     }  
 }  
</code></pre>
<p>&#x8FD8;&#x6709;&#x597D;&#x51E0;&#x79CD;&#x5199;&#x6CD5;&#xFF0C;&#x6709;&#x7684;&#x662F;&#x7EBF;&#x7A0B;&#x5B89;&#x5168;&#x7684;&#xFF0C;&#x6709;&#x7684;&#x662F;&#x7EBF;&#x7A0B;&#x4E0D;&#x5B89;&#x5168;&#x7684;&#x3002;&#x4F46;&#x6211;&#x4EEC;&#x4E00;&#x822C;&#x5E94;&#x8BE5;&#x4F7F;&#x7528;&#x7EBF;&#x7A0B;&#x5B89;&#x5168;&#x7684;&#x5199;&#x6CD5;&#xFF0C;&#x63A8;&#x8350;&#x662F;&#x53CC;&#x91CD;&#x68C0;&#x9A8C;&#x9501;&#x5199;&#x6CD5;&#x3002;</p>
<h3 id="kotlin-object&#x65B9;&#x5F0F;"><a class="header-anchor" href="#kotlin-object&#x65B9;&#x5F0F;"></a>Kotlin object&#x65B9;&#x5F0F;</h3>
<p>&#x5728;kotlin &#x4E2D;&#x901A;&#x8FC7;object&#x5173;&#x952E;&#x5B57;&#x5B9A;&#x4E49;&#x5355;&#x4F8B;&#x7C7B;&#xFF0C;&#x8FD9;&#x4E2A;&#x5C31;&#x6BD4;&#x8F83;&#x7B80;&#x5355;&#x4E86;&#xFF0C;&#x4EE3;&#x7801;&#x91CF;&#x76F8;&#x5BF9;Java&#x6765;&#x8BF4;&#x53D8;&#x5F97;&#x5F88;&#x5C11;&#x4E86;&#x3002;</p>
<pre><code>/**
 * Created by ngudream on 17-6-10.
 */

object Singleton {
    fun test(){
        println(&quot;hello kotlin!&quot;)
    }
}

//&#x8C03;&#x7528;
Singleton.test()
</code></pre>
<p>&#x662F;&#x4E0D;&#x662F;&#x5F88;&#x7B80;&#x6D01;&#xFF1F;&#x770B;&#x4E0A;&#x53BB;&#x4EE3;&#x7801;&#x91CF;&#x5F88;&#x5C11;&#xFF0C;Kotlin&#x5185;&#x90E8;&#x53C8;&#x662F;&#x5982;&#x4F55;&#x5B9E;&#x73B0;&#x7684;&#x5462;&#xFF1F;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;AndroidStudio IDE&#x5DE5;&#x5177;&#x680F;&#x7684;Tools-&gt;Kotlin-&gt;Show Kotlin ByteCode&#xFF0C;&#x7136;&#x540E;&#x70B9;&#x51FB;&#x5F39;&#x51FA;&#x754C;&#x9762;&#x7684;Decompile&#x6309;&#x94AE;&#xFF0C;&#x5C31;&#x53EF;&#x4EE5;&#x770B;&#x5230;&#x5982;&#x4E0B;&#x4EE3;&#x7801;&#xFF1A;</p>
<pre><code>import kotlin.Metadata;

@Metadata(
   mv = {1, 1, 6},
   bv = {1, 0, 1},
   k = 1,
   d1 = {&quot;\u0000\u0012\n\u0002\u0018\u0002\n\u0002\u0010\u0000\n\u0002\b\u0002\n\u0002\u0010\u0002\n\u0000\b&#xC6;\u0002\u0018\u00002\u00020\u0001B\u0007\b\u0002&#xA2;\u0006\u0002\u0010\u0002J\u0006\u0010\u0003\u001a\u00020\u0004&#xA8;\u0006\u0005&quot;},
   d2 = {&quot;Lcom/xxx/example/kotlin/Singleton;&quot;, &quot;&quot;, &quot;()V&quot;, &quot;test&quot;, &quot;&quot;, &quot;production sources for module app&quot;}
)
public final class Singleton {
   public static final Singleton INSTANCE;

   public final void test() {
      String var1 = &quot;hello kotlin!&quot;;
      System.out.println(var1);
   }

   private Singleton() {
      INSTANCE = (Singleton)this;
   }

   static {
      new Singleton();
   }
}
</code></pre>
<p>&#x662F;&#x4E0D;&#x662F;&#x5F88;&#x719F;&#x6089;&#x7684;&#x8D76;&#x811A;&#xFF1F;&#x548C;&#x4E0A;&#x9762;&#x63D0;&#x5230;&#x7684;Java&#x997F;&#x6C49;&#x6A21;&#x5F0F;&#x7C7B;&#x4F3C;&#x3002;</p>
<h3 id="kotlin-&#x663E;&#x5F0F;&#x58F0;&#x660E;&#x9759;&#x6001;instance&#x53D8;&#x91CF;"><a class="header-anchor" href="#kotlin-&#x663E;&#x5F0F;&#x58F0;&#x660E;&#x9759;&#x6001;instance&#x53D8;&#x91CF;"></a>Kotlin &#x663E;&#x5F0F;&#x58F0;&#x660E;&#x9759;&#x6001;instance&#x53D8;&#x91CF;</h3>
<p>&#x8FD9;&#x79CD;&#x65B9;&#x5F0F;&#x5C31;&#x662F;&#x5728;&#x7C7B;&#x5185;&#x90E8;&#x5B9A;&#x4E49;&#x4E2A;&#x7C7B;&#x5BF9;&#x8C61;&#x7684;&#x53D8;&#x66F4;&#xFF0C;&#x7136;&#x540E;&#x521D;&#x59CB;&#x5316;&#x3002;</p>
<pre><code>/**
 * Created by ngudream on 17-6-10.
 */
class Singleton private constructor(){

    companion object {
        val instance = Singleton()
    }

    fun test(){
        println(&quot;hello kotlin!&quot;)
    }
}
</code></pre>
<p>&#x67E5;&#x770B;Kotlin&#x7684;&#x6E90;&#x7801;&#xFF0C;&#x5185;&#x90E8;&#x5C31;&#x662F;&#x76F4;&#x63A5;&#x5B9A;&#x4E49;&#x4E86;&#x4E00;&#x4E2A;static&#x7684;&#x53D8;&#x91CF;&#xFF1A;</p>
<pre><code>public final class Singleton {
   @NotNull
   private static final Singleton instance = new Singleton();//&#x76F4;&#x63A5;&#x5B9A;&#x4E49;&#x53D8;&#x91CF;
   public static final Singleton.Companion Companion = new Singleton.Companion((DefaultConstructorMarker)null);

   public final void test() {
      String var1 = &quot;hello kotlin!&quot;;
      System.out.println(var1);
   }

   public static final class Companion {
      @NotNull
      public final Singleton getInstance() {
         return Singleton.instance;
      }

      private Companion() {
      }

      // $FF: synthetic method
      public Companion(DefaultConstructorMarker $constructor_marker) {
         this();
      }
   }
}
</code></pre>
<p>&#x5982;&#x679C;Singleton&#x5E76;&#x6CA1;&#x6709;&#x5B9E;&#x8D28;&#x7684;&#x8C03;&#x7528;&#x5C31;&#x521D;&#x59CB;&#x5316;&#xFF0C;&#x4F1A;&#x9020;&#x6210;&#x8D44;&#x6E90;&#x7684;&#x6D6A;&#x8D39;&#xFF0C;&#x6240;&#x4EE5;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x61D2;&#x6C49;&#x5F0F;&#x52A0;&#x8F7D;&#xFF0C;&#x7B49;&#x5230;&#x7B2C;&#x4E00;&#x6B21;&#x4F7F;&#x7528;&#x5230;Singleton&#x5185;&#x90E8;&#x65B9;&#x6CD5;&#x65F6;&#x518D;&#x521D;&#x59CB;&#x5316;&#x3002;</p>
<pre><code>/**
 * Created by ngudream on 17-6-10.
 * &#x61D2;&#x6C49;&#x5F0F;&#x52A0;&#x8F7D;
 */

class Singleton private constructor(){

    private object Holder { val INSTANCE = Singleton() }

    companion object {
        val instance: Singleton by lazy { Holder.INSTANCE }
    }

    fun test(){
        println(&quot;hello kotlin!&quot;)
    }
}
</code></pre>
<p>&#x7C7B;&#x4F3C;&#x7684;&#xFF0C;&#x8BA9;&#x6211;&#x4EEC;&#x6765;&#x770B;&#x770B;Kotlin&#x5185;&#x90E8;&#x662F;&#x5982;&#x4F55;&#x5B9E;&#x73B0;&#x7684;&#xFF1A;</p>
<pre><code>public final class Singleton {
   @NotNull
   private static final Lazy instance$delegate;
   public static final Singleton.Companion Companion = new Singleton.Companion((DefaultConstructorMarker)null);

   public final void test() {
      String var1 = &quot;hello kotlin!&quot;;
      System.out.println(var1);
   }

   static {
      instance$delegate = LazyKt.lazy((Function0)null.INSTANCE);//&#x5148;&#x521B;&#x5EFA;&#x4EE3;&#x7406;&#x5BF9;&#x8C61;&#x5B9E;&#x4F8B;
   }

   private static final class Holder {
      @NotNull
      private static final Singleton INSTANCE;
      public static final Singleton.Holder INSTANCE;

      @NotNull
      public final Singleton getINSTANCE() {
         return INSTANCE;
      }

      private Holder() {
         INSTANCE = (Singleton.Holder)this;
         INSTANCE = new Singleton();
      }

      static {
         new Singleton.Holder();
      }
   }

   public static final class Companion {
      // $FF: synthetic field
      static final KProperty[] $$delegatedProperties = new KProperty[]{(KProperty)Reflection.property1(new PropertyReference1Impl(Reflection.getOrCreateKotlinClass(Singleton.Companion.class), &quot;instance&quot;, &quot;getInstance()Lcom/xxx/example/kotlin/Singleton;&quot;))};

      @NotNull
      public final Singleton getInstance() {
         Lazy var1 = Singleton.instance$delegate;//&#x4EE3;&#x7801;&#x5BF9;&#x8C61;&#x83B7;&#x53D6;&#x5B9E;&#x9645;&#x5BF9;&#x8C61;
         KProperty var3 = $$delegatedProperties[0];
         return (Singleton)var1.getValue();
      }

      private Companion() {
      }

      // $FF: synthetic method
      public Companion(DefaultConstructorMarker $constructor_marker) {
         this();
      }
   }
}
</code></pre>
<p>&#x6211;&#x4EEC;&#x518D;&#x56DE;&#x987E;&#x4E00;&#x4E0B;Java&#x5355;&#x4F8B;&#x6A21;&#x5F0F;&#x7EBF;&#x7A0B;&#x5B89;&#x5168;&#x7684;&#x5199;&#x6CD5;&#xFF0C;&#x5728;Kotlin&#x4E2D;&#x53C8;&#x662F;&#x5982;&#x4F55;&#x5B9E;&#x73B0;&#x7684;&#x5462;&#xFF1F;</p>
<pre><code>/**
 * Created by ngudream on 17-6-10.
 * &#x52A0;&#x9501;&#x7EBF;&#x7A0B;&#x5B89;&#x5168;
 */
class Singleton private constructor(){

    companion object {
        @Volatile
        var instance: Singleton? = null
            get() {
                if (instance == null) {
                    synchronized(Singleton::class.java) {
                        if (instance == null) {
                            instance = Singleton()
                        }
                    }
                }
                return instance!!
            }
    }

    fun test() {
        println(&quot;hello kotlin!&quot;)
    }
}
</code></pre>
<p>&#x518D;&#x770B;&#x4E00;&#x4E0B;Kotlin&#x7684;&#x6E90;&#x7801;&#x5B9E;&#x73B0;&#xFF1A;</p>
<pre><code>public final class Singleton {
   @Nullable
   private static volatile Singleton instance;
   public static final Singleton.Companion Companion = new Singleton.Companion((DefaultConstructorMarker)null);

   public final void test() {
      String var1 = &quot;hello kotlin!&quot;;
      System.out.println(var1);
   }

   private Singleton() {
   }

   // $FF: synthetic method
   public Singleton(DefaultConstructorMarker $constructor_marker) {
      this();
   }

   // $FF: synthetic method
   @Nullable
   public static final Singleton access$getInstance$cp() {
      return instance;
   }

   public static final class Companion {
      @Nullable
      public final Singleton getInstance() {
         if(Singleton.Companion.getInstance() == null) {
            Class var1 = Singleton.class;
            synchronized(var1){}//&#x7ADF;&#x7136;&#x6CA1;&#x505A;&#x4E8B;&#x60C5;&#xFF1F;&#xFF1F;

            try {
               if(Singleton.Companion.getInstance() == null) {
                  Singleton.Companion.setInstance(new Singleton((DefaultConstructorMarker)null));
               }

               Unit var3 = Unit.INSTANCE;
            } finally {
               ;
            }
         }

         Singleton var10000 = Singleton.Companion.getInstance();
         if(var10000 == null) {
            Intrinsics.throwNpe();
         }

         return var10000;
      }

      public final void setInstance(@Nullable Singleton var1) {
         Singleton.instance = var1;
      }

      private Companion() {
      }

      // $FF: synthetic method
      public Companion(DefaultConstructorMarker $constructor_marker) {
         this();
      }
   }
}
</code></pre>
<p>&#x901A;&#x8FC7;&#x6E90;&#x7801;&#xFF0C;&#x6211;&#x4EEC;&#x53D1;&#x73B0;Kotlin &#x7684;synchronized&#x5E76;&#x6CA1;&#x6709;&#x505A;&#x4E8B;&#x60C5;&#xFF0C;&#x4EC0;&#x4E48;&#x9B3C;&#xFF1F;&#x662F;&#x5426;&#x8FBE;&#x5230;&#x4E86;&#x771F;&#x6B63;&#x7684;&#x7EBF;&#x7A0B;&#x5B89;&#x5168;&#x5462;&#xFF1F;&#x8FD9;&#x4E2A;&#x8FD8;&#x6709;&#x5F85;&#x6211;&#x627E;&#x65F6;&#x95F4;&#x8BA4;&#x771F;&#x8003;&#x8BC1;&#x4E00;&#x4E0B;&#x3002;</p>
<p>&#x5F53;&#x7136;&#xFF0C;&#x5BF9;&#x5355;&#x4F8B;&#x7684;&#x521D;&#x59CB;&#x5316;&#x6211;&#x4EEC;&#x8FD8;&#x53EF;&#x4EE5;&#x8FD9;&#x6837;&#x5199;&#xFF0C;&#x4EE5;Android&#x4E2D;&#x7684;Application&#x4E3A;&#x4F8B;&#xFF1A;</p>
<pre><code>class App : Application() {
    companion object {
        lateinit var instance: App //&#x5EF6;&#x8FDF;&#x52A0;&#x8F7D;&#xFF0C;&#x4E0D;&#x9700;&#x8981;&#x521D;&#x59CB;&#x5316;&#xFF0C;&#x5426;&#x5219;&#x9700;&#x8981;&#x5728;&#x6784;&#x9020;&#x51FD;&#x6570;&#x521D;&#x59CB;&#x5316;
            private set
    }

    override fun onCreate() {
        super.onCreate()
        instance = this
    }

}
</code></pre>]]></content>
    
    <summary type="html">
    
      单例模式是一种常见的设计模式，它确保某个类只有一个实例，而且自行实例化并向整个系统提供这个实例。单例模式的写法有好几种，Kotlin中如何实现呢？
    
    </summary>
    
      <category term="移动开发" scheme="http://ngudream.com/categories/%E7%A7%BB%E5%8A%A8%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="Android" scheme="http://ngudream.com/tags/Android/"/>
    
      <category term="Kotlin" scheme="http://ngudream.com/tags/Kotlin/"/>
    
  </entry>
  
  <entry>
    <title>Java 面试题之算法</title>
    <link href="http://ngudream.com/2017/05/31/java-interview-algorithm/"/>
    <id>http://ngudream.com/2017/05/31/java-interview-algorithm/</id>
    <published>2017-05-31T12:18:54.000Z</published>
    <updated>2017-06-27T14:25:57.065Z</updated>
    
    <content type="html"><![CDATA[<h2 id="&#x5E38;&#x89C1;&#x6392;&#x5E8F;&#x7B97;&#x6CD5;"><a class="header-anchor" href="#&#x5E38;&#x89C1;&#x6392;&#x5E8F;&#x7B97;&#x6CD5;"></a>&#x5E38;&#x89C1;&#x6392;&#x5E8F;&#x7B97;&#x6CD5;</h2>
<p>&#x5728;&#x8BA1;&#x7B97;&#x673A;&#x79D1;&#x5B66;&#x4E0E;&#x6570;&#x5B66;&#x4E2D;&#xFF0C;&#x4E00;&#x4E2A;&#x6392;&#x5E8F;&#x7B97;&#x6CD5;&#xFF08;Sorting algorithm&#xFF09;&#x662F;&#x4E00;&#x79CD;&#x80FD;&#x5C06;&#x4E00;&#x4E32;&#x6570;&#x636E;&#x4F9D;&#x7167;&#x7279;&#x5B9A;&#x6392;&#x5E8F;&#x65B9;&#x5F0F;&#x7684;&#x4E00;&#x79CD;&#x7B97;&#x6CD5;&#x3002;&#x6700;&#x5E38;&#x7528;&#x5230;&#x7684;&#x6392;&#x5E8F;&#x65B9;&#x5F0F;&#x662F;&#x6570;&#x503C;&#x987A;&#x5E8F;&#x4EE5;&#x53CA;&#x5B57;&#x5178;&#x987A;&#x5E8F;&#x3002;&#x6709;&#x6548;&#x7684;&#x6392;&#x5E8F;&#x7B97;&#x6CD5;&#x5728;&#x4E00;&#x4E9B;&#x7B97;&#x6CD5;&#xFF08;&#x4F8B;&#x5982;&#x641C;&#x7D22;&#x7B97;&#x6CD5;&#x4E0E;&#x5408;&#x5E76;&#x7B97;&#x6CD5;&#xFF09;&#x4E2D;&#x662F;&#x91CD;&#x8981;&#x7684;&#xFF0C;&#x5982;&#x6B64;&#x8FD9;&#x4E9B;&#x7B97;&#x6CD5;&#x624D;&#x80FD;&#x5F97;&#x5230;&#x6B63;&#x786E;&#x89E3;&#x7B54;&#x3002;&#x6392;&#x5E8F;&#x7B97;&#x6CD5;&#x4E5F;&#x7528;&#x5728;&#x5904;&#x7406;&#x6587;&#x5B57;&#x6570;&#x636E;&#x4EE5;&#x53CA;&#x4EA7;&#x751F;&#x4EBA;&#x7C7B;&#x53EF;&#x8BFB;&#x7684;&#x8F93;&#x51FA;&#x7ED3;&#x679C;&#x3002;&#x57FA;&#x672C;&#x4E0A;&#xFF0C;&#x6392;&#x5E8F;&#x7B97;&#x6CD5;&#x7684;&#x8F93;&#x51FA;&#x5FC5;&#x987B;&#x9075;&#x5B88;&#x4E0B;&#x5217;&#x4E24;&#x4E2A;&#x539F;&#x5219;&#xFF1A;<br>
&#x2022;	&#x8F93;&#x51FA;&#x7ED3;&#x679C;&#x4E3A;&#x9012;&#x589E;&#x4E32;&#x884C;&#xFF08;&#x9012;&#x589E;&#x662F;&#x9488;&#x5BF9;&#x6240;&#x9700;&#x7684;&#x6392;&#x5E8F;&#x987A;&#x5E8F;&#x800C;&#x8A00;&#xFF09;<br>
&#x2022;	&#x8F93;&#x51FA;&#x7ED3;&#x679C;&#x662F;&#x539F;&#x8F93;&#x5165;&#x7684;&#x4E00;&#x79CD;&#x6392;&#x5217;&#x3001;&#x6216;&#x662F;&#x91CD;&#x7EC4;</p>
<p><strong>&#x5206;&#x7C7B;&#xFF1A;</strong></p>
<p>&#x4E3B;&#x8981;&#x6709;&#x4EE5;&#x4E0B;&#x51E0;&#x5927;&#x65B9;&#x9762;&#xFF1A;</p>
<p>&#x2022;	&#x8BA1;&#x7B97;&#x590D;&#x6742;&#x5EA6;&#xFF1A;&#x4E5F;&#x5C31;&#x662F;&#x65F6;&#x95F4;&#x590D;&#x6742;&#x5EA6;&#xFF0C;&#xFF08;&#x6700;&#x5DEE;&#x3001;&#x5E73;&#x5747;&#x3001;&#x548C;&#x6700;&#x597D;&#x6027;&#x80FD;&#xFF09;&#xFF0C;&#x4F9D;&#x636E;&#x5217;&#x8868;&#xFF08;list&#xFF09;&#x7684;&#x5927;&#x5C0F;&#xFF08;n&#xFF09;&#x3002;&#x4E00;&#x822C;&#x800C;&#x8A00;&#xFF0C;&#x597D;&#x7684;&#x6027;&#x80FD;&#x662F;O(n log n)&#xFF0C;&#x4E14;&#x574F;&#x7684;&#x884C;&#x4E3A;&#x662F;O(n2)<br>
&#x2022;	&#x5B58;&#x50A8;&#x5668;&#x4F7F;&#x7528;&#x91CF;&#xFF1A;&#x4E5F;&#x5C31;&#x662F;&#x7A7A;&#x95F4;&#x590D;&#x6742;&#x5EA6;<br>
&#x2022;	&#x7A33;&#x5B9A;&#x5EA6;&#xFF1A;&#x7A33;&#x5B9A;&#x6392;&#x5E8F;&#x7B97;&#x6CD5;&#x4F1A;&#x4F9D;&#x7167;&#x76F8;&#x7B49;&#x7684;&#x5173;&#x952E;&#xFF08;&#x6362;&#x8A00;&#x4E4B;&#x5C31;&#x662F;&#x503C;&#xFF09;&#x7EF4;&#x6301;&#x7EAA;&#x5F55;&#x7684;&#x76F8;&#x5BF9;&#x6B21;&#x5E8F;&#x3002;&#x4E5F;&#x5C31;&#x662F;&#x4E00;&#x4E2A;&#x6392;&#x5E8F;&#x7B97;&#x6CD5;&#x662F;&#x7A33;&#x5B9A;&#x7684;&#xFF0C;&#x5C31;&#x662F;&#x5F53;&#x6709;&#x4E24;&#x4E2A;&#x6709;&#x76F8;&#x7B49;&#x5173;&#x952E;&#x7684;&#x7EAA;&#x5F55;R&#x548C;S&#xFF0C;&#x4E14;&#x5728;&#x539F;&#x672C;&#x7684;&#x5217;&#x8868;&#x4E2D;R&#x51FA;&#x73B0;&#x5728;S&#x4E4B;&#x524D;&#xFF0C;&#x5728;&#x6392;&#x5E8F;&#x8FC7;&#x7684;&#x5217;&#x8868;&#x4E2D;R&#x4E5F;&#x5C06;&#x4F1A;&#x662F;&#x5728;S&#x4E4B;&#x524D;&#x3002;<br>
&#x2022;	&#x6392;&#x5E8F;&#x7279;&#x6027;&#xFF1A;&#x63D2;&#x5165;&#x3001;&#x4EA4;&#x6362;&#x3001;&#x9009;&#x62E9;&#x3001;&#x5408;&#x5E76;&#x7B49;&#x7B49;<br>
&#x2022;	&#x6392;&#x5E8F;&#x8303;&#x7574;&#xFF1A;&#x5185;&#x5B58;&#x6392;&#x5E8F;(&#x5185;&#x6392;)&#xFF0C;&#x5916;&#x5B58;&#x6392;&#x5E8F;&#xFF08;&#x5916;&#x6392;&#xFF09;<br>
&#x5177;&#x4F53;&#x5206;&#x4E3A;&#x4EE5;&#x4E0B;&#xFF1A;</p>
<div align="center">
<img data-original="/2017/05/31/java-interview-algorithm/algorithm.jpg" class="lazy">
</div>
<p><strong>&#x8BF4;&#x660E;&#xFF1A;</strong></p>
<p>&#x5F53;&#x539F;&#x8868;&#x6709;&#x5E8F;&#x6216;&#x57FA;&#x672C;&#x6709;&#x5E8F;&#x65F6;&#xFF0C;&#x76F4;&#x63A5;&#x63D2;&#x5165;&#x6392;&#x5E8F;&#x548C;&#x5192;&#x6CE1;&#x6392;&#x5E8F;&#x5C06;&#x5927;&#x5927;&#x51CF;&#x5C11;&#x6BD4;&#x8F83;&#x6B21;&#x6570;&#x548C;&#x79FB;&#x52A8;&#x8BB0;&#x5F55;&#x7684;&#x6B21;&#x6570;&#xFF0C;&#x65F6;&#x95F4;&#x590D;&#x6742;&#x5EA6;&#x53EF;&#x964D;&#x81F3;O&#xFF08;n&#xFF09;&#xFF1B;</p>
<p>&#x800C;&#x5FEB;&#x901F;&#x6392;&#x5E8F;&#x5219;&#x76F8;&#x53CD;&#xFF0C;&#x5F53;&#x539F;&#x8868;&#x57FA;&#x672C;&#x6709;&#x5E8F;&#x65F6;&#xFF0C;&#x5C06;&#x8715;&#x5316;&#x4E3A;&#x5192;&#x6CE1;&#x6392;&#x5E8F;&#xFF0C;&#x65F6;&#x95F4;&#x590D;&#x6742;&#x5EA6;&#x63D0;&#x9AD8;&#x4E3A;O&#xFF08;n2&#xFF09;&#xFF1B;</p>
<p>&#x539F;&#x8868;&#x662F;&#x5426;&#x6709;&#x5E8F;&#xFF0C;&#x5BF9;&#x7B80;&#x5355;&#x9009;&#x62E9;&#x6392;&#x5E8F;&#x3001;&#x5806;&#x6392;&#x5E8F;&#x3001;&#x5F52;&#x5E76;&#x6392;&#x5E8F;&#x548C;&#x57FA;&#x6570;&#x6392;&#x5E8F;&#x7684;&#x65F6;&#x95F4;&#x590D;&#x6742;&#x5EA6;&#x5F71;&#x54CD;&#x4E0D;&#x5927;&#x3002;</p>
<h3 id="&#x5192;&#x6CE1;&#x6392;&#x5E8F;"><a class="header-anchor" href="#&#x5192;&#x6CE1;&#x6392;&#x5E8F;"></a>&#x5192;&#x6CE1;&#x6392;&#x5E8F;</h3>
<p>&#x7B97;&#x6CD5;&#x6B65;&#x9AA4;&#xFF1A;</p>
<p>1&#xFF09;&#x6BD4;&#x8F83;&#x76F8;&#x90BB;&#x7684;&#x5143;&#x7D20;&#x3002;&#x5982;&#x679C;&#x7B2C;&#x4E00;&#x4E2A;&#x6BD4;&#x7B2C;&#x4E8C;&#x4E2A;&#x5927;&#xFF0C;&#x5C31;&#x4EA4;&#x6362;&#x4ED6;&#x4EEC;&#x4E24;&#x4E2A;&#x3002;</p>
<p>2&#xFF09;&#x5BF9;&#x6BCF;&#x4E00;&#x5BF9;&#x76F8;&#x90BB;&#x5143;&#x7D20;&#x4F5C;&#x540C;&#x6837;&#x7684;&#x5DE5;&#x4F5C;&#xFF0C;&#x4ECE;&#x5F00;&#x59CB;&#x7B2C;&#x4E00;&#x5BF9;&#x5230;&#x7ED3;&#x5C3E;&#x7684;&#x6700;&#x540E;&#x4E00;&#x5BF9;&#x3002;&#x8FD9;&#x6B65;&#x505A;&#x5B8C;&#x540E;&#xFF0C;&#x6700;&#x540E;&#x7684;&#x5143;&#x7D20;&#x4F1A;&#x662F;&#x6700;&#x5927;&#x7684;&#x6570;&#x3002;</p>
<p>3&#xFF09;&#x9488;&#x5BF9;&#x6240;&#x6709;&#x7684;&#x5143;&#x7D20;&#x91CD;&#x590D;&#x4EE5;&#x4E0A;&#x7684;&#x6B65;&#x9AA4;&#xFF0C;&#x9664;&#x4E86;&#x6700;&#x540E;&#x4E00;&#x4E2A;&#x3002;</p>
<p>4&#xFF09;&#x6301;&#x7EED;&#x6BCF;&#x6B21;&#x5BF9;&#x8D8A;&#x6765;&#x8D8A;&#x5C11;&#x7684;&#x5143;&#x7D20;&#x91CD;&#x590D;&#x4E0A;&#x9762;&#x7684;&#x6B65;&#x9AA4;&#xFF0C;&#x76F4;&#x5230;&#x6CA1;&#x6709;&#x4EFB;&#x4F55;&#x4E00;&#x5BF9;&#x6570;&#x5B57;&#x9700;&#x8981;&#x6BD4;&#x8F83;&#x3002;</p>
<p>&#x5192;&#x6CE1;&#x6392;&#x5E8F;&#x7684;&#x793A;&#x4F8B;&#xFF1A;</p>
<div align="center">
<img data-original="/2017/05/31/java-interview-algorithm/1342782078_9990.jpg" class="lazy">
</div>
<pre><code>package org.vanjor.sort;
 
public class BubbleSort implements Sorter {
 
    @Override
    public String getName() {
        return &quot;BubbleSort&quot;;
    }
    @Override
    public void sort(int[] array) {
        int temp;
        for (int i = 0; i &lt; array.length - 1; i++) {
            // &#x6BCF;&#x6B21;&#x5C06;&#x6700;&#x5C0F;&#x7684;&#x5192;&#x5230;&#x6700;&#x524D;&#x9762;
            for (int j = array.length - 1; j &gt; i; j--) {
                if (array[j - 1] &gt; array[j]) {
                    temp = array[j - 1];
                    array[j - 1] = array[j];
                    array[j] = temp;
                }
            }
        }
    }
}
</code></pre>
<h3 id="&#x63D2;&#x5165;&#x6392;&#x5E8F;"><a class="header-anchor" href="#&#x63D2;&#x5165;&#x6392;&#x5E8F;"></a>&#x63D2;&#x5165;&#x6392;&#x5E8F;</h3>
<p>&#x7B97;&#x6CD5;&#x6B65;&#x9AA4;&#xFF1A;</p>
<p>1&#xFF09;&#x5C06;&#x7B2C;&#x4E00;&#x5F85;&#x6392;&#x5E8F;&#x5E8F;&#x5217;&#x7B2C;&#x4E00;&#x4E2A;&#x5143;&#x7D20;&#x770B;&#x505A;&#x4E00;&#x4E2A;&#x6709;&#x5E8F;&#x5E8F;&#x5217;&#xFF0C;&#x628A;&#x7B2C;&#x4E8C;&#x4E2A;&#x5143;&#x7D20;&#x5230;&#x6700;&#x540E;&#x4E00;&#x4E2A;&#x5143;&#x7D20;&#x5F53;&#x6210;&#x662F;&#x672A;&#x6392;&#x5E8F;&#x5E8F;&#x5217;&#x3002;</p>
<p>2&#xFF09;&#x4ECE;&#x5934;&#x5230;&#x5C3E;&#x4F9D;&#x6B21;&#x626B;&#x63CF;&#x672A;&#x6392;&#x5E8F;&#x5E8F;&#x5217;&#xFF0C;&#x5C06;&#x626B;&#x63CF;&#x5230;&#x7684;&#x6BCF;&#x4E2A;&#x5143;&#x7D20;&#x63D2;&#x5165;&#x6709;&#x5E8F;&#x5E8F;&#x5217;&#x7684;&#x9002;&#x5F53;&#x4F4D;&#x7F6E;&#x3002;&#xFF08;&#x5982;&#x679C;&#x5F85;&#x63D2;&#x5165;&#x7684;&#x5143;&#x7D20;&#x4E0E;&#x6709;&#x5E8F;&#x5E8F;&#x5217;&#x4E2D;&#x7684;&#x67D0;&#x4E2A;&#x5143;&#x7D20;&#x76F8;&#x7B49;&#xFF0C;&#x5219;&#x5C06;&#x5F85;&#x63D2;&#x5165;&#x5143;&#x7D20;&#x63D2;&#x5165;&#x5230;&#x76F8;&#x7B49;&#x5143;&#x7D20;&#x7684;&#x540E;&#x9762;&#x3002;&#xFF09;</p>
<p>&#x63D2;&#x5165;&#x6392;&#x5E8F;&#x7684;&#x793A;&#x4F8B;&#xFF1A;</p>
<div align="center">
<img data-original="/2017/05/31/java-interview-algorithm/1342520948_8667.jpg" class="lazy">
</div>
<pre><code>package org.vanjor.sort;
 
public class InsertSort implements Sorter {
 
    @Override
    public String getName() {
        return &quot;InsertSort&quot;;
    }
 
    @Override
    public void sort(int[] array) {
        int temp;
        int j;
        // i&#x4E4B;&#x524D;&#x7684;&#x5B50;&#x4E32;&#x90FD;&#x662F;&#x5DF2;&#x7ECF;&#x6392;&#x5E8F;&#x597D;&#x4E86;
        for (int i = 1; i &lt; array.length; i++) {
            j = i;
            temp = array[j];
            // &#x5BF9;&#x5F53;&#x524D;&#x4F4D;&#x7F6E;j&#x7684;&#x6570;&#x5B57;&#x5728;&#x5DF2;&#x6392;&#x5E8F;&#x597D;&#x7684;&#x5B50;&#x4E32;&#x9009;&#x62E9;&#x5408;&#x9002;&#x7684;&#x4F4D;&#x7F6E;&#x63D2;&#x5165;
            while (j &gt; 0 &amp;&amp; temp &lt; array[j - 1]) {
                // &#x987A;&#x79FB;&#x76F4;&#x63A5;&#x5B58;&#x653E;
                array[j] = array[j - 1];
                j--;
            }
            // &#x9009;&#x62E9;&#x5230;&#x4F4D;&#x7F6E;&#xFF0C;&#x76F4;&#x63A5;&#x5B58;&#x653E;&#x5F52;&#x961F;
            array[j] = temp;
        }
    }
}
</code></pre>
<h3 id="&#x6298;&#x534A;&#x63D2;&#x5165;&#x6392;&#x5E8F;"><a class="header-anchor" href="#&#x6298;&#x534A;&#x63D2;&#x5165;&#x6392;&#x5E8F;"></a>&#x6298;&#x534A;&#x63D2;&#x5165;&#x6392;&#x5E8F;</h3>
<p>&#x76F8;&#x6BD4;&#x7B80;&#x5355;&#x63D2;&#x5165;&#x6392;&#x5E8F;&#xFF0C;&#x6298;&#x534A;&#x63D2;&#x5165;&#x5728;&#x5DF2;&#x6392;&#x5E8F;&#x4E2D;&#x5BFB;&#x627E;&#x63D2;&#x5165;&#x4F4D;&#x7F6E;&#x7528;&#x6298;&#x534A;&#x67E5;&#x627E;&#xFF1A;</p>
<pre><code>package org.vanjor.sort;
 
public class HalfInsertSort implements Sorter {
    @Override
    public String getName() {
        return &quot;HalfInsertSort&quot;;
    }
 
    @Override
    public void sort(int[] array) {
        for (int i = 1; i &lt; array.length; i++) {
            // &#x4E8C;&#x5206;&#x67E5;&#x627E;&#x5BFB;&#x627E;&#x6700;&#x4F73;&#x63D2;&#x5165;&#x4F4D;&#x7F6E;
            int low = 0, high = i - 1;
            while (low &lt;= high) {
                int middle = (low + high) / 2;
                if (array[middle] &gt; array[i]) {
                    high = middle - 1;
                } else {
                    low = middle + 1;
                }
            }
            // &#x987A;&#x79FB;&#x5E76;&#x63D2;&#x5165;
            int cursor = i;
            int temp = array[i];
            while (cursor &gt; low) {
                array[cursor] = array[cursor - 1];
                cursor--;
            }
            array[cursor] = temp;
        }
    }
}
</code></pre>
<h3 id="&#x9009;&#x62E9;&#x6392;&#x5E8F;"><a class="header-anchor" href="#&#x9009;&#x62E9;&#x6392;&#x5E8F;"></a>&#x9009;&#x62E9;&#x6392;&#x5E8F;</h3>
<p>&#x7B97;&#x6CD5;&#x6B65;&#x9AA4;&#xFF1A;</p>
<p>1&#xFF09;&#x9996;&#x5148;&#x5728;&#x672A;&#x6392;&#x5E8F;&#x5E8F;&#x5217;&#x4E2D;&#x627E;&#x5230;&#x6700;&#x5C0F;&#xFF08;&#x5927;&#xFF09;&#x5143;&#x7D20;&#xFF0C;&#x5B58;&#x653E;&#x5230;&#x6392;&#x5E8F;&#x5E8F;&#x5217;&#x7684;&#x8D77;&#x59CB;&#x4F4D;&#x7F6E;</p>
<p>2&#xFF09;&#x518D;&#x4ECE;&#x5269;&#x4F59;&#x672A;&#x6392;&#x5E8F;&#x5143;&#x7D20;&#x4E2D;&#x7EE7;&#x7EED;&#x5BFB;&#x627E;&#x6700;&#x5C0F;&#xFF08;&#x5927;&#xFF09;&#x5143;&#x7D20;&#xFF0C;&#x7136;&#x540E;&#x653E;&#x5230;&#x5DF2;&#x6392;&#x5E8F;&#x5E8F;&#x5217;&#x7684;&#x672B;&#x5C3E;&#x3002;</p>
<p>3&#xFF09;&#x91CD;&#x590D;&#x7B2C;&#x4E8C;&#x6B65;&#xFF0C;&#x76F4;&#x5230;&#x6240;&#x6709;&#x5143;&#x7D20;&#x5747;&#x6392;&#x5E8F;&#x5B8C;&#x6BD5;&#x3002;</p>
<p>&#x9009;&#x62E9;&#x6392;&#x5E8F;&#x7684;&#x793A;&#x4F8B;&#xFF1A;</p>
<div align="center">
<img data-original="/2017/05/31/java-interview-algorithm/1342586432_7130.jpg" class="lazy">
</div>
<pre><code>package org.vanjor.sort;
 
public class SelectSort implements Sorter {
 
    @Override
    public String getName(){
        return &quot;SelectSort&quot;;
    }
 
    @Override
    public void sort(int[] array) {
        int cursor;
        int temp;
        for (int i = 0; i &lt; array.length - 1; i++) {
            //&#x901A;&#x8FC7;&#x6BD4;&#x8F83;&#x9009;&#x51FA;&#x6700;&#x5C0F;&#x503C;&#x7684;&#x6E38;&#x6807;&#xFF0C;&#x6700;&#x540E;&#x624D;&#x4EA4;&#x6362;
            cursor = i;
            for (int j = i + 1; j &lt; array.length; j++) {
                if (array[j] &lt; array[cursor]) {
                    cursor = j;
                }
            }
            if(cursor!=i){
                temp = array[i];
                array[i] = array[cursor];
                array[cursor] = temp;
            }
        }
    }
 
}
</code></pre>
<h3 id="&#x5FEB;&#x901F;&#x6392;&#x5E8F;"><a class="header-anchor" href="#&#x5FEB;&#x901F;&#x6392;&#x5E8F;"></a>&#x5FEB;&#x901F;&#x6392;&#x5E8F;</h3>
<p>&#x7B97;&#x6CD5;&#x6B65;&#x9AA4;&#xFF1A;</p>
<ol>
<li>
<p>&#x4ECE;&#x6570;&#x5217;&#x4E2D;&#x6311;&#x51FA;&#x4E00;&#x4E2A;&#x5143;&#x7D20;&#xFF0C;&#x79F0;&#x4E3A; &#x201C;&#x57FA;&#x51C6;&#x201D;&#xFF08;pivot&#xFF09;&#xFF0C;</p>
</li>
<li>
<p>&#x91CD;&#x65B0;&#x6392;&#x5E8F;&#x6570;&#x5217;&#xFF0C;&#x6240;&#x6709;&#x5143;&#x7D20;&#x6BD4;&#x57FA;&#x51C6;&#x503C;&#x5C0F;&#x7684;&#x6446;&#x653E;&#x5728;&#x57FA;&#x51C6;&#x524D;&#x9762;&#xFF0C;&#x6240;&#x6709;&#x5143;&#x7D20;&#x6BD4;&#x57FA;&#x51C6;&#x503C;&#x5927;&#x7684;&#x6446;&#x5728;&#x57FA;&#x51C6;&#x7684;&#x540E;&#x9762;&#xFF08;&#x76F8;&#x540C;&#x7684;&#x6570;&#x53EF;&#x4EE5;&#x5230;&#x4EFB;&#x4E00;&#x8FB9;&#xFF09;&#x3002;&#x5728;&#x8FD9;&#x4E2A;&#x5206;&#x533A;&#x9000;&#x51FA;&#x4E4B;&#x540E;&#xFF0C;&#x8BE5;&#x57FA;&#x51C6;&#x5C31;&#x5904;&#x4E8E;&#x6570;&#x5217;&#x7684;&#x4E2D;&#x95F4;&#x4F4D;&#x7F6E;&#x3002;&#x8FD9;&#x4E2A;&#x79F0;&#x4E3A;&#x5206;&#x533A;&#xFF08;partition&#xFF09;&#x64CD;&#x4F5C;&#x3002;</p>
</li>
<li>
<p>&#x9012;&#x5F52;&#x5730;&#xFF08;recursive&#xFF09;&#x628A;&#x5C0F;&#x4E8E;&#x57FA;&#x51C6;&#x503C;&#x5143;&#x7D20;&#x7684;&#x5B50;&#x6570;&#x5217;&#x548C;&#x5927;&#x4E8E;&#x57FA;&#x51C6;&#x503C;&#x5143;&#x7D20;&#x7684;&#x5B50;&#x6570;&#x5217;&#x6392;&#x5E8F;&#x3002;</p>
</li>
</ol>
<p>&#x9012;&#x5F52;&#x7684;&#x6700;&#x5E95;&#x90E8;&#x60C5;&#x5F62;&#xFF0C;&#x662F;&#x6570;&#x5217;&#x7684;&#x5927;&#x5C0F;&#x662F;&#x96F6;&#x6216;&#x4E00;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x6C38;&#x8FDC;&#x90FD;&#x5DF2;&#x7ECF;&#x88AB;&#x6392;&#x5E8F;&#x597D;&#x4E86;&#x3002;&#x867D;&#x7136;&#x4E00;&#x76F4;&#x9012;&#x5F52;&#x4E0B;&#x53BB;&#xFF0C;&#x4F46;&#x662F;&#x8FD9;&#x4E2A;&#x7B97;&#x6CD5;&#x603B;&#x4F1A;&#x9000;&#x51FA;&#xFF0C;&#x56E0;&#x4E3A;&#x5728;&#x6BCF;&#x6B21;&#x7684;&#x8FED;&#x4EE3;&#xFF08;iteration&#xFF09;&#x4E2D;&#xFF0C;&#x5B83;&#x81F3;&#x5C11;&#x4F1A;&#x628A;&#x4E00;&#x4E2A;&#x5143;&#x7D20;&#x6446;&#x5230;&#x5B83;&#x6700;&#x540E;&#x7684;&#x4F4D;&#x7F6E;&#x53BB;&#x3002;</p>
<p>&#x5FEB;&#x901F;&#x6392;&#x5E8F;&#x7684;&#x793A;&#x4F8B;&#xFF1A;</p>
<p>&#xFF08;a&#xFF09;&#x4E00;&#x8D9F;&#x6392;&#x5E8F;&#x7684;&#x8FC7;&#x7A0B;&#xFF1A;</p>
<div align="center">
<img data-original="/2017/05/31/java-interview-algorithm/1342782317_4426.jpg" class="lazy">
</div>
<p>&#xFF08;b&#xFF09;&#x6392;&#x5E8F;&#x7684;&#x5168;&#x8FC7;&#x7A0B;</p>
<div align="center">
<img data-original="/2017/05/31/java-interview-algorithm/1342782329_8314.jpg" class="lazy">
</div>
<pre><code>package org.vanjor.sort;
 
public class QuickSort implements Sorter {
 
    @Override
    public String getName() {
        return &quot;QuickSort&quot;;
    }
 
    @Override
    public void sort(int[] array) {
        if (array == null || array.length == 0) {
            return;
        }
        sort(array, 0, array.length - 1);
    }
 
    /**
     * &#x9012;&#x5F52;&#x5F0F;&#xFF0C;&#x5BF9;array&#x4E2D;&#x7684;start&#x5230;end&#x533A;&#x57DF;&#x8FDB;&#x884C;&#x5FEB;&#x6392;
     *
     * @param array
     * @param start
     * @param end
     */
    private void sort(int[] array, int start, int end) {
        // &#x9012;&#x5F52;&#x7EC8;&#x6B62;&#x6761;&#x4EF6;
        if (start &gt;= end) {
            return;
        }
 
        int low = start;
        int high = end;
        // &#x9009;&#x62E9;&#x5F53;&#x524D;&#x5B50;&#x6570;&#x7EC4;&#x7B2C;&#x4E00;&#x4E2A;&#x6570;&#x4E3A;&#x65D7;&#x5E1C;
        int flag = array[low];
        while (low &lt; high) {
 
            while (low &lt; high &amp;&amp; array[high] &gt;= flag) {
                high--;
            }
            array[low] = array[high];
 
            while (low &lt; high &amp;&amp; array[low] &lt;= flag) {
                low++;
            }
            array[high] = array[low];
        }
        // &#x6B64;&#x65F6;low&#x7684;&#x4F4D;&#x7F6E;&#x4E3A;&#x65D7;&#x5E1C;&#x7684;&#x6700;&#x7EC8;&#x6B63;&#x786E;&#x4F4D;&#x7F6E;
        array[low] = flag;
 
        // &#x9012;&#x5F52;&#x5BF9;&#x65D7;&#x5E1C;&#x7684;&#x4E24;&#x8FB9;&#x8FDB;&#x884C;&#x6392;&#x5E8F;&#xFF0C;&#x8FD9;&#x662F;low=high
        sort(array, start, low - 1);
        sort(array, high + 1, end);
    }
}
</code></pre>
<h3 id="&#x5E0C;&#x5C14;&#x6392;&#x5E8F;"><a class="header-anchor" href="#&#x5E0C;&#x5C14;&#x6392;&#x5E8F;"></a>&#x5E0C;&#x5C14;&#x6392;&#x5E8F;</h3>
<p>&#x76F8;&#x6BD4;&#x5192;&#x6CE1;&#x6392;&#x5E8F;&#xFF0C;&#x76F8;&#x90BB;&#x6BD4;&#x8F83;&#xFF0C;&#x5E0C;&#x5C14;&#x662F;&#x9009;&#x62E9;&#x4E00;&#x5B9A;&#x95F4;&#x9694;&#x7684;&#x8FDB;&#x884C;&#x6BD4;&#x8F83;&#xFF0C;&#x95F4;&#x9694;&#x9010;&#x6E10;&#x7F29;&#x77ED;&#xFF0C;&#x6700;&#x7EC8;&#x505A;&#x5230;&#x6709;&#x5E8F;&#xFF0C;&#x76F8;&#x6BD4;&#x5192;&#x6CE1;&#x6392;&#x5E8F;&#xFF0C;&#x51CF;&#x5C11;&#x4E86;&#x6BD4;&#x8F83;&#x4EA4;&#x6362;&#x7684;&#x6B21;&#x6570;&#x3002;</p>
<p>&#x7B97;&#x6CD5;&#x6B65;&#x9AA4;&#xFF1A;</p>
<p>1&#xFF09;&#x9009;&#x62E9;&#x4E00;&#x4E2A;&#x589E;&#x91CF;&#x5E8F;&#x5217;t1&#xFF0C;t2&#xFF0C;&#x2026;&#xFF0C;tk&#xFF0C;&#x5176;&#x4E2D;ti&gt;tj&#xFF0C;tk=1&#xFF1B;</p>
<p>2&#xFF09;&#x6309;&#x589E;&#x91CF;&#x5E8F;&#x5217;&#x4E2A;&#x6570;k&#xFF0C;&#x5BF9;&#x5E8F;&#x5217;&#x8FDB;&#x884C;k &#x8D9F;&#x6392;&#x5E8F;&#xFF1B;</p>
<p>3&#xFF09;&#x6BCF;&#x8D9F;&#x6392;&#x5E8F;&#xFF0C;&#x6839;&#x636E;&#x5BF9;&#x5E94;&#x7684;&#x589E;&#x91CF;ti&#xFF0C;&#x5C06;&#x5F85;&#x6392;&#x5E8F;&#x5217;&#x5206;&#x5272;&#x6210;&#x82E5;&#x5E72;&#x957F;&#x5EA6;&#x4E3A;m &#x7684;&#x5B50;&#x5E8F;&#x5217;&#xFF0C;&#x5206;&#x522B;&#x5BF9;&#x5404;&#x5B50;&#x8868;&#x8FDB;&#x884C;&#x76F4;&#x63A5;&#x63D2;&#x5165;&#x6392;&#x5E8F;&#x3002;&#x4EC5;&#x589E;&#x91CF;&#x56E0;&#x5B50;&#x4E3A;1 &#x65F6;&#xFF0C;&#x6574;&#x4E2A;&#x5E8F;&#x5217;&#x4F5C;&#x4E3A;&#x4E00;&#x4E2A;&#x8868;&#x6765;&#x5904;&#x7406;&#xFF0C;&#x8868;&#x957F;&#x5EA6;&#x5373;&#x4E3A;&#x6574;&#x4E2A;&#x5E8F;&#x5217;&#x7684;&#x957F;&#x5EA6;&#x3002;</p>
<p>&#x5E0C;&#x5C14;&#x6392;&#x5E8F;&#x7684;&#x793A;&#x4F8B;&#xFF1A;</p>
<div align="center">
<img data-original="/2017/05/31/java-interview-algorithm/1342577299_5077.jpg" class="lazy">
</div>
<pre><code>package org.vanjor.sort;
 
public class ShellSort implements Sorter {
 
    @Override
    public String getName() {
        return &quot;ShellSort&quot;;
    }
 
    @Override
    public void sort(int[] array) {
        int temp;
        int inc = array.length / 2;
        while (inc &gt;= 2) {
            for (int cursor = 0; cursor &lt;= array.length - 1 - inc; cursor++) {
                if (array[cursor] &gt; array[cursor + inc]) {
                    temp = array[cursor];
                    array[cursor] = array[cursor + inc];
                    array[cursor + inc] = temp;
                }
 
            }
            // &#x6B65;&#x957F;&#x5E8F;&#x5217;&#x6BCF;&#x6B21;&#x9664;2
            inc /= 2;
        }
 
        // &#x6700;&#x540E;&#x6B65;&#x957F;&#x4E3A;1&#xFF0C;&#x77E5;&#x9053;&#x68C0;&#x67E5;&#x65E0;&#x66F4;&#x6539;&#xFF0C;&#x5373;&#x9000;&#x51FA;&#x5FAA;&#x73AF;
        boolean tag = true;
        while (tag) {
            tag = false;
            for (int cursor = 0; cursor &lt; array.length - 1; cursor++) {
                if (array[cursor] &gt; array[cursor + 1]) {
                    temp = array[cursor];
                    array[cursor] = array[cursor + 1];
                    array[cursor + 1] = temp;
                    tag = true;
                }
            }
        }
    }
}
</code></pre>
<h3 id="&#x5F52;&#x5E76;&#x6392;&#x5E8F;"><a class="header-anchor" href="#&#x5F52;&#x5E76;&#x6392;&#x5E8F;"></a>&#x5F52;&#x5E76;&#x6392;&#x5E8F;</h3>
<p>&#x7B97;&#x6CD5;&#x6B65;&#x9AA4;&#xFF1A;</p>
<p>1)&#x7533;&#x8BF7;&#x7A7A;&#x95F4;&#xFF0C;&#x4F7F;&#x5176;&#x5927;&#x5C0F;&#x4E3A;&#x4E24;&#x4E2A;&#x5DF2;&#x7ECF;&#x6392;&#x5E8F;&#x5E8F;&#x5217;&#x4E4B;&#x548C;&#xFF0C;&#x8BE5;&#x7A7A;&#x95F4;&#x7528;&#x6765;&#x5B58;&#x653E;&#x5408;&#x5E76;&#x540E;&#x7684;&#x5E8F;&#x5217;</p>
<p>2)&#x8BBE;&#x5B9A;&#x4E24;&#x4E2A;&#x6307;&#x9488;&#xFF0C;&#x6700;&#x521D;&#x4F4D;&#x7F6E;&#x5206;&#x522B;&#x4E3A;&#x4E24;&#x4E2A;&#x5DF2;&#x7ECF;&#x6392;&#x5E8F;&#x5E8F;&#x5217;&#x7684;&#x8D77;&#x59CB;&#x4F4D;&#x7F6E;</p>
<p>3)&#x6BD4;&#x8F83;&#x4E24;&#x4E2A;&#x6307;&#x9488;&#x6240;&#x6307;&#x5411;&#x7684;&#x5143;&#x7D20;&#xFF0C;&#x9009;&#x62E9;&#x76F8;&#x5BF9;&#x5C0F;&#x7684;&#x5143;&#x7D20;&#x653E;&#x5165;&#x5230;&#x5408;&#x5E76;&#x7A7A;&#x95F4;&#xFF0C;&#x5E76;&#x79FB;&#x52A8;&#x6307;&#x9488;&#x5230;&#x4E0B;&#x4E00;&#x4F4D;&#x7F6E;</p>
<p>4)&#x91CD;&#x590D;&#x6B65;&#x9AA4;3&#x76F4;&#x5230;&#x67D0;&#x4E00;&#x6307;&#x9488;&#x8FBE;&#x5230;&#x5E8F;&#x5217;&#x5C3E;</p>
<p>5)&#x5C06;&#x53E6;&#x4E00;&#x5E8F;&#x5217;&#x5269;&#x4E0B;&#x7684;&#x6240;&#x6709;&#x5143;&#x7D20;&#x76F4;&#x63A5;&#x590D;&#x5236;&#x5230;&#x5408;&#x5E76;&#x5E8F;&#x5217;&#x5C3E;</p>
<p>&#x5F52;&#x5E76;&#x6392;&#x5E8F;&#x7684;&#x793A;&#x4F8B;&#xFF1A;</p>
<div align="center">
<img data-original="/2017/05/31/java-interview-algorithm/1342842633_6751.jpg" class="lazy">
</div>
<pre><code>package org.vanjor.sort;
 
public class MergeSort implements Sorter {
 
    @Override
    public String getName(){
        return &quot;MergeSort&quot;;
    }
    @Override
    public void sort(int[] array) {
        int[] tempArray = new int[array.length];
        mergeSort(array, tempArray, 0, array.length - 1);
    }
 
    /**
     * &#x4E0D;&#x65AD;&#x5206;&#x5272;&#xFF0C;&#x518D;&#x5408;&#x5E76;&#xFF0C;&#x9012;&#x5F52;&#x6C42;&#x89E3;
     */
    private void mergeSort(int[] array, int[] tempArray, int start, int end) {
        // &#x9012;&#x5F52;&#x7EC8;&#x6B62;&#x6761;&#x4EF6;&#xFF0C;&#x6700;&#x7EC8;&#x7C92;&#x5EA6;&#x4E3A;1
        if (end &lt;= start) {
            return;
        }
        // &#x8FD9;&#x91CC;&#x4FDD;&#x8BC1;&#x4E86;start&lt;=middle,middle+1&lt;=end
        int middle = (start + end) / 2;
        // &#x4ECE;middle&#x5206;&#x4E24;&#x90E8;&#x5206;&#xFF0C;&#x6BCF;&#x4E00;&#x90E8;&#x5206;&#x6392;&#x5E8F;&#x540E;&#xFF0C;&#x518D;&#x5408;&#x5E76;&#x6392;&#x5E8F;
        mergeSort(array, tempArray, start, middle);
        mergeSort(array, tempArray, middle + 1, end);
        // &#x5408;&#x5E76;
        merge(array, tempArray, start, middle, end);
    }
 
&#x3000;&#x3000;/**
    * &#x5C06;&#x4E24;&#x4E2A;&#x6709;&#x5E8F;&#x6570;&#x7EC4;&#x5408;&#x5E76;&#xFF0C;&#x4E24;&#x6570;&#x7EC4;&#x7684;&#x4F4D;&#x7F6E;&#x5206;&#x522B;&#x4E3A;start-&gt;middle,middle+1-&gt;end
    */
    private void merge(int[] array, int[] tempArray, int start, int middle, int end) {
    	int i = start, j = middle + 1;
    	int m = middle, n = end;
    	int k = start;

    	//&#x5C06;&#x4E24;&#x76F8;&#x90BB;&#x5B50;&#x6570;&#x7EC4;&#x5408;&#x5E76;&#x5230;&#x4E34;&#x65F6;&#x6570;&#x7EC4;&#x4E2D;
    	while (i &lt;= m &amp;&amp; j &lt;= n){
	     	if (array[i] &lt;= array[j]) {
	        	tempArray[k++] = array[i++];
	        } else {
	        	tempArray[k++] = array[j++];
	        }
        }

        //&#x5BF9;&#x5269;&#x4F59;&#x7684;&#x90E8;&#x5206;&#x76F4;&#x63A5;&#x590D;&#x5236;
        while (i &lt;= m) {
        	tempArray[k++] = array[i++];
        }

        while (j &lt;= n) {
        	tempArray[k++] = array[j++];
        }

        //&#x5C06;&#x4E34;&#x65F6;&#x6570;&#x636E;&#x4E2D;&#x6309;&#x4F4D;&#x7F6E;&#x62F7;&#x8D1D;&#x56DE;
        for (i = 0; i &lt; k; i++) {
        	array[start + i] = tempArray[i];
        }
    }
}
</code></pre>
<h3 id="&#x5806;&#x6392;&#x5E8F;"><a class="header-anchor" href="#&#x5806;&#x6392;&#x5E8F;"></a>&#x5806;&#x6392;&#x5E8F;</h3>
<p>&#x8FD0;&#x7528;&#x5806;&#x7684;&#x7279;&#x6027;&#xFF0C;&#x7279;&#x6B8A;&#x7684;&#x4E8C;&#x53C9;&#x6811;&#xFF0C;&#x9876;&#x70B9;&#x6BD4;&#x4E24;&#x4E2A;&#x5B69;&#x5B50;&#x8981;&#x4E48;&#x90FD;&#x5927;&#xFF08;&#x5927;&#x9876;&#x5806;&#xFF09;&#xFF0C;&#x8981;&#x4E48;&#x90FD;&#x5C0F;&#xFF08;&#x5C0F;&#x9876;&#x5806;&#xFF09;&#xFF0C;&#x5BF9;&#x4E8E;&#x6570;&#x7EC4;&#x521D;&#x59CB;&#x5316;&#x6784;&#x5EFA;&#x540E;&#xFF0C;&#x4E5F;&#x662F;&#x4E00;&#x4E2A;&#x5B8C;&#x5168;&#x4E8C;&#x53C9;&#x6811;&#xFF0C;&#x5E8F;&#x53F7;&#x4E3A;p&#x7684;&#x4E24;&#x4E2A;&#x5B69;&#x5B50;&#x4E3A;2p&#x4E0E;2p+1&#xFF0C;&#x5148;n/2&#x8F6E;&#x6B21;&#xFF08;&#x4ECE;&#x6700;&#x5E95;&#x7AEF;&#x975E;&#x53F6;&#x5B50;&#x8282;&#x70B9;&#x5F00;&#x59CB;&#xFF09;&#x5EFA;&#x5806;&#xFF0C;&#x7136;&#x540E;&#x6BCF;&#x6B21;&#x53D6;&#x5806;&#x9876;&#xFF0C;&#x540E;&#x8C03;&#x6574;&#x5806;&#xFF0C;&#x6700;&#x7EC8;&#x5B8C;&#x6210;&#x6709;&#x5E8F;&#x6392;&#x5E8F;&#x3002;</p>
<p>&#x5806;&#x6392;&#x5E8F;&#x7B97;&#x6CD5;&#x7684;&#x57FA;&#x672C;&#x601D;&#x60F3;&#x662F;&#xFF0C;&#x5C06;&#x6570;&#x7EC4;A&#x521B;&#x5EFA;&#x4E3A;&#x4E00;&#x4E2A;&#x6700;&#x5927;&#x5806;&#xFF0C;&#x7136;&#x540E;&#x4EA4;&#x6362;&#x5806;&#x7684;&#x6839;(&#x6700;&#x5927;&#x5143;&#x7D20;)&#x548C;&#x6700;&#x540E;&#x4E00;&#x4E2A;&#x53F6;&#x8282;&#x70B9;x&#xFF0C;&#x5C06;x&#x4ECE;&#x5806;&#x4E2D;&#x53BB;&#x6389;&#x5F62;&#x6210;&#x65B0;&#x7684;&#x5806;A1&#xFF0C;&#x7136;&#x540E;&#x91CD;&#x590D;&#x4EE5;&#x4E0A;&#x52A8;&#x4F5C;&#xFF0C;&#x76F4;&#x5230;&#x5806;&#x4E2D;&#x53EA;&#x6709;&#x4E00;&#x4E2A;&#x8282;&#x70B9;&#x3002;</p>
<p>&#x7B97;&#x6CD5;&#x6B65;&#x9AA4;&#xFF1A;</p>
<p>1&#xFF09;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x5806;H[0&#x2026;n-1]</p>
<p>2&#xFF09;&#x628A;&#x5806;&#x9996;&#xFF08;&#x6700;&#x5927;&#x503C;&#xFF09;&#x548C;&#x5806;&#x5C3E;&#x4E92;&#x6362;</p>
<p>3&#xFF09;&#x628A;&#x5806;&#x7684;&#x5C3A;&#x5BF8;&#x7F29;&#x5C0F;1&#xFF0C;&#x5E76;&#x8C03;&#x7528;shift_down(0),&#x76EE;&#x7684;&#x662F;&#x628A;&#x65B0;&#x7684;&#x6570;&#x7EC4;&#x9876;&#x7AEF;&#x6570;&#x636E;&#x8C03;&#x6574;&#x5230;&#x76F8;&#x5E94;&#x4F4D;&#x7F6E;</p>
<p>4&#xFF09;&#x91CD;&#x590D;&#x6B65;&#x9AA4;2&#xFF0C;&#x76F4;&#x5230;&#x5806;&#x7684;&#x5C3A;&#x5BF8;&#x4E3A;1</p>
<p>&#x6839;&#x7ED3;&#x70B9;&#xFF08;&#x5806;&#x9876;&#x5143;&#x7D20;&#xFF09;&#x7684;&#x503C;&#x662F;&#x6700;&#x5C0F;(&#x6216;&#x6700;&#x5927;)&#xFF1A;</p>
<p>&#xFF08;a&#xFF09;&#x5927;&#x9876;&#x5806;&#x5E8F;&#x5217;&#xFF1A;&#xFF08;96, 83,27,38,11,09)</p>
<p>&#xFF08;b&#xFF09;&#x5C0F;&#x9876;&#x5806;&#x5E8F;&#x5217;&#xFF1A;&#xFF08;12&#xFF0C;36&#xFF0C;24&#xFF0C;85&#xFF0C;47&#xFF0C;30&#xFF0C;53&#xFF0C;91&#xFF09;</p>
<div align="center">
<img data-original="/2017/05/31/java-interview-algorithm/1342592355_2560.jpg" class="lazy">
</div>
<p>&#x8C03;&#x6574;&#x5C0F;&#x9876;&#x5806;&#x7684;&#x65B9;&#x6CD5;&#xFF1A;</p>
<p>1&#xFF09;&#x8BBE;&#x6709;m &#x4E2A;&#x5143;&#x7D20;&#x7684;&#x5806;&#xFF0C;&#x8F93;&#x51FA;&#x5806;&#x9876;&#x5143;&#x7D20;&#x540E;&#xFF0C;&#x5269;&#x4E0B;m-1 &#x4E2A;&#x5143;&#x7D20;&#x3002;&#x5C06;&#x5806;&#x5E95;&#x5143;&#x7D20;&#x9001;&#x5165;&#x5806;&#x9876;&#xFF08;&#xFF08;&#x6700;&#x540E;&#x4E00;&#x4E2A;&#x5143;&#x7D20;&#x4E0E;&#x5806;&#x9876;&#x8FDB;&#x884C;&#x4EA4;&#x6362;&#xFF09;&#xFF0C;&#x5806;&#x88AB;&#x7834;&#x574F;&#xFF0C;&#x5176;&#x539F;&#x56E0;&#x4EC5;&#x662F;&#x6839;&#x7ED3;&#x70B9;&#x4E0D;&#x6EE1;&#x8DB3;&#x5806;&#x7684;&#x6027;&#x8D28;&#x3002;</p>
<p>2&#xFF09;&#x5C06;&#x6839;&#x7ED3;&#x70B9;&#x4E0E;&#x5DE6;&#x3001;&#x53F3;&#x5B50;&#x6811;&#x4E2D;&#x8F83;&#x5C0F;&#x5143;&#x7D20;&#x7684;&#x8FDB;&#x884C;&#x4EA4;&#x6362;&#x3002;</p>
<p>3&#xFF09;&#x82E5;&#x4E0E;&#x5DE6;&#x5B50;&#x6811;&#x4EA4;&#x6362;&#xFF1A;&#x5982;&#x679C;&#x5DE6;&#x5B50;&#x6811;&#x5806;&#x88AB;&#x7834;&#x574F;&#xFF0C;&#x5373;&#x5DE6;&#x5B50;&#x6811;&#x7684;&#x6839;&#x7ED3;&#x70B9;&#x4E0D;&#x6EE1;&#x8DB3;&#x5806;&#x7684;&#x6027;&#x8D28;&#xFF0C;&#x5219;&#x91CD;&#x590D;&#x65B9;&#x6CD5; &#xFF08;2&#xFF09;&#x3002;</p>
<p>4&#xFF09;&#x82E5;&#x4E0E;&#x53F3;&#x5B50;&#x6811;&#x4EA4;&#x6362;&#xFF0C;&#x5982;&#x679C;&#x53F3;&#x5B50;&#x6811;&#x5806;&#x88AB;&#x7834;&#x574F;&#xFF0C;&#x5373;&#x53F3;&#x5B50;&#x6811;&#x7684;&#x6839;&#x7ED3;&#x70B9;&#x4E0D;&#x6EE1;&#x8DB3;&#x5806;&#x7684;&#x6027;&#x8D28;&#x3002;&#x5219;&#x91CD;&#x590D;&#x65B9;&#x6CD5; &#xFF08;2&#xFF09;&#x3002;</p>
<p>5&#xFF09;&#x7EE7;&#x7EED;&#x5BF9;&#x4E0D;&#x6EE1;&#x8DB3;&#x5806;&#x6027;&#x8D28;&#x7684;&#x5B50;&#x6811;&#x8FDB;&#x884C;&#x4E0A;&#x8FF0;&#x4EA4;&#x6362;&#x64CD;&#x4F5C;&#xFF0C;&#x76F4;&#x5230;&#x53F6;&#x5B50;&#x7ED3;&#x70B9;&#xFF0C;&#x5806;&#x88AB;&#x5EFA;&#x6210;&#x3002;</p>
<p>&#x79F0;&#x8FD9;&#x4E2A;&#x81EA;&#x6839;&#x7ED3;&#x70B9;&#x5230;&#x53F6;&#x5B50;&#x7ED3;&#x70B9;&#x7684;&#x8C03;&#x6574;&#x8FC7;&#x7A0B;&#x4E3A;&#x7B5B;&#x9009;&#x3002;&#x5982;&#x56FE;&#xFF1A;</p>
<div align="center">
<img data-original="/2017/05/31/java-interview-algorithm/1342595226_8095.jpg" class="lazy">
</div>
<p>&#x518D;&#x8BA8;&#x8BBA;&#x5BF9;n &#x4E2A;&#x5143;&#x7D20;&#x521D;&#x59CB;&#x5EFA;&#x5806;&#x7684;&#x8FC7;&#x7A0B;&#x3002;<br>
&#x5EFA;&#x5806;&#x65B9;&#x6CD5;&#xFF1A;&#x5BF9;&#x521D;&#x59CB;&#x5E8F;&#x5217;&#x5EFA;&#x5806;&#x7684;&#x8FC7;&#x7A0B;&#xFF0C;&#x5C31;&#x662F;&#x4E00;&#x4E2A;&#x53CD;&#x590D;&#x8FDB;&#x884C;&#x7B5B;&#x9009;&#x7684;&#x8FC7;&#x7A0B;&#x3002;</p>
<p>1&#xFF09;n &#x4E2A;&#x7ED3;&#x70B9;&#x7684;&#x5B8C;&#x5168;&#x4E8C;&#x53C9;&#x6811;&#xFF0C;&#x5219;&#x6700;&#x540E;&#x4E00;&#x4E2A;&#x7ED3;&#x70B9;&#x662F;&#x7B2C;&#x4E2A;&#x7ED3;&#x70B9;&#x7684;&#x5B50;&#x6811;&#x3002;</p>
<p>2&#xFF09;&#x7B5B;&#x9009;&#x4ECE;&#x7B2C;&#x4E2A;&#x7ED3;&#x70B9;&#x4E3A;&#x6839;&#x7684;&#x5B50;&#x6811;&#x5F00;&#x59CB;&#xFF0C;&#x8BE5;&#x5B50;&#x6811;&#x6210;&#x4E3A;&#x5806;&#x3002;</p>
<p>3&#xFF09;&#x4E4B;&#x540E;&#x5411;&#x524D;&#x4F9D;&#x6B21;&#x5BF9;&#x5404;&#x7ED3;&#x70B9;&#x4E3A;&#x6839;&#x7684;&#x5B50;&#x6811;&#x8FDB;&#x884C;&#x7B5B;&#x9009;&#xFF0C;&#x4F7F;&#x4E4B;&#x6210;&#x4E3A;&#x5806;&#xFF0C;&#x76F4;&#x5230;&#x6839;&#x7ED3;&#x70B9;&#x3002;</p>
<p>&#x5982;&#x56FE;&#x5EFA;&#x5806;&#x521D;&#x59CB;&#x8FC7;&#x7A0B;&#xFF1A;&#x65E0;&#x5E8F;&#x5E8F;&#x5217;&#xFF1A;&#xFF08;49&#xFF0C;38&#xFF0C;65&#xFF0C;97&#xFF0C;76&#xFF0C;13&#xFF0C;27&#xFF0C;49&#xFF09;</p>
<div align="center">
<img data-original="/2017/05/31/java-interview-algorithm/1342596333_5296.jpg" class="lazy">
<br>
<img data-original="/2017/05/31/java-interview-algorithm/1342596352_2401.jpg" class="lazy">
</div>
<pre><code>package org.vanjor.sort;
 
public class HeapSort implements Sorter {
    @Override
    public String getName() {
        return &quot;HeapSort&quot;;
    }
 
    public void sort(int[] array) {
        if (array == null || array.length &lt; 2) {
            return;
        }
        int len = array.length - 1;
 
        // &#x4ECE;&#x6700;&#x5E95;&#x5C42;&#x975E;&#x53F6;&#x5B50;&#x8282;&#x70B9;&#x5F00;&#x59CB;&#x5EFA;&#x5806;
        for (int i = (len) / 2; i &gt;= 1; i--) {
            headAjust(array, i, len);
        }
        // &#x9700;&#x8981;turnNum&#x6B21;&#x53D6;&#x5806;&#x9876;&#xFF0C;&#x83B7;&#x5F97;&#x5168;&#x90E8;&#x6392;&#x5E8F;
        int turnNum = len;
        // &#x5F53;&#x524D;&#x8F6E;&#x6B21;&#xFF0C;&#x5806;&#x9876;&#xFF0C;&#x6700;&#x5927;&#x503C;
        int turnMax = array[1];
 
        // &#x56E0;&#x4E3A;array&#x6392;&#x5E8F;&#x8D77;&#x70B9;&#x4E3A;1&#xFF0C;&#x6240;&#x8C13;&#x5230;1&#x505C;&#x6B62;&#x4E86;
        while (turnNum &gt;= 1) {
            array[1] = array[turnNum];
            array[turnNum] = turnMax;
            turnNum--;
            // &#x91CD;&#x5EFA;&#x5806;
            headAjust(array, 1, turnNum);
            // &#x5F97;&#x5230;&#x65B0;&#x5806;&#x5806;&#x9876;
            turnMax = array[1];
        }
    }
 
    public void headAjust(int[] array, int start, int end) {
        int cursor;
        // &#x4FDD;&#x5B58;&#x5F53;&#x524D;&#x9876;&#x70B9;start&#x503C;
        int local = array[start];
        for (cursor = 2 * start; cursor &lt;= end; cursor *= 2) {
            // &#x53D6;start&#x7684;&#x4E24;&#x4E2A;&#x53F6;&#x5B50;&#x8282;&#x70B9;&#x4E2D;&#x8F83;&#x5927;&#x8005;&#xFF0C;cursor&#x4E3A;&#x5BF9;&#x5E94;&#x53F6;&#x5B50;&#x8282;&#x70B9;&#x5E8F;&#x53F7;
            if (cursor &lt; end &amp;&amp; array[cursor] &lt; array[cursor + 1]) {
                cursor++;
            }
            // &#x5982;&#x679C;&#x9876;&#x8282;&#x70B9;&#x5C31;&#x662F;&#x6700;&#x5927;&#xFF0C;&#x5219;&#x65E0;&#x9700;&#x7EE7;&#x7EED;&#x8C03;&#x8282;&#x4E86;
            if (local &gt;= array[cursor]) {
                break;
            }
            // &#x6700;&#x5927;&#x503C;&#x4E0A;&#x79FB;&#x5230;&#x9876;&#x70B9;
            array[start] = array[cursor];
            // &#x6CBF;&#x6811;&#x5411;&#x4E0B;&#x7EE7;&#x7EED;&#x5EFA;&#x5806;&#x8C03;&#x6574;&#xFF0C;&#x5176;&#x5B9E;&#x4E5F;&#x5C31;&#x662F;&#x88AB;&#x66FF;&#x6362;&#x4E0B;&#x6765;&#x7684;&#x9876;&#x70B9;&#x627E;&#x5230;&#x4F4D;&#x7F6E;
            start = cursor;
        }
        // &#x627E;&#x5230;&#x5BF9;&#x5E94;&#x4F4D;&#x7F6E;&#xFF0C;&#x5F52;&#x4F4D;
        array[start] = local;
    }
}
</code></pre>
<h3 id="&#x57FA;&#x6570;&#x6392;&#x5E8F;"><a class="header-anchor" href="#&#x57FA;&#x6570;&#x6392;&#x5E8F;"></a>&#x57FA;&#x6570;&#x6392;&#x5E8F;</h3>
<p>&#x57FA;&#x6570;&#x6392;&#x5E8F;&#x4E2D;&#x7684;&#x4E00;&#x4E2A;&#x73AF;&#x8282;&#x4E0E;&#x6876;&#x6392;&#x5E8F;&#x601D;&#x8DEF;&#x5F88;&#x76F8;&#x540C;&#xFF0C;&#x5C31;&#x662F;&#x5229;&#x7528;&#x6570;&#x5B57;&#x5206;&#x5C42;&#xFF0C;&#x5982;&#x4E2A;&#x4F4D;&#xFF0C;&#x5341;&#x4F4D;&#xFF0C;&#x767E;&#x4F4D;&#xFF0C;&#x5206;&#x522B;&#x6392;&#x5E8F;&#xFF0C;&#x6BCF;&#x4E00;&#x5C42;&#x90FD;&#x53EF;&#x4EE5;&#x88AB;&#x653E;&#x5728;&#x5341;&#x4E2A;&#x6876;&#x91CC;&#xFF0C;&#x4ECE;0&#x5230;9&#xFF0C;&#x8FDB;&#x884C;&#x8F6E;&#x6B21;&#x7684;&#x53D6;&#x653E;&#xFF0C;&#x6700;&#x7EC8;&#x5F97;&#x5230;&#x6709;&#x5E8F;&#x3002;</p>
<p>&#x57FA;&#x6570;&#x6392;&#x5E8F;&#x662F;&#x5178;&#x578B;&#x7684;&#x5229;&#x7528;&#x7A7A;&#x95F4;&#x6362;&#x65F6;&#x95F4;&#x7684;&#x4E00;&#x79CD;&#x601D;&#x8DEF;&#xFF0C;&#x6709;&#x4E24;&#x79CD;&#x6781;&#x7AEF;&#x7684;&#x65B9;&#x5411;&#xFF1A;</p>
<ul>
<li>&#x6876;&#x591F;&#x591A;&#xFF1A;&#x5982;&#x679C;&#x5E26;&#x6392;&#x6570;&#x76F8;&#x5DEE;&#x4E0D;&#x662F;&#x7279;&#x522B;&#x5927;&#xFF0C;&#x53EF;&#x4EE5;&#x7528;&#x4E00;&#x4E2A;&#x8DB3;&#x591F;&#x7684;&#x6876;&#x96C6;&#xFF0C;&#x76F4;&#x63A5;&#x5C06;&#x6BCF;&#x4E00;&#x4E2A;&#x4E0D;&#x540C;&#x7684;&#x6570;&#x653E;&#x5230;&#x4E0D;&#x540C;&#x7684;&#x6876;&#x91CC;&#xFF0C;&#x6700;&#x540E;&#x6876;&#x7684;&#x987A;&#x5E8F;&#x5C31;&#x662F;&#x6570;&#x7684;&#x987A;&#x5E8F;&#xFF0C;&#x5728;&#x6570;&#x7684;&#x5BC6;&#x5EA6;&#x591F;&#x5747;&#x5300;&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#x6548;&#x7387;&#x4E3A;O(n)</li>
<li>&#x6876;&#x591F;&#x5C11;&#xFF1A;&#x5982;&#x679C;&#x6309;bit&#x4F4D;&#x6765;&#x8FDB;&#x884C;&#x57FA;&#x6570;&#x6392;&#x5E8F;&#x65F6;&#xFF0C;&#x6BCF;&#x4E2A;bit&#x5C31;&#x4E24;&#x79CD;&#x60C5;&#x51B5;0,1,&#x4E5F;&#x5C31;&#x662F;&#x53EA;&#x9700;&#x8981;&#x4E24;&#x4E2A;&#x6876;&#xFF0C;&#x4F46;&#x662F;&#x8FD9;&#x6837;&#x603B;&#x5171;&#x9700;&#x8981;&#x7684;&#x8F6E;&#x6B21;&#xFF0C;&#x5047;&#x8BBE;&#x6700;&#x5927;&#x503C;&#x4E3A;M&#xFF0C;&#x5219;&#x8F6E;&#x6B21;&#x4E3A;log(M)&#xFF0C;&#x65F6;&#x95F4;&#x590D;&#x6742;&#x5EA6;&#x4E3A;log(M)&#x2022;O&#xFF08;n&#xFF09;</li>
</ul>
<p>&#x57FA;&#x6570;&#x6392;&#x5E8F;&#x7684;&#x4E3B;&#x8981;&#x601D;&#x8DEF;&#x662F;&#xFF0C;&#x5C06;&#x6240;&#x6709;&#x5F85;&#x6BD4;&#x8F83;&#x6570;&#x503C;(&#x6CE8;&#x610F;,&#x5FC5;&#x987B;&#x662F;&#x6B63;&#x6574;&#x6570;)&#x7EDF;&#x4E00;&#x4E3A;&#x540C;&#x6837;&#x7684;&#x6570;&#x4F4D;&#x957F;&#x5EA6;,&#x6570;&#x4F4D;&#x8F83;&#x77ED;&#x7684;&#x6570;&#x524D;&#x9762;&#x8865;&#x96F6;&#x3002;&#x7136;&#x540E;, &#x4ECE;&#x6700;&#x4F4E;&#x4F4D;&#x5F00;&#x59CB;, &#x4F9D;&#x6B21;&#x8FDB;&#x884C;&#x4E00;&#x6B21;&#x7A33;&#x5B9A;&#x6392;&#x5E8F;(&#x6211;&#x4EEC;&#x5E38;&#x7528;&#x4E0A;&#x4E00;&#x7BC7;blog&#x4ECB;&#x7ECD;&#x7684;&#x8BA1;&#x6570;&#x6392;&#x5E8F;&#x7B97;&#x6CD5;, &#x56E0;&#x4E3A;&#x6BCF;&#x4E2A;&#x4F4D;&#x53EF;&#x80FD;&#x7684;&#x53D6;&#x503C;&#x8303;&#x56F4;&#x662F;&#x56FA;&#x5B9A;&#x7684;&#x4ECE;0&#x5230;9)&#x3002;&#x8FD9;&#x6837;&#x4ECE;&#x6700;&#x4F4E;&#x4F4D;&#x6392;&#x5E8F;&#x4E00;&#x76F4;&#x5230;&#x6700;&#x9AD8;&#x4F4D;&#x6392;&#x5E8F;&#x5B8C;&#x6210;&#x4EE5;&#x540E;, &#x6570;&#x5217;&#x5C31;&#x53D8;&#x6210;&#x4E00;&#x4E2A;&#x6709;&#x5E8F;&#x5E8F;&#x5217;&#x3002;</p>
<p>&#x6BD4;&#x5982;&#x8FD9;&#x6837;&#x4E00;&#x4E2A;&#x6570;&#x5217;&#x6392;&#x5E8F;: 342 58 576 356, &#x4EE5;&#x4E0B;&#x63CF;&#x8FF0;&#x6F14;&#x793A;&#x4E86;&#x5177;&#x4F53;&#x7684;&#x6392;&#x5E8F;&#x8FC7;&#x7A0B;</p>
<p>&#x7B2C;&#x4E00;&#x6B21;&#x6392;&#x5E8F;(&#x4E2A;&#x4F4D;):<br>
3 4 2<br>
5 7 6<br>
3 5 6<br>
0 5 8<br>
&#x7B2C;&#x4E8C;&#x6B21;&#x6392;&#x5E8F;(&#x5341;&#x4F4D;):<br>
3 4 2<br>
3 5 6<br>
0 5 8<br>
5 7 6<br>
&#x7B2C;&#x4E09;&#x6B21;&#x6392;&#x5E8F;(&#x767E;&#x4F4D;):<br>
0 5 8<br>
3 4 2<br>
3 5 6<br>
5 7 6<br>
&#x7ED3;&#x679C;: 58 342 356 576</p>
<pre><code>package org.vanjor.sort;
 
import java.util.ArrayList;
import java.util.LinkedList;
 
public class RadixSort implements Sorter {
 
    @Override
    public String getName() {
        return &quot;RadixSort&quot;;
    }
 
    @Override
    public void sort(int[] array) {
        // &#x53EA;&#x662F;&#x4E3A;&#x4E86;&#x6F14;&#x793A;&#xFF0C;&#x57FA;&#x6570;&#x6240;&#x7528;&#x6876;&#xFF0C;&#x8FD9;&#x91CC;&#x7528;&#x9AD8;&#x7EA7;&#x94FE;&#x8868;API
        // &#x6876;&#x96C6;A&#x5B58;&#x653E;&#x5F53;&#x524D;&#x8F6E;&#x6B21;&#x5F00;&#x59CB;&#x524D;&#x7684;&#x72B6;&#x6001;
        ArrayList&lt;LinkedList&lt;Integer&gt;&gt; bucketA = new ArrayList&lt;LinkedList&lt;Integer&gt;&gt;();
        // &#x6876;&#x96C6;B&#x5B58;&#x653E;&#x5F53;&#x524D;&#x8F6E;&#x6B21;&#x6392;&#x5E8F;&#x540E;&#x7684;&#x72B6;&#x6001;
        ArrayList&lt;LinkedList&lt;Integer&gt;&gt; bucketB = new ArrayList&lt;LinkedList&lt;Integer&gt;&gt;();
        // &#x6BCF;&#x8F6E;&#x6B21;&#x6392;&#x5E8F;&#x540E;&#x98A0;&#x5012;&#x540E;&#x4EA4;&#x6362;&#x7528;
        ArrayList&lt;LinkedList&lt;Integer&gt;&gt; tempArray;
        // &#x57FA;&#x4E8E;&#x6570;&#x5B57;&#x6392;&#x5E8F;&#xFF0C;&#x5171;10&#x4E2A;&#x6876;
        final int bucketBase = 10;
        int temp = bucketBase;
        while ((--temp) &gt;= 0) {
            bucketA.add(new LinkedList&lt;Integer&gt;());
            bucketB.add(new LinkedList&lt;Integer&gt;());
        }
        // &#x627E;&#x51FA;&#x5F53;&#x524D;&#x6700;&#x5927;&#x7684;&#x6570;&#xFF0C;&#x7528;&#x4EE5;&#x786E;&#x5B9A;&#x6700;&#x591A;&#x9700;&#x8981;&#x6876;&#x88C5;&#x586B;&#x7684;&#x8F6E;&#x6B21;
        int maxNum = -1;
        for (int i = 0; i &lt; array.length; i++) {
            if (array[i] &gt; maxNum) {
                maxNum = array[i];
            }
        }
        // &#x8BA1;&#x7B97;&#x8F6E;&#x6B21;
        int turn = 0;
        while (maxNum &gt; 0) {
            turn++;
            maxNum /= bucketBase;
        }
        // &#x521D;&#x59CB;&#x88C5;&#x586B;&#x5230;A&#x6876;&#x96C6;&#x4E2D;
        for (int i = 0; i &lt; array.length; i++) {
            bucketA.get(array[i] % 10).add(array[i]);
        }
        int locNum;
        int turnBaseDiv = 1;
        while ((turn--) &gt; 0) {
            // &#x5F53;&#x524D;&#x8F6E;&#x6B21;&#xFF0C;&#x5BF9;&#x6876;&#x96C6;&#x4E2D;&#x7684;10&#x4E2A;&#x6876;&#x6309;&#x5F53;&#x524D;&#x4F4D;&#x8FDB;&#x884C;&#x91CD;&#x65B0;&#x72B6;&#x6001;
            for (int i = 0; i &lt; bucketBase; i++) {
                while (!bucketA.get(i).isEmpty()) {
                    locNum = bucketA.get(i).remove();
                    // &#x6839;&#x636E;&#x5F53;&#x524D;&#x8F6E;&#x6B21;&#x6BD4;&#x8F83;&#x4F4D;&#xFF0C;&#x627E;&#x5230;&#x5BF9;&#x5E94;&#x7684;&#x6876;
                    bucketB.get((locNum / turnBaseDiv) % 10).add(locNum);
                }
            }
            // &#x6BD4;&#x8F83;&#x4F4D;&#x524D;&#x79FB;
            turnBaseDiv *= 10;
            // &#x4EA4;&#x6362;A&#xFF0C;B&#x6B21;&#x5E8F;
            tempArray = bucketB;
            bucketB = bucketA;
            bucketA = tempArray;
        }
        // &#x4ECE;&#x6876;&#x4E2D;&#x987A;&#x5E8F;&#x53D6;&#x6570;
        for (int i = 0, j = 0; i &lt; 10; i++) {
            while (!bucketA.get(i).isEmpty()) {
                array[j++] = bucketA.get(i).remove();
            }
        }
    }
}
</code></pre>
<h3 id="&#x6876;&#x5F0F;&#x6392;&#x5E8F;"><a class="header-anchor" href="#&#x6876;&#x5F0F;&#x6392;&#x5E8F;"></a>&#x6876;&#x5F0F;&#x6392;&#x5E8F;</h3>
<p>&#x6876;&#x5F0F;&#x6392;&#x5E8F;&#x4E0D;&#x518D;&#x662F;&#x57FA;&#x4E8E;&#x6BD4;&#x8F83;&#x7684;&#x4E86;&#xFF0C;&#x5B83;&#x548C;&#x57FA;&#x6570;&#x6392;&#x5E8F;&#x540C;&#x5C5E;&#x4E8E;&#x5206;&#x914D;&#x7C7B;&#x7684;&#x6392;&#x5E8F;&#xFF0C;&#x8FD9;&#x7C7B;&#x6392;&#x5E8F;&#x7684;&#x7279;&#x70B9;&#x662F;&#x4E8B;&#x5148;&#x8981;&#x77E5;&#x9053;&#x5F85;&#x6392;&#x5E8F;&#x5217;&#x7684;&#x4E00;&#x4E9B;&#x7279;&#x5F81;&#x3002;&#x6876;&#x5F0F;&#x6392;&#x5E8F;&#x4E8B;&#x5148;&#x8981;&#x77E5;&#x9053;&#x5F85;&#x6392;&#x5E8F;&#x5217;&#x5728;&#x4E00;&#x4E2A;&#x8303;&#x56F4;&#x5185;&#xFF0C;&#x800C;&#x4E14;&#x8FD9;&#x4E2A;&#x8303;&#x56F4;&#x5E94;&#x8BE5;&#x4E0D;&#x662F;&#x5F88;&#x5927;&#x7684;&#x3002;&#x6BD4;&#x5982;&#x77E5;&#x9053;&#x5F85;&#x6392;&#x5E8F;&#x5217;&#x5728;[0,M&#xFF09;&#x5185;&#xFF0C;&#x90A3;&#x4E48;&#x53EF;&#x4EE5;&#x5206;&#x914D;M&#x4E2A;&#x6876;&#xFF0C;&#x7B2C;I&#x4E2A;&#x6876;&#x8BB0;&#x5F55;I&#x7684;&#x51FA;&#x73B0;&#x60C5;&#x51B5;&#xFF0C;&#x6700;&#x540E;&#x6839;&#x636E;&#x6BCF;&#x4E2A;&#x6876;&#x6536;&#x5230;&#x7684;&#x4F4D;&#x7F6E;&#x4FE1;&#x606F;&#x628A;&#x6570;&#x636E;&#x8F93;&#x51FA;&#x6210;&#x6709;&#x5E8F;&#x7684;&#x5F62;&#x5F0F;&#x3002;&#x8FD9;&#x91CC;&#x6211;&#x4EEC;&#x7528;&#x4E24;&#x4E2A;&#x4E34;&#x65F6;&#x6027;&#x6570;&#x7EC4;&#xFF0C;&#x4E00;&#x4E2A;&#x7528;&#x4E8E;&#x8BB0;&#x5F55;&#x4F4D;&#x7F6E;&#x4FE1;&#x606F;&#xFF0C;&#x4E00;&#x4E2A;&#x7528;&#x4E8E;&#x65B9;&#x4FBF;&#x8F93;&#x51FA;&#x6570;&#x636E;&#x6210;&#x6709;&#x5E8F;&#x65B9;&#x5F0F;&#xFF0C;&#x53E6;&#x5916;&#x6211;&#x4EEC;&#x5047;&#x8BBE;&#x6570;&#x636E;&#x843D;&#x5728;0&#x5230;MAX,&#x5982;&#x679C;&#x6240;&#x7ED9;&#x6570;&#x636E;&#x4E0D;&#x662F;&#x4ECE;0&#x5F00;&#x59CB;&#xFF0C;&#x4F60;&#x53EF;&#x4EE5;&#x628A;&#x6BCF;&#x4E2A;&#x6570;&#x51CF;&#x53BB;&#x6700;&#x5C0F;&#x7684;&#x6570;&#x3002;</p>
<p>&#x5982;&#x679C;&#x6211;&#x4EEC;&#x6709;N&#x4E2A;&#x6574;&#x6570;&#xFF0C;&#x8303;&#x56F4;&#x4ECE;1&#x5230;M(&#x6216;&#x4ECE;0&#x5230;M-1)&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x5229;&#x7528;&#x8FD9;&#x4E2A;&#x4FE1;&#x606F;&#x5F97;&#x5230;&#x4E00;&#x79CD;&#x5FEB;&#x901F;&#x7684;&#x6392;&#x5E8F;&#xFF0C;&#x53EB;&#x505A;&#x6876;&#x5F0F;&#x6392;&#x5E8F;(bucket sort)&#x3002;&#x6211;&#x4EEC;&#x7559;&#x7F6E;&#x4E00;&#x4E2A;&#x6570;&#x7EC4;&#xFF0C;&#x79F0;&#x4E4B;&#x4E3A;Count&#xFF0C;&#x5927;&#x5C0F;&#x4E3A;M&#xFF0C;&#x5E76;&#x521D;&#x59CB;&#x5316;&#x4E3A;&#x96F6;&#x3002;&#x4E8E;&#x662F;&#xFF0C;Count&#x6709;M&#x4E2A;&#x5355;&#x5143;(&#x6216;&#x6876;)&#xFF0C;&#x5F00;&#x59CB;&#x65F6;&#x4ED6;&#x4EEC;&#x90FD;&#x662F;&#x7A7A;&#x7684;&#x3002;&#x5F53;&#x6570;&#x7EC4;&#x5143;&#x7D20;A[i]&#x88AB;&#x8BFB;&#x5165;&#x65F6;Count[A[i]]&#x589E;1&#x3002;&#x5728;&#x6240;&#x6709;&#x7684;&#x8F93;&#x5165;&#x88AB;&#x8BFB;&#x8FDB;&#x4EE5;&#x540E;&#xFF0C;&#x626B;&#x63CF;&#x6570;&#x7EC4;Count&#xFF0C;&#x6253;&#x5370;&#x8F93;&#x51FA;&#x6392;&#x597D;&#x5E8F;&#x7684;&#x8868;&#x3002;&#x8BE5;&#x7B97;&#x6CD5;&#x82B1;&#x8D39;O(M+N)&#x3002;<br>
&#x7531;&#x6B64;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x53D1;&#x73B0;&#x6876;&#x5F0F;&#x6392;&#x5E8F;&#x9700;&#x8981;&#x6EE1;&#x8DB3;&#x7684;&#x4E24;&#x4E2A;&#x524D;&#x63D0;&#x6761;&#x4EF6;&#xFF1A;&#x7B2C;&#x4E00;&#xFF0C;&#x5F85;&#x6392;&#x5E8F;&#x6570;&#x7EC4;&#x5143;&#x7D20;&#x4E3A;&#x975E;&#x8D1F;&#x6574;&#x6570;&#xFF1B;&#x7B2C;&#x4E8C;&#xFF0C;&#x5F85;&#x6392;&#x5E8F;&#x6570;&#x7EC4;&#x5143;&#x7D20;&#x6709;&#x754C;&#x3002;&#x8FD9;&#x4E24;&#x4E2A;&#x524D;&#x63D0;&#x6761;&#x4EF6;&#x9650;&#x5236;&#x4E86;&#x6876;&#x5F0F;&#x6392;&#x5E8F;&#x7684;&#x5E94;&#x7528;&#x8303;&#x56F4;&#xFF0C;&#x4F46;&#x6876;&#x5F0F;&#x6392;&#x5E8F;&#x7B97;&#x6CD5;&#x7684;&#x601D;&#x60F3;&#x662F;&#x5F88;&#x503C;&#x5F97;&#x6211;&#x4EEC;&#x5B66;&#x4E60;&#x548C;&#x501F;&#x9274;&#x7684;&#x3002;</p>
<pre><code>#include &lt;stdio.h&gt;  
  
// Count&#x6570;&#x7EC4;&#x5927;&#x5C0F;  
#define MAXNUM 100  
  
// &#x529F;&#x80FD;&#xFF1A;&#x6876;&#x5F0F;&#x6392;&#x5E8F;  
// &#x8F93;&#x5165;&#xFF1A;&#x5F85;&#x6392;&#x5E8F;&#x6570;&#x7EC4;         arrayForSort[]  
//       &#x5F85;&#x6392;&#x5E8F;&#x6570;&#x7EC4;&#x5927;&#x5C0F;        arraySize  
//       &#x5F85;&#x6392;&#x5E8F;&#x6570;&#x7EC4;&#x5143;&#x7D20;&#x4E0A;&#x754C;  maxItem&#xFF1B;&#x6570;&#x7EC4;&#x4E2D;&#x7684;&#x5143;&#x7D20;&#x90FD;&#x843D;&#x5728;[0, maxItem]&#x533A;&#x95F4;  
// &#x8F93;&#x51FA;&#xFF1A;void  
void BucketSort(int arrayForSort[], int arraySize, int maxItem)  
{  
    int Count[MAXNUM];  
    // &#x7F6E;&#x7A7A;  
    for (int i = 0; i &lt;= maxItem; ++i)  
    {  
        Count[i] = 0;  
    }  
    // &#x904D;&#x5386;&#x5F85;&#x6392;&#x5E8F;&#x6570;&#x7EC4;  
    for (int i = 0; i &lt; arraySize; ++i)  
    {  
        ++Count[arrayForSort[i]];  
    }  
  
    // &#x6876;&#x6392;&#x5E8F;&#x8F93;&#x51FA;  
    // &#x4E5F;&#x53EF;&#x4EE5;&#x5B58;&#x50A8;&#x5728;&#x6570;&#x7EC4;&#x4E2D;&#xFF0C;&#x7136;&#x540E;&#x8FD4;&#x56DE;&#x6570;&#x7EC4;  
    for (int i = 0; i &lt;= maxItem; ++i)  
    {  
        for (int j = 1; j &lt;= Count[i]; ++j)  
        {  
            printf(&quot;%3d&quot;, i);  
        }  
    }  
    printf(&quot;\n&quot;);  
}  
  
void main()  
{  
    // &#x6D4B;&#x8BD5;  
    int a[] = {2, 5, 6, 12, 4, 8, 8, 6, 7, 8, 8, 10, 7, 6, 0, 1};  
    BucketSort(a, sizeof(a) / sizeof(a[0]), 12);  
}  
</code></pre>
<h2 id="&#x5176;&#x5B83;&#x7B97;&#x6CD5;"><a class="header-anchor" href="#&#x5176;&#x5B83;&#x7B97;&#x6CD5;"></a>&#x5176;&#x5B83;&#x7B97;&#x6CD5;</h2>
<p><strong>1. &#x4F7F;&#x7528;&#x968F;&#x673A;&#x7B97;&#x6CD5;&#x4EA7;&#x751F;&#x4E00;&#x4E2A;&#x6570;&#xFF0C;&#x8981;&#x6C42;&#x628A;1-1000W&#x4E4B;&#x95F4;&#x8FD9;&#x4E9B;&#x6570;&#x5168;&#x90E8;&#x751F;&#x6210;&#x3002;</strong></p>
<pre><code>/** 
 * &#x4F7F;&#x7528;&#x968F;&#x673A;&#x7B97;&#x6CD5;&#x4EA7;&#x751F;&#x4E00;&#x4E2A;&#x6570;&#xFF0C;&#x8981;&#x6C42;&#x628A;1-1000W&#x4E4B;&#x95F4;&#x8FD9;&#x4E9B;&#x6570;&#x5168;&#x90E8;&#x751F;&#x6210;&#x3002; 
 * &#xFF08;&#x8003;&#x5BDF;&#x9AD8;&#x6548;&#x7387;&#xFF0C;&#x89E3;&#x51B3;&#x4EA7;&#x751F;&#x51B2;&#x7A81;&#x7684;&#x95EE;&#x9898;&#xFF09; 
 */  
private static void testRandom() {  
    int value = 10000000;  
    //int&#x7C7B;&#x578B;&#x6700;&#x5927;&#x503C;&#xFF1A;2&#x7684;32&#x6B21;&#x65B9; - 1 = Integer.MAX_VALUE = 2147483647&#xFF0C;&#x4E8C;&#x5341;&#x4EBF;&#x591A;,&#x771F;&#x591F;&#x5566; &#x3002;  
    Set&lt;Integer&gt; result = Sets.newHashSetWithExpectedSize(value);  
    Random random = new Random();  
    long a = System.currentTimeMillis();  
    while (result.size() &lt; value + 1) {  
        int i = random.nextInt(value + 1);  
        result.add(i);  
    }  
    System.out.println(&quot;\r&lt;br&gt; &#x6267;&#x884C;&#x8017;&#x65F6; : &quot; + (System.currentTimeMillis() - a) / 1000f + &quot; &#x79D2; &quot;);  
    System.out.println(&quot;&#x5B8C;&#x4E86;&#xFF0C;&#x96C6;&#x5408;&#x5927;&#x5C0F;&#x4E3A;&quot; + result.size());  
}  
</code></pre>
<p>&#x5177;&#x4F53;&#x8BF7;&#x770B;&#xFF1A;<a href="http://blog.csdn.net/qq_27093465/article/details/52598034" target="_blank" rel="external nofollow noopener noreferrer">http://blog.csdn.net/qq_27093465/article/details/52598034</a></p>
<p><strong>2. &#x4E24;&#x4E2A;&#x6709;&#x5E8F;&#x6570;&#x7EC4;&#x7684;&#x5408;&#x5E76;&#x6392;&#x5E8F;</strong></p>
<p>&#x5F52;&#x5E76;&#x6392;&#x5E8F;&#x662F;&#x5EFA;&#x7ACB;&#x5728;&#x5F52;&#x5E76;&#x64CD;&#x4F5C;&#x4E0A;&#x7684;&#x4E00;&#x79CD;&#x6709;&#x6548;&#x7684;&#x6392;&#x5E8F;&#x7B97;&#x6CD5;&#x3002;&#x8BE5;&#x7B97;&#x6CD5;&#x662F;&#x91C7;&#x7528;&#x5206;&#x6CBB;&#x6CD5;&#xFF08;Divide and Conquer&#xFF09;&#x7684;&#x4E00;&#x4E2A;&#x975E;&#x5E38;&#x5178;&#x578B;&#x7684;&#x5E94;&#x7528;&#x3002;&#x503C;&#x5F97;&#x6CE8;&#x610F;&#x7684;&#x662F;&#x5F52;&#x5E76;&#x6392;&#x5E8F;&#x662F;&#x4E00;&#x79CD;&#x7A33;&#x5B9A;&#x7684;&#x6392;&#x5E8F;&#x65B9;&#x6CD5;&#x3002;&#x901F;&#x5EA6;&#x4EC5;&#x6B21;&#x4E8E;&#x5FEB;&#x901F;&#x6392;&#x5E8F;&#xFF0C;&#x4E3A;&#x7A33;&#x5B9A;&#x6392;&#x5E8F;&#x7B97;&#x6CD5;&#xFF0C;&#x4E00;&#x822C;&#x7528;&#x4E8E;&#x5BF9;&#x603B;&#x4F53;&#x65E0;&#x5E8F;&#xFF0C;&#x4F46;&#x662F;&#x5404;&#x5B50;&#x9879;&#x76F8;&#x5BF9;&#x6709;&#x5E8F;&#x7684;&#x6570;&#x5217;</p>
<pre><code>import com.alibaba.fastjson.JSON;

public class MergeSort {

    //&#x5C06;&#x6709;&#x5E8F;&#x6570;&#x7EC4;a[]&#x548C;b[]&#x5408;&#x5E76;&#x5230;c[]&#x4E2D;
    void MemeryArray(int[] a, int n, int[] b, int m, int[] c)
    {
        int i, j, k;

        i = j = k = 0;
        while (i &lt; n &amp;&amp; j &lt; m)
        {
            if (a[i] &lt; b[j])
                c[k++] = a[i++];
            else
                c[k++] = b[j++];
        }

        while (i &lt; n)
            c[k++] = a[i++];

        while (j &lt; m)
            c[k++] = b[j++];
    }

    void mergearray(int[] a, int first, int mid, int last, int[] temp)
    {
        int i = first, j = mid + 1;
        int m = mid,   n = last;
        int k = 0;

        while (i &lt;= m &amp;&amp; j &lt;= n)
        {
            if (a[i] &lt;= a[j])
                temp[k++] = a[i++];
            else
                temp[k++] = a[j++];
        }

        while (i &lt;= m)
            temp[k++] = a[i++];

        while (j &lt;= n)
            temp[k++] = a[j++];

        for (i = 0; i &lt; k; i++)
            a[first + i] = temp[i];
    }

    void mergesort(int[] a, int first, int last, int[] temp)
    {
        if (first &lt; last)
        {
            int mid = (first + last) / 2;
            mergesort(a, first, mid, temp);    //&#x5DE6;&#x8FB9;&#x6709;&#x5E8F;
            mergesort(a, mid + 1, last, temp); //&#x53F3;&#x8FB9;&#x6709;&#x5E8F;
            mergearray(a, first, mid, last, temp); //&#x518D;&#x5C06;&#x4E8C;&#x4E2A;&#x6709;&#x5E8F;&#x6570;&#x5217;&#x5408;&#x5E76;
        }
    }

    boolean MergeSort(int[] a, int n)
    {
        int[] p = new int[n];
        if (p == null)
            return false;
        mergesort(a, 0, n - 1, p);
        return true;
    }


    public static void main(String[] args) {
        MergeSort mergeSort = new MergeSort();
        int[] a = {1,3,5,7,9,11,12,13};
        int[] b = {2,3,6,8,10};

        int[] c = new int[a.length + b.length];

        mergeSort.MemeryArray(a, a.length, b, b.length, c);

        System.out.println(JSON.toJSONString(c));

        int[] arr = {11, 3, 1, 4, 1, 2, 20, 5, 10, 6};

        mergeSort.MergeSort(arr, arr.length);

        System.out.println(JSON.toJSONString(arr));
    }
}
</code></pre>
<p><strong>3. &#x4E00;&#x4E2A;&#x6570;&#x7EC4;&#x7684;&#x5012;&#x5E8F;</strong></p>
<pre><code>private static void testArrayReverse() {  
    int[] data = {22, 12, 33, 24, 75};  
    System.out.println(&quot;&#x539F;&#x987A;&#x5E8F;&quot; + Arrays.toString(data));  
    int length = data.length;  
    for (int i = 0; i &lt; length / 2; i++) {  
        int temp = data[i];  
        data[i] = data[length - 1 - i];  
        data[length - 1 - i] = temp;  
    }  
    System.out.println(&quot;&#x5012;&#x5E8F;&#x540E;&quot; + Arrays.toString(data));  
}  
</code></pre>
<p>&#x5177;&#x4F53;&#x8BF7;&#x770B;&#xFF1A;<a href="http://blog.csdn.net/qq_27093465/article/details/52595958" target="_blank" rel="external nofollow noopener noreferrer">http://blog.csdn.net/qq_27093465/article/details/52595958</a></p>
<p><strong>4. &#x8BA1;&#x7B97;&#x4E00;&#x4E2A;&#x6B63;&#x6574;&#x6570;&#x7684;&#x6B63;&#x5E73;&#x65B9;&#x6839;</strong></p>
<p>&#x53EF;&#x4EE5;&#x7528;&#x79FB;&#x4F4D;&#x6CD5;&#x6C42;&#x5E73;&#x65B9;&#x6839;&#xFF0C;&#x65B9;&#x6CD5;&#x548C; &#x624B;&#x52A8;&#x8BA1;&#x7B97; &#x5E73;&#x65B9;&#x6839;&#x7C7B;&#x4F3C;&#x3002;<br>
&#x81F3;&#x4E8E;&#x6548;&#x7387;&#xFF0C;&#x6CA1;&#x6BD4;&#x8F83;&#x8FC7;&#xFF0C;&#x4E0D;&#x77E5;&#x9053;&#x90A3;&#x4E2A;&#x5FEB;&#x4E00;&#x70B9;<br>
&#x79FB;&#x4F4D;&#x6CD5;&#xFF0C;&#x4E0D;&#x7528;&#x6D6E;&#x70B9;&#x6570;&#xFF0C;&#x5BF9;&#x4E8E;&#x4E0D;&#x80FD;&#x8BA1;&#x7B97;&#x6D6E;&#x70B9;&#x6570;&#x7684;CPU&#xFF0C;&#x8FD8;&#x662F;&#x4E0D;&#x9519;&#x7684;<br>
&#x4E0A;&#x53D6;&#x6574;&#xFF0C;&#x4E0B;&#x53D6;&#x6574;&#xFF0C;&#x56DB;&#x820D;&#x4E94;&#x5165;&#x53D6;&#x6574;&#xFF0C;&#x90FD;&#x53EF;&#x4EE5;&#x5B9E;&#x73B0;</p>
<pre><code>#include &lt;iostream&gt;
#include &lt;cmath&gt;
using namespace std;

typedef unsigned int uint;
///&#x56DB;&#x820D;&#x4E94;&#x5165;&#x6CD5;
uint sqrt_round(uint a){
    uint r=0;
    int n = sizeof(a)*8/2;
    uint rem =  (a&gt;&gt;(n*2-2));
    for(int i=0;i&lt;n+1;i++){
        r &lt;&lt;= 1;
        if(rem &gt;=2*r+1 )
            {rem-=2*r+1;++r;}
        a &lt;&lt;= 2;
        rem&lt;&lt;=2;
        rem+= (a&gt;&gt;(n*2-2));
    }
    return (r &gt;&gt; 1)+(r &amp; 1);
}
///&#x4E0B;&#x53D6;&#x6574;
uint sqrt_floor(uint a){
    uint r=0;
    int n = sizeof(a)*8/2;
    uint rem =  (a&gt;&gt;(n*2-2));
    for(int i=0;i&lt;n;i++){
        r &lt;&lt;= 1;
        if(rem &gt;=2*r+1 )
            {rem-=2*r+1;++r;}
        a &lt;&lt;= 2;
        rem&lt;&lt;=2;
        rem+= (a&gt;&gt;(n*2-2));
    }
    return r;
}
///&#x4E0A;&#x53D6;&#x6574;
uint sqrt_ciel(uint a){
    uint r=0;
    int n = sizeof(a)*8/2;
    uint rem =  (a&gt;&gt;(n*2-2));
    for(int i=0;i&lt;n;i++){
        r &lt;&lt;= 1;
        if(rem &gt;=2*r+1 )
            {rem-=2*r+1;++r;}
        a &lt;&lt;= 2;
        rem&lt;&lt;=2;
        rem+= (a&gt;&gt;(n*2-2));
    }
    return r+ (rem &gt;0);
}

int main()
{

    for(int i=0;i&lt;=100;i++){

        cout &lt;&lt;&quot;floor sqrt(&quot;&lt;&lt; i &lt;&lt;&quot;) = &quot;
        &lt;&lt; sqrt_floor(i)&lt;&lt;endl;
        cout &lt;&lt;&quot;round sqrt = &quot;&lt;&lt; sqrt_round(i)&lt;&lt;endl;
        cout &lt;&lt;&quot;ciel sqrt = &quot;&lt;&lt;sqrt_ciel(i)&lt;&lt;endl;
        cout &lt;&lt;&quot;double sqrt =&quot;&lt;&lt;sqrt(i) &lt;&lt;endl;
    }
    return 0;
}
</code></pre>
<p><strong>5. &#x4E8C;&#x53C9;&#x6811;&#x7684;&#x904D;&#x5386;&#x7B97;&#x6CD5;</strong></p>
<p>&#x4E8C;&#x53C9;&#x6811;&#x662F;&#x6BCF;&#x4E2A;&#x7ED3;&#x70B9;&#x6700;&#x591A;&#x6709;&#x4E24;&#x4E2A;&#x5B50;&#x6811;&#x7684;&#x6709;&#x5E8F;&#x6811;&#x3002;&#x901A;&#x5E38;&#x5B50;&#x6811;&#x7684;&#x6839;&#x88AB;&#x79F0;&#x4F5C;&#x201C;&#x5DE6;&#x5B50;&#x6811;&#x201D;&#xFF08;left subtree&#xFF09;&#x548C;&#x201C;&#x53F3;&#x5B50;&#x6811;&#x201D;&#xFF08;right subtree&#xFF09;&#x3002;&#x4E8C;&#x53C9;&#x6811;&#x5E38;&#x88AB;&#x7528;&#x4F5C;&#x4E8C;&#x53C9;&#x67E5;&#x627E;&#x6811;&#x548C;&#x4E8C;&#x53C9;&#x5806;&#x6216;&#x662F;&#x4E8C;&#x53C9;&#x6392;&#x5E8F;&#x6811;&#x3002;&#x4E8C;&#x53C9;&#x6811;&#x7684;&#x6BCF;&#x4E2A;&#x7ED3;&#x70B9;&#x81F3;&#x591A;&#x53EA;&#x6709;&#x4E8C;&#x68F5;&#x5B50;&#x6811;(&#x4E0D;&#x5B58;&#x5728;&#x5EA6;&#x5927;&#x4E8E;2&#x7684;&#x7ED3;&#x70B9;)&#xFF0C;&#x4E8C;&#x53C9;&#x6811;&#x7684;&#x5B50;&#x6811;&#x6709;&#x5DE6;&#x53F3;&#x4E4B;&#x5206;&#xFF0C;&#x6B21;&#x5E8F;&#x4E0D;&#x80FD;&#x98A0;&#x5012;&#x3002;&#x4E8C;&#x53C9;&#x6811;&#x7684;&#x7B2C;i&#x5C42;&#x81F3;&#x591A;&#x6709;2&#x7684; i -1&#x6B21;&#x65B9;&#x4E2A;&#x7ED3;&#x70B9;&#xFF1B;&#x6DF1;&#x5EA6;&#x4E3A;k&#x7684;&#x4E8C;&#x53C9;&#x6811;&#x81F3;&#x591A;&#x6709;2^(k) -1&#x4E2A;&#x7ED3;&#x70B9;&#xFF1B;&#x5BF9;&#x4EFB;&#x4F55;&#x4E00;&#x68F5;&#x4E8C;&#x53C9;&#x6811;T&#xFF0C;&#x5982;&#x679C;&#x5176;&#x7EC8;&#x7AEF;&#x7ED3;&#x70B9;&#x6570;(&#x5373;&#x53F6;&#x5B50;&#x7ED3;&#x70B9;&#x6570;)&#x4E3A;n0&#xFF0C;&#x5EA6;&#x4E3A;2&#x7684;&#x7ED3;&#x70B9;&#x6570;&#x4E3A;n2&#xFF0C;&#x5219;n0 = n2 + 1&#x3002;</p>
<p>&#x5177;&#x4F53;&#x8BF7;&#x770B;&#xFF1A;</p>
<ul>
<li><a href="http://blog.csdn.net/sjf0115/article/details/8645991" target="_blank" rel="external nofollow noopener noreferrer">http://blog.csdn.net/sjf0115/article/details/8645991</a></li>
<li><a href="http://blog.csdn.net/pony_maggie/article/details/38390513" target="_blank" rel="external nofollow noopener noreferrer">http://blog.csdn.net/pony_maggie/article/details/38390513</a></li>
</ul>
<p><strong>6. DFS,BFS&#x7B97;&#x6CD5;</strong></p>
<p>&#x5173;&#x4E8E;&#x56FE;&#x7684;&#x641C;&#x7D22;&#x6709;&#x4E24;&#x79CD;&#xFF1A;&#x5E7F;&#x5EA6;&#x4F18;&#x5148;&#xFF08;bfs&#xFF09;&#x6DF1;&#x5EA6;&#x4F18;&#x5148; &#xFF08;dfs&#xFF09;&#x3002;<br>
&#x4EE5;&#x4E0B;&#x56FE;&#x4E3A;&#x4F8B;&#xFF1A;</p>
<div align="center">
<img data-original="/2017/05/31/java-interview-algorithm/bfs-dfs.png" class="lazy">
</div>
<p>&#x6DF1;&#x5EA6;&#x4F18;&#x5148;&#x7684;&#x57FA;&#x672C;&#x601D;&#x60F3;&#x7B80;&#x5355;&#x8BF4;&#x5C31;&#x662F;&#x641C;&#x5230;&#x5E95;&#xFF0C;&#x91CD;&#x65B0;&#x641C;&#x3002;&#x4ECE;v0&#x4E3A;&#x8D77;&#x70B9;&#x8FDB;&#x884C;&#x641C;&#x7D22;&#xFF0C;&#x5982;&#x679C;&#x88AB;&#x8BBF;&#x95EE;&#x8FC7;&#xFF0C;&#x5219;&#x505A;&#x4E00;&#x4E2A;&#x6807;&#x8BB0;&#xFF0C;&#x76F4;&#x5230;&#x4E0E;v0&#x60F3;&#x8FDE;&#x901A;&#x7684;&#x70B9;&#x90FD;&#x88AB;&#x8BBF;&#x95EE;&#x4E00;&#x904D;&#xFF0C;&#x5982;&#x679C;&#x8FD9;&#x65F6;&#xFF0C;&#x4ECD;&#x7136;&#x6709;&#x70B9;&#x6CA1;&#x88AB;&#x8BBF;&#x95EE;&#xFF0C;&#x53EF;&#x4EE5;&#x4ECE;&#x4E2D;&#x9009;&#x4E00;&#x4E2A;&#x9876;&#x70B9;&#xFF0C;&#x8FDB;&#x884C;&#x518D;&#x4E00;&#x6B21;&#x7684;&#x641C;&#x7D22;&#xFF0C;&#x91CD;&#x590D;&#x4E0A;&#x8FF0;&#x8FC7;&#x7A0B;&#xFF0C;&#x6240;&#x4EE5;&#x6DF1;&#x5EA6;&#x4F18;&#x5148;&#x7684;&#x8FC7;&#x7A0B;&#x4E5F;&#x662F;&#x9012;&#x5F52;&#x7684;&#x8FC7;&#x7A0B;&#x3002;<br>
&#x6DF1;&#x5EA6;&#x4F18;&#x5148;&#x8BBF;&#x95EE;&#x7684;&#x7ED3;&#x679C;&#x662F;&#xFF1A;0-&gt;1-&gt;3-&gt;7-&gt;4-&gt;2-&gt;5-&gt;6</p>
<p>&#x5E7F;&#x5EA6;&#x4F18;&#x5148;&#x7684;&#x57FA;&#x672C;&#x601D;&#x60F3;&#x662F;&#xFF0C;&#x4ECE;&#x9876;&#x70B9;v0&#x51FA;&#x53D1;&#xFF0C;&#x8BBF;&#x95EE;&#x4E0E;v0&#x76F8;&#x90BB;&#x7684;&#x70B9;&#xFF0C;&#x8BBF;&#x95EE;&#x7ED3;&#x675F;&#x540E;&#xFF0C;&#x518D;&#x4ECE;&#x8FD9;&#x4E9B;&#x70B9;&#x51FA;&#x53D1;&#xFF0C;&#x7EE7;&#x7EED;&#x8BBF;&#x95EE;&#xFF0C;&#x76F4;&#x5230;&#x8BBF;&#x95EE;&#x7ED3;&#x675F;&#x4E3A;&#x6B62;&#x3002;&#x6807;&#x8BB0;&#x88AB;&#x8BBF;&#x95EE;&#x8FC7;&#x7684;&#x70B9;&#x540C;&#x6DF1;&#x641C;&#x4E00;&#x4E0B;&#xFF0C;&#x4E0D;&#x8FC7;&#xFF0C;&#x5E7F;&#x5EA6;&#x4F18;&#x5148;&#x4E00;&#x822C;&#x9700;&#x8981;&#x7528;&#x5230;&#x961F;&#x5217;&#x3002;<br>
&#x4E0A;&#x56FE;&#x5E7F;&#x5EA6;&#x4F18;&#x5148;&#x7684;&#x7ED3;&#x679C;&#xFF1A;0-&gt;1-&gt;2-&gt;3-&gt;4-&gt;5-&gt;6-&gt;7</p>
<pre><code>#include&lt;cstdio&gt;
#include&lt;iostream&gt;
#include&lt;cstring&gt;
#include&lt;algorithm&gt;
#include&lt;queue&gt;
#include&lt;stack&gt;
#define maxn 100
using namespace std;

typedef struct
{
    int edges[maxn][maxn];  //&#x90BB;&#x63A5;&#x77E9;&#x9635;
    int n;   //&#x9876;&#x70B9;&#x6570;
    int e;    //&#x8FB9;&#x6570;
}MGraph;

bool vis[maxn];  //&#x6807;&#x8BB0;&#x9876;&#x70B9;&#x662F;&#x5426;&#x88AB;&#x8BBF;&#x95EE;&#x8FC7;
void createGraph(MGraph &amp;G) //&#x7528;&#x5F15;&#x7528;&#x505A;&#x53C2;&#x6570;
{
    int i,j;
    int s,t;  //&#x5B58;&#x50A8;&#x9876;&#x70B9;&#x7684;&#x7F16;&#x53F7;
    int v;  //&#x5B58;&#x50A8;&#x8FB9;&#x7684;&#x6743;&#x503C;
    for(i=0;i&lt;G.n;i++)  //&#x521D;&#x59CB;&#x5316;
    {
        for(j=0;j&lt;G.n;j++)
        {
            G.edges[i][j] = 0;
        }
        vis[i] = false;
    }
    for(i = 0;i&lt;G.e;i++) //&#x5BF9;&#x90BB;&#x63A5;&#x77E9;&#x9635;&#x7684;&#x8FB9;&#x8D4B;&#x503C;
    {
        scanf(&quot;%d%d%d&quot;,&amp;s,&amp;t,&amp;v);  //&#x8F93;&#x5165;&#x8FB9;&#x9876;&#x70B9;&#x7684;&#x7F16;&#x53F7;&#x4EE5;&#x53CA;&#x6743;&#x503C;
        G.edges[s][t] = v;
    }
}
void dfs(MGraph G,int v)
{
    int i;
    printf(&quot;%d &quot;,v);  //&#x8BBF;&#x95EE;&#x7ED3;&#x70B9;v
    vis[v] = true;
    for(int i = 0;i&lt;G.n;i++) //&#x8BBF;&#x95EE;&#x4E0E;v&#x76F8;&#x90BB;&#x4E14;&#x672A;&#x88AB;&#x8BBF;&#x95EE;&#x8FC7;&#x7684;&#x7ED3;&#x70B9;
    {
        if(G.edges[v][i]!=0&amp;&amp;vis[i]==false)
        {
            dfs(G,i);
        }
    }
}
void dfs1(MGraph G,int v)   //&#x975E;&#x9012;&#x5F52;&#x5B9E;&#x73B0;(&#x7528;&#x5230;&#x4E86;&#x6808;&#xFF0C;&#x5176;&#x5B9E;&#x5728;&#x9012;&#x5F52;&#x7684;&#x5B9E;&#x73B0;&#x8FC7;&#x7A0B;&#xFF0C;&#x4ECD;&#x662F;&#x7528;&#x5230;&#x4E86;&#x6808;&#xFF0C;&#x6240;&#x4EE5;&#x3002;&#x3002;&#x3002;)
{
    stack&lt;int&gt; s;
    printf(&quot;%d&quot;,v);  //&#x8BBF;&#x95EE;&#x521D;&#x59CB;&#x7684;&#x7ED3;&#x70B9;
    vis[v]=true;
    s.push(v);  //&#x5165;&#x6808;
    while(!s.empty())
    {
        int i,j;
        i=s.top();  //&#x53D6;&#x6808;&#x9876;&#x9876;&#x70B9;
        for(j=0;j&lt;G.n;j++) //&#x8BBF;&#x95EE;&#x4E0E;&#x9876;&#x70B9;i&#x76F8;&#x90BB;&#x7684;&#x9876;&#x70B9;
        {
            if(G.edges[i][j]!=0&amp;&amp;vis[j]==false)
            {
                printf(&quot;%d &quot;,j); //&#x8BBF;&#x95EE;
                vis[j]=true;
                s.push(j);  //&#x8BBF;&#x95EE;&#x5B8C;&#x540E;&#x5165;&#x6808;
                break; //&#x627E;&#x5230;&#x4E00;&#x4E2A;&#x76F8;&#x90BB;&#x672A;&#x8BBF;&#x95EE;&#x7684;&#x9876;&#x70B9;&#xFF0C;&#x8BBF;&#x95EE;&#x4E4B;&#x540E;&#x8DF3;&#x51FA;&#x5FAA;&#x73AF;
            }
        }
        if(j==G.n)   //&#x5982;&#x679C;&#x4E0E;i&#x76F8;&#x90BB;&#x7684;&#x9876;&#x70B9;&#x90FD;&#x88AB;&#x8BBF;&#x95EE;&#x8FC7;&#xFF0C;&#x5219;&#x5C06;&#x9876;&#x70B9;i&#x51FA;&#x6808;
            s.pop();
    }
}
void bfs(MGraph G,int v)
{
    queue&lt;int&gt; Q;
    printf(&quot;%d&quot;,v);
    vis[v] = true;
    Q.push(v);
    while(!Q.empty())
    {
        int i,j;
        i = Q.front();  //&#x53D6;&#x961F;&#x9996;&#x9876;&#x70B9;
        Q.pop();
        for(j=0;j&lt;G.n;j++) //&#x5E7F;&#x5EA6;&#x904D;&#x5386;
        {
            if(G.edges[i][j]!=0&amp;&amp;vis[j]==false)
            {
                printf(&quot;%d&quot;,j);
                vis[j]=true;
                Q.push(j);
            }
        }
    }
}
int main()
{
int n,e; //&#x5EFA;&#x56FE;&#x7684;&#x9876;&#x70B9;&#x6570;&#x548C;&#x8FB9;&#x6570;
while(scanf(&quot;%d%d&quot;,&amp;n,&amp;e)==2&amp;&amp;n&gt;0)
{
    MGraph G;
    G.n = n;
    G.e = e;
    createGraph(G);
    dfs(G,0);
    printf(&quot;\n&quot;);
 //   dfs1(G,0);
 //   printf(&quot;\n&quot;);
  //  bfs(G,0);
  //  printf(&quot;\n&quot;);

}

return 0;
}
/*&#x6D4B;&#x8BD5;&#x6570;&#x636E;&#xFF1A;
9
1 1
3 1
4 1
7 1
7 1
2 1
5 1
6 1
6 1
*/
</code></pre>
<p><strong>7. &#x6BD4;&#x8F83;&#x91CD;&#x8981;&#x7684;&#x6570;&#x636E;&#x7ED3;&#x6784;&#xFF0C;&#x5982;&#x94FE;&#x8868;&#xFF0C;&#x961F;&#x5217;&#xFF0C;&#x6808;&#x7684;&#x57FA;&#x672C;&#x7406;&#x89E3;&#x53CA;&#x5927;&#x81F4;&#x5B9E;&#x73B0;&#x3002;</strong></p>
<p>&#x5355;&#x5411;&#x94FE;&#x8868;&#xFF1A;</p>
<pre><code>public class LinkedList {
    private Node head;
    private Stack s;
    LinkedList(){
        head = null;
        s = new Stack();
    }
    private static class Node{
        int item;
        Node next;

        Node(){
            this.item = 0;
            this.next = null;
        }
        Node(int item, Node next){
            this.item = item;
            this.next = next;
        }
    }

    public void insert(int x){
        Node node = new  Node(x, null);
        Node p = head;
        // &#x6CE8;&#x610F;&#x94FE;&#x8868;&#x4E3A;&#x7A7A;&#x7684;&#x65F6;&#x5019;&#x7684;&#x63D2;&#x5165;
        if(head==null){
            head = node;
        }
        // &#x5C3E;&#x63D2;&#x6CD5;
        else{
            while(p.next != null){
                p = p.next;
            }
            p.next = node;
        }
    }
    public void travese(Node head){
        Node p = head;
        while(p!=null){
            System.out.println(p.item);
            p = p.next;
        }
    }

</code></pre>
<p>&#x53CC;&#x5411;&#x94FE;&#x8868;&#xFF1A;</p>
<pre><code>public class DoubleLinkedList {
    // &#x54E8;&#x5175;&#x8282;&#x70B9;nil(&#x4F5C;&#x4E3A;&#x8868;&#x5934;&#x6307;&#x9488;)
    private Node nil;
    // &#x521D;&#x59CB;&#x5316;&#x4E00;&#x4E2A;&#x94FE;&#x8868;
    DoubleLinkedList(){
        nil = new Node();
        nil.next = nil;
        nil.prev = nil;
        count = 0;
    }
    // &#x94FE;&#x8868;&#x957F;&#x5EA6;
    private int count;
    private static class Node{
        int item;
        Node next;
        Node prev;

        Node(){
            item = 0;
            next = null;
            prev = null;
        }
        Node(int item, Node next, Node prev){
            this.item = item;
            this.next = next;
            this.prev = prev;
        }
    }

    //&#x8FD4;&#x56DE;&#x5F53;&#x524D;&#x94FE;&#x8868;&#x7684;&#x957F;&#x5EA6;
    public int length(){
        return count;
    }

    //&#x83B7;&#x53D6;value&#x4E3A;k&#x7684;&#x8282;&#x70B9;
    public Node listsearch(int k){
        Node result = null;
        Node head = nil;
        while(head.next != nil){
            if(head.next.item == k){
                result = head.next;
                break;
            }
            else
                head = head.next;
        }
        return result;
    }

    //&#x63D2;&#x5165;&#x4E00;&#x4E2A;&#x8282;&#x70B9;&#x5728;&#x961F;&#x9996;
    public void listinsert(Node node){
            node.next = nil.next;
            nil.next.prev = node;
            nil.next = node;
            node.prev = nil;
            count++;
    }
    //&#x6839;&#x636E;value&#x5220;&#x9664;&#x4E00;&#x4E2A;&#x8282;&#x70B9;
    public Node listdelete(Node node){
        Node head = nil;
        Node nodetodelete;
        while(head.next!=nil){
            if(head.next.item == node.item){
                nodetodelete = head.next; //&#x5C06;&#x8981;&#x5220;&#x9664;&#x7684;&#x8282;&#x70B9;
                head.next = nodetodelete.next;
                nodetodelete.next.prev  = head;
                nodetodelete = null;

                count--;
            }
            else{
                head = head.next;
            }
        }
        return node;
    }
    //&#x8F93;&#x51FA;&#x94FE;&#x8868;
    public void traverse(){
        Node head = nil;
        while( head.next!= nil){
            System.out.println(head.next.item);
            head = head.next;
        }
    }
</code></pre>
<p>&#x961F;&#x5217;&#xFF1A;</p>
<pre><code>public class Queue {
    private int[] array = new int[4];
    private int head = 1;
    private int tail = 1;
    //&#x5165;&#x961F;
    public void enqueue(int x){
        //&#x5904;&#x7406;&#x4E0A;&#x6EA2;
        try{
            if(head != tail +1){
                array[tail++] = x;
                if(tail == array.length){
                    tail = 0;
                }
            }
            else{
                System.out.println(&quot;overflow&quot;);
                throw new Exception(&quot;queue overflow&quot;);
            }
        }catch(Exception e){
            e.printStackTrace();
        }
    }
    //&#x51FA;&#x961F;
    public int dequeue(){
        int number=0;
        try{
            if(tail != head){
                number = array[head];
                head++;
            }
            else{
                throw new Exception(&quot;queue underflow&quot;);
            }

        }catch(Exception e){
            System.out.println(&quot;underflow&quot;);
            e.printStackTrace();
        }
        return number;
    }
</code></pre>
<p>&#x6808;&#xFF1A;</p>
<pre><code>public class Stack {
    private int[] array = new int[5];
    private int top = -1;

    public Boolean stackempty(){
        if(top == -1){
            return true;
        }
        else 
            return false;
    }

    public void push(int x){
        if(top&lt;=array.length-1){
            array[++top] = x;
        }
        else{
            System.out.println(&quot;overflow&quot;);
        }
    }
    public int pop() {
        int number = -1;
        if(stackempty() != true){
            number = array[top];
            top--;
            return number;
        }
        else
        {
            System.out.println(&quot;underflow&quot;);
            return -1;
        }
    }
</code></pre>
<p>&#x5177;&#x4F53;&#x8BF7;&#x770B;&#xFF1A;</p>
<ul>
<li><a href="https://segmentfault.com/a/1190000002602101" target="_blank" rel="external nofollow noopener noreferrer">https://segmentfault.com/a/1190000002602101</a></li>
<li><a href="http://blog.csdn.net/amork/article/details/7258216" target="_blank" rel="external nofollow noopener noreferrer">http://blog.csdn.net/amork/article/details/7258216</a></li>
</ul>
<p><strong>8. &#x5FEB;&#x6392;&#x4E3A;&#x4EC0;&#x4E48;&#x4E0D;&#x7A33;&#x5B9A;&#xFF0C;&#x4E3A;&#x4EC0;&#x4E48;&#x4F60;&#x7684;&#x9879;&#x76EE;&#x8FD8;&#x5728;&#x7528;</strong></p>
<p>&#x6392;&#x5E8F;&#x7B97;&#x6CD5;&#x7A33;&#x5B9A;&#x5B9A;&#x4E49;&#x662F;:&#x5047;&#x5B9A;&#x5728;&#x5F85;&#x6392;&#x5E8F;&#x7684;&#x8BB0;&#x5F55;&#x5E8F;&#x5217;&#x4E2D;&#xFF0C;&#x5B58;&#x5728;&#x591A;&#x4E2A;&#x5177;&#x6709;&#x76F8;&#x540C;&#x7684;&#x5173;&#x952E;&#x5B57;&#x7684;&#x8BB0;&#x5F55;&#xFF0C;&#x82E5;&#x7ECF;&#x8FC7;&#x6392;&#x5E8F;&#xFF0C;&#x8FD9;&#x4E9B;&#x8BB0;&#x5F55;&#x7684;&#x76F8;&#x5BF9;&#x6B21;&#x5E8F;&#x4FDD;&#x6301;&#x4E0D;&#x53D8;&#xFF0C;&#x5373;&#x5728;&#x539F;&#x5E8F;&#x5217;&#x4E2D;&#xFF0C;ri=rj&#xFF0C;&#x4E14;ri&#x5728;rj&#x4E4B;&#x524D;&#xFF0C;&#x800C;&#x5728;&#x6392;&#x5E8F;&#x540E;&#x7684;&#x5E8F;&#x5217;&#x4E2D;&#xFF0C;ri&#x4ECD;&#x5728;rj&#x4E4B;&#x524D;&#xFF0C;&#x5219;&#x79F0;&#x8FD9;&#x79CD;&#x6392;&#x5E8F;&#x7B97;&#x6CD5;&#x662F;&#x7A33;&#x5B9A;&#x7684;&#xFF1B;&#x5426;&#x5219;&#x79F0;&#x4E3A;&#x4E0D;&#x7A33;&#x5B9A;&#x7684;&#x3002;</p>
<p>&#x5FEB;&#x901F;&#x6392;&#x5E8F;&#x662F;&#x4ECE;&#x5934;&#x548C;&#x5C3E;&#x5F00;&#x59CB;&#x5BF9;&#x5143;&#x7D20;&#x8FDB;&#x884C;&#x6BD4;&#x8F83;&#xFF0C;&#x6709;&#x53EF;&#x80FD;&#x628A;&#x5173;&#x952E;&#x503C;&#x76F8;&#x540C;&#x7684;&#x4E24;&#x4E2A;&#x5143;&#x7D20;&#x8C03;&#x6362;&#x4E86;&#x4F4D;&#x7F6E;&#xFF0C;&#x6240;&#x4EE5;&#x8BF4;&#x662F;&#x4E0D;&#x7A33;&#x5B9A;&#x7684;&#xFF0C;&#x6BD4;&#x5982;&#x5BF9; 2 4 1 3 1&#x8FDB;&#x884C;&#x6392;&#x5E8F;&#xFF0C;&#x7B2C;&#x4E00;&#x8D9F;&#x5C31;&#x628A;&#x540E;&#x9762;&#x7684;1&#x6362;&#x5230;&#x524D;&#x9762;&#x53BB;&#xFF0C;&#x5F62;&#x6210;&#x4E86;&#x4E0D;&#x7A33;&#x5B9A;&#x6392;&#x5E8F;</p>
<p><strong>9. &#x9006;&#x6CE2;&#x5170;&#x8BA1;&#x7B97;&#x5668;</strong></p>
<p>&#x6D89;&#x53CA;&#x5230;&#x4E2D;&#x7F00;&#x8868;&#x8FBE;&#x5F0F;&#xFF0C;&#x6CE2;&#x5170;&#x8868;&#x8FBE;&#x5F0F;&#x3001;&#x9006;&#x6CE2;&#x5170;&#x8868;&#x8FBE;&#x5F0F;</p>
<p>&#x5177;&#x4F53;&#x8BF7;&#x770B;&#xFF1A; <a href="http://blog.csdn.net/Leoamy/article/details/51217362" target="_blank" rel="external nofollow noopener noreferrer">http://blog.csdn.net/Leoamy/article/details/51217362</a></p>
<p><strong>10. Hoffman &#x7F16;&#x7801;</strong></p>
<p>&#x970D;&#x592B;&#x66FC;&#x7F16;&#x7801;&#xFF08;Huffman Coding&#xFF09;&#x662F;&#x4E00;&#x79CD;&#x7F16;&#x7801;&#x65B9;&#x5F0F;&#xFF0C;&#x662F;&#x4E00;&#x79CD;&#x7528;&#x4E8E;&#x65E0;&#x635F;&#x6570;&#x636E;&#x538B;&#x7F29;&#x7684;&#x71B5;&#x7F16;&#x7801;&#xFF08;&#x6743;&#x7F16;&#x7801;&#xFF09;&#x7B97;&#x6CD5;&#x3002;1952&#x5E74;&#xFF0C;David A. Huffman&#x5728;&#x9EBB;&#x7701;&#x7406;&#x5DE5;&#x653B;&#x8BFB;&#x535A;&#x58EB;&#x65F6;&#x6240;&#x53D1;&#x660E;&#x7684;&#xFF0C;&#x5E76;&#x53D1;&#x8868;&#x4E8E;&#x300A;&#x4E00;&#x79CD;&#x6784;&#x5EFA;&#x6781;&#x5C0F;&#x591A;&#x4F59;&#x7F16;&#x7801;&#x7684;&#x65B9;&#x6CD5;&#x300B;&#xFF08;A Method for the Construction of Minimum-Redundancy Codes&#xFF09;&#x4E00;&#x6587;&#x3002;</p>
<p>&#x5728;&#x8BA1;&#x7B97;&#x673A;&#x6570;&#x636E;&#x5904;&#x7406;&#x4E2D;&#xFF0C;&#x970D;&#x592B;&#x66FC;&#x7F16;&#x7801;&#x4F7F;&#x7528;&#x53D8;&#x957F;&#x7F16;&#x7801;&#x8868;&#x5BF9;&#x6E90;&#x7B26;&#x53F7;&#xFF08;&#x5982;&#x6587;&#x4EF6;&#x4E2D;&#x7684;&#x4E00;&#x4E2A;&#x5B57;&#x6BCD;&#xFF09;&#x8FDB;&#x884C;&#x7F16;&#x7801;&#xFF0C;&#x5176;&#x4E2D;&#x53D8;&#x957F;&#x7F16;&#x7801;&#x8868;&#x662F;&#x901A;&#x8FC7;&#x4E00;&#x79CD;&#x8BC4;&#x4F30;&#x6765;&#x6E90;&#x7B26;&#x53F7;&#x51FA;&#x73B0;&#x673A;&#x7387;&#x7684;&#x65B9;&#x6CD5;&#x5F97;&#x5230;&#x7684;&#xFF0C;&#x51FA;&#x73B0;&#x673A;&#x7387;&#x9AD8;&#x7684;&#x5B57;&#x6BCD;&#x4F7F;&#x7528;&#x8F83;&#x77ED;&#x7684;&#x7F16;&#x7801;&#xFF0C;&#x53CD;&#x4E4B;&#x51FA;&#x73B0;&#x673A;&#x7387;&#x4F4E;&#x7684;&#x5219;&#x4F7F;&#x7528;&#x8F83;&#x957F;&#x7684;&#x7F16;&#x7801;&#xFF0C;&#x8FD9;&#x4FBF;&#x4F7F;&#x7F16;&#x7801;&#x4E4B;&#x540E;&#x7684;&#x5B57;&#x7B26;&#x4E32;&#x7684;&#x5E73;&#x5747;&#x957F;&#x5EA6;&#x3001;&#x671F;&#x671B;&#x503C;&#x964D;&#x4F4E;&#xFF0C;&#x4ECE;&#x800C;&#x8FBE;&#x5230;&#x65E0;&#x635F;&#x538B;&#x7F29;&#x6570;&#x636E;&#x7684;&#x76EE;&#x7684;&#x3002;</p>
<p><strong>11. &#x67E5;&#x627E;&#x6811;&#x4E0E;&#x7EA2;&#x9ED1;&#x6811;</strong></p>
<p>&#xFF08;1&#xFF09;&#x4E8C;&#x53C9;&#x67E5;&#x627E;&#x6811;</p>
<p>&#x4E8C;&#x53C9;&#x641C;&#x7D22;&#x6811;&#x662F;&#x4E00;&#x79CD;&#x7279;&#x6B8A;&#x7684;&#x4E8C;&#x53C9;&#x6811;&#xFF0C;&#x5373;&#xFF1A;&#x8282;&#x70B9;&#x7684;&#x5DE6;&#x5B50;&#x8282;&#x70B9;&#x7684;&#x503C;&#x90FD;&#x5C0F;&#x4E8E;&#x8FD9;&#x4E2A;&#x8282;&#x70B9;&#x7684;&#x503C;&#xFF0C;&#x8282;&#x70B9;&#x7684;&#x53F3;&#x5B50;&#x8282;&#x70B9;&#x7684;&#x503C;&#x90FD;&#x5927;&#x4E8E;&#x7B49;&#x4E8E;&#x8FD9;&#x4E2A;&#x8282;&#x70B9;&#x7684;&#x503C;&#x3002;</p>
<p>&#x641C;&#x7D22;&#x4E8C;&#x53C9;&#x6811;&#x6709;&#x4E00;&#x4E2A;&#x7279;&#x70B9;&#xFF0C;&#x5373;&#x5982;&#x679C;&#x4F7F;&#x7528;&#x4E2D;&#x5E8F;&#x904D;&#x5386;&#x904D;&#x5386;&#x641C;&#x7D22;&#x4E8C;&#x53C9;&#x6811;&#xFF0C;&#x5C06;&#x5F97;&#x5230;&#x5305;&#x542B;&#x641C;&#x7D22;&#x4E8C;&#x53C9;&#x6811;&#x4E2D;&#x6240;&#x6709;&#x8282;&#x70B9;&#x503C;&#x7684;&#x5347;&#x5E8F;&#x6392;&#x5E8F;&#x7ED3;&#x679C;&#x3002;</p>
<p>&#x6811;&#x7684;&#x5927;&#x90E8;&#x5206;&#x64CD;&#x4F5C;&#x9700;&#x8981;&#x4ECE;&#x4E0A;&#x81F3;&#x4E0B;&#x4E00;&#x5C42;&#x5C42;&#x7684;&#x67E5;&#x627E;&#x6811;&#x7684;&#x8282;&#x70B9;&#xFF0C;&#x5BF9;&#x4E8E;&#x4E00;&#x68F5;&#x6EE1;&#x6811;&#xFF0C;&#x5927;&#x7EA6;&#x6709;&#x4E00;&#x534A;&#x7684;&#x8282;&#x70B9;&#x5904;&#x4E8E;&#x6700;&#x5E95;&#x5C42;&#xFF08;&#x6700;&#x5E95;&#x5C42;&#x8282;&#x70B9;&#x6570; = &#x5176;&#x5B83;&#x5C42;&#x8282;&#x70B9;&#x6570;&#x7684;&#x548C; + 1&#xFF09;&#xFF0C;&#x6545;&#x8282;&#x70B9;&#x64CD;&#x4F5C;&#x5927;&#x7EA6;&#x6709;&#x4E00;&#x534A;&#x9700;&#x8981;&#x627E;&#x5230;&#x6700;&#x5E95;&#x5C42;&#x8282;&#x70B9;&#xFF0C;&#x5927;&#x7EA6;&#x6709;&#x56DB;&#x5206;&#x4E4B;&#x4E00;&#x7684;&#x8282;&#x70B9;&#x5904;&#x4E8E;&#x5012;&#x6570;&#x7B2C;&#x4E8C;&#x5C42;&#xFF0C;&#x6545;&#x8282;&#x70B9;&#x64CD;&#x4F5C;&#x5927;&#x7EA6;&#x6709;&#x56DB;&#x5206;&#x4E4B;&#x4E00;&#x9700;&#x8981;&#x627E;&#x5230;&#x5012;&#x6570;&#x7B2C;&#x4E8C;&#x5C42;&#x8282;&#x70B9;&#xFF0C;&#x4F9D;&#x6B64;&#x7C7B;&#x63A8;</p>
<p>&#x67E5;&#x627E;&#x8FC7;&#x7A0B;&#x4E2D;&#xFF0C;&#x9700;&#x8981;&#x8BBF;&#x95EE;&#x6BCF;&#x4E00;&#x5C42;&#x7684;&#x8282;&#x70B9;&#xFF0C;&#x6545;&#x53EA;&#x8981;&#x77E5;&#x9053;&#x4E86;&#x67E5;&#x627E;&#x7684;&#x5C42;&#x6570;&#xFF0C;&#x5C31;&#x80FD;&#x77E5;&#x9053;&#x64CD;&#x4F5C;&#x6240;&#x9700;&#x7684;&#x65F6;&#x95F4;&#xFF0C;&#x5982;&#x679C;&#x8282;&#x70B9;&#x603B;&#x6570;&#x4E3A;N&#xFF0C;&#x5C42;&#x6570;&#x4E3A;L&#xFF0C;L=log2(N+1)</p>
<p>&#x603B;&#x7684;&#x6765;&#x8BF4;&#x53EF;&#x4EE5;&#x8BA4;&#x4E3A;&#x4E8C;&#x53C9;&#x641C;&#x7D22;&#x6811;&#x64CD;&#x4F5C;&#x7684;&#x65F6;&#x95F4;&#x590D;&#x6742;&#x5EA6;&#x4E3A;&#x4E3A;O(logN)</p>
<p>&#x5177;&#x4F53;&#x8BF7;&#x770B;&#xFF1A; <a href="http://www.cnblogs.com/fingerboy/p/5493786.html" target="_blank" rel="external nofollow noopener noreferrer">http://www.cnblogs.com/fingerboy/p/5493786.html</a></p>
<p>&#xFF08;2&#xFF09;&#x7EA2;&#x9ED1;&#x6811;</p>
<p>&#x7EA2;&#x9ED1;&#x6811;(Red-Black Tree&#xFF0C;&#x7B80;&#x79F0;R-B Tree)&#xFF0C;&#x5B83;&#x4E00;&#x79CD;&#x7279;&#x6B8A;&#x7684;&#x4E8C;&#x53C9;&#x67E5;&#x627E;&#x6811;&#x3002;<br>
&#x7EA2;&#x9ED1;&#x6811;&#x662F;&#x7279;&#x6B8A;&#x7684;&#x4E8C;&#x53C9;&#x67E5;&#x627E;&#x6811;&#xFF0C;&#x610F;&#x5473;&#x7740;&#x5B83;&#x6EE1;&#x8DB3;&#x4E8C;&#x53C9;&#x67E5;&#x627E;&#x6811;&#x7684;&#x7279;&#x5F81;&#xFF1A;&#x4EFB;&#x610F;&#x4E00;&#x4E2A;&#x8282;&#x70B9;&#x6240;&#x5305;&#x542B;&#x7684;&#x952E;&#x503C;&#xFF0C;&#x5927;&#x4E8E;&#x7B49;&#x4E8E;&#x5DE6;&#x5B69;&#x5B50;&#x7684;&#x952E;&#x503C;&#xFF0C;&#x5C0F;&#x4E8E;&#x7B49;&#x4E8E;&#x53F3;&#x5B69;&#x5B50;&#x7684;&#x952E;&#x503C;&#x3002;<br>
&#x9664;&#x4E86;&#x5177;&#x5907;&#x8BE5;&#x7279;&#x6027;&#x4E4B;&#x5916;&#xFF0C;&#x7EA2;&#x9ED1;&#x6811;&#x8FD8;&#x5305;&#x62EC;&#x8BB8;&#x591A;&#x989D;&#x5916;&#x7684;&#x4FE1;&#x606F;&#x3002;</p>
<p>&#x7EA2;&#x9ED1;&#x6811;&#x7684;&#x6BCF;&#x4E2A;&#x8282;&#x70B9;&#x4E0A;&#x90FD;&#x6709;&#x5B58;&#x50A8;&#x4F4D;&#x8868;&#x793A;&#x8282;&#x70B9;&#x7684;&#x989C;&#x8272;&#xFF0C;&#x989C;&#x8272;&#x662F;&#x7EA2;(Red)&#x6216;&#x9ED1;(Black)&#x3002;<br>
&#x7EA2;&#x9ED1;&#x6811;&#x7684;&#x7279;&#x6027;:</p>
<ul>
<li>(1) &#x6BCF;&#x4E2A;&#x8282;&#x70B9;&#x6216;&#x8005;&#x662F;&#x9ED1;&#x8272;&#xFF0C;&#x6216;&#x8005;&#x662F;&#x7EA2;&#x8272;&#x3002;</li>
<li>(2) &#x6839;&#x8282;&#x70B9;&#x662F;&#x9ED1;&#x8272;&#x3002;</li>
<li>(3) &#x6BCF;&#x4E2A;&#x53F6;&#x5B50;&#x8282;&#x70B9;&#x662F;&#x9ED1;&#x8272;&#x3002; [&#x6CE8;&#x610F;&#xFF1A;&#x8FD9;&#x91CC;&#x53F6;&#x5B50;&#x8282;&#x70B9;&#xFF0C;&#x662F;&#x6307;&#x4E3A;&#x7A7A;&#x7684;&#x53F6;&#x5B50;&#x8282;&#x70B9;&#xFF01;]</li>
<li>(4) &#x5982;&#x679C;&#x4E00;&#x4E2A;&#x8282;&#x70B9;&#x662F;&#x7EA2;&#x8272;&#x7684;&#xFF0C;&#x5219;&#x5B83;&#x7684;&#x5B50;&#x8282;&#x70B9;&#x5FC5;&#x987B;&#x662F;&#x9ED1;&#x8272;&#x7684;&#x3002;</li>
<li>(5) &#x4ECE;&#x4E00;&#x4E2A;&#x8282;&#x70B9;&#x5230;&#x8BE5;&#x8282;&#x70B9;&#x7684;&#x5B50;&#x5B59;&#x8282;&#x70B9;&#x7684;&#x6240;&#x6709;&#x8DEF;&#x5F84;&#x4E0A;&#x5305;&#x542B;&#x76F8;&#x540C;&#x6570;&#x76EE;&#x7684;&#x9ED1;&#x8282;&#x70B9;&#x3002;</li>
</ul>
<p>&#x5173;&#x4E8E;&#x5B83;&#x7684;&#x7279;&#x6027;&#xFF0C;&#x9700;&#x8981;&#x6CE8;&#x610F;&#x7684;&#x662F;&#xFF1A;</p>
<ul>
<li>&#x7B2C;&#x4E00;&#xFF0C;&#x7279;&#x6027;(3)&#x4E2D;&#x7684;&#x53F6;&#x5B50;&#x8282;&#x70B9;&#xFF0C;&#x662F;&#x53EA;&#x4E3A;&#x7A7A;(NIL&#x6216;null)&#x7684;&#x8282;&#x70B9;&#x3002;</li>
<li>&#x7B2C;&#x4E8C;&#xFF0C;&#x7279;&#x6027;(5)&#xFF0C;&#x786E;&#x4FDD;&#x6CA1;&#x6709;&#x4E00;&#x6761;&#x8DEF;&#x5F84;&#x4F1A;&#x6BD4;&#x5176;&#x4ED6;&#x8DEF;&#x5F84;&#x957F;&#x51FA;&#x4FE9;&#x500D;&#x3002;&#x56E0;&#x800C;&#xFF0C;&#x7EA2;&#x9ED1;&#x6811;&#x662F;&#x76F8;&#x5BF9;&#x662F;&#x63A5;&#x8FD1;&#x5E73;&#x8861;&#x7684;&#x4E8C;&#x53C9;&#x6811;&#x3002;</li>
</ul>
<p>&#x7EA2;&#x9ED1;&#x6811;&#x793A;&#x610F;&#x56FE;&#x5982;&#x4E0B;&#xFF1A;</p>
<div align="center">
<img data-original="/2017/05/31/java-interview-algorithm/rb_tree.png" class="lazy">
</div>
<p>&#x5177;&#x4F53;&#x8BF7;&#x770B;&#xFF1A;</p>
<ul>
<li><a href="http://www.cnblogs.com/skywang12345/p/3624343.html" target="_blank" rel="external nofollow noopener noreferrer">http://www.cnblogs.com/skywang12345/p/3624343.html</a></li>
<li><a href="http://www.cnblogs.com/edwinchen/p/4797055.html" target="_blank" rel="external nofollow noopener noreferrer">http://www.cnblogs.com/edwinchen/p/4797055.html</a></li>
</ul>]]></content>
    
    <summary type="html">
    
      本篇汇总了 Java 面试题中算法部分的知识点，正在持续添加中，方便复习之用......
    
    </summary>
    
      <category term="编程" scheme="http://ngudream.com/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="Java" scheme="http://ngudream.com/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Kotlin 的协程</title>
    <link href="http://ngudream.com/2017/05/31/kotlin-coroutines/"/>
    <id>http://ngudream.com/2017/05/31/kotlin-coroutines/</id>
    <published>2017-05-31T11:53:35.000Z</published>
    <updated>2017-05-31T12:15:05.520Z</updated>
    
    <content type="html"><![CDATA[<p>&#x5728; Kotlin 1.1 &#x4E2D;&#x534F;&#x7A0B;&#x8FD9;&#x4E2A;&#x7279;&#x6027;&#x8FD8;&#x5904;&#x4E8E;&#x5B9E;&#x9A8C;&#x6027;&#x9636;&#x6BB5;&#x3002;&#x8BE6;&#x89C1;<a href="https://www.kotlincn.net/docs/reference/coroutines.html#%E5%8D%8F%E7%A8%8B%E7%9A%84%E5%AE%9E%E9%AA%8C%E6%80%A7%E7%8A%B6%E6%80%81" target="_blank" rel="external nofollow noopener noreferrer">&#x4E0B;&#x6587;</a></p>
<p>&#x4E00;&#x4E9B; API &#x542F;&#x52A8;&#x957F;&#x65F6;&#x95F4;&#x8FD0;&#x884C;&#x7684;&#x64CD;&#x4F5C;&#xFF08;&#x4F8B;&#x5982;&#x7F51;&#x7EDC; IO&#x3001;&#x6587;&#x4EF6; IO&#x3001;CPU &#x6216; GPU &#x5BC6;&#x96C6;&#x578B;&#x4EFB;&#x52A1;&#x7B49;&#xFF09;&#xFF0C;&#x5E76;&#x8981;&#x6C42;&#x8C03;&#x7528;&#x8005;&#x963B;&#x585E;&#x76F4;&#x5230;&#x5B83;&#x4EEC;&#x5B8C;&#x6210;&#x3002;&#x534F;&#x7A0B;&#x63D0;&#x4F9B;&#x4E86;&#x4E00;&#x79CD;&#x907F;&#x514D;&#x963B;&#x585E;&#x7EBF;&#x7A0B;&#x5E76;&#x7528;&#x66F4;&#x5EC9;&#x4EF7;&#x3001;&#x66F4;&#x53EF;&#x63A7;&#x7684;&#x64CD;&#x4F5C;&#x66FF;&#x4EE3;&#x7EBF;&#x7A0B;&#x963B;&#x585E;&#x7684;&#x65B9;&#x6CD5;&#xFF1A;&#x534F;&#x7A0B;&#x6302;&#x8D77;&#x3002;</p>
<p>&#x534F;&#x7A0B;&#x901A;&#x8FC7;&#x5C06;&#x590D;&#x6742;&#x6027;&#x653E;&#x5165;&#x5E93;&#x6765;&#x7B80;&#x5316;&#x5F02;&#x6B65;&#x7F16;&#x7A0B;&#x3002;&#x7A0B;&#x5E8F;&#x7684;&#x903B;&#x8F91;&#x53EF;&#x4EE5;&#x5728;&#x534F;&#x7A0B;&#x4E2D;&#x987A;&#x5E8F;&#x5730;&#x8868;&#x8FBE;&#xFF0C;&#x800C;&#x5E95;&#x5C42;&#x5E93;&#x4F1A;&#x4E3A;&#x6211;&#x4EEC;&#x89E3;&#x51B3;&#x5176;&#x5F02;&#x6B65;&#x6027;&#x3002;&#x8BE5;&#x5E93;&#x53EF;&#x4EE5;&#x5C06;&#x7528;&#x6237;&#x4EE3;&#x7801;&#x7684;&#x76F8;&#x5173;&#x90E8;&#x5206;&#x5305;&#x88C5;&#x4E3A;&#x56DE;&#x8C03;&#x3001;&#x8BA2;&#x9605;&#x76F8;&#x5173;&#x4E8B;&#x4EF6;&#x3001;&#x5728;&#x4E0D;&#x540C;&#x7EBF;&#x7A0B;&#xFF08;&#x751A;&#x81F3;&#x4E0D;&#x540C;&#x673A;&#x5668;&#xFF01;&#xFF09;&#x4E0A;&#x8C03;&#x5EA6;&#x6267;&#x884C;&#xFF0C;&#x800C;&#x4EE3;&#x7801;&#x5219;&#x4FDD;&#x6301;&#x5982;&#x540C;&#x987A;&#x5E8F;&#x6267;&#x884C;&#x4E00;&#x6837;&#x7B80;&#x5355;&#x3002;</p>
<p>&#x8BB8;&#x591A;&#x5728;&#x5176;&#x4ED6;&#x8BED;&#x8A00;&#x4E2D;&#x53EF;&#x7528;&#x7684;&#x5F02;&#x6B65;&#x673A;&#x5236;&#x53EF;&#x4EE5;&#x4F7F;&#x7528; Kotlin &#x534F;&#x7A0B;&#x5B9E;&#x73B0;&#x4E3A;&#x5E93;&#x3002;&#x8FD9;&#x5305;&#x62EC;&#x6E90;&#x4E8E; C# &#x548C; ECMAScript &#x7684; <a href="https://github.com/Kotlin/kotlinx.coroutines/blob/master/coroutines-guide.md#composing-suspending-functions" target="_blank" rel="external nofollow noopener noreferrer">async/await</a>&#x3001;&#x6E90;&#x4E8E; Go &#x7684; <a href="https://github.com/Kotlin/kotlinx.coroutines/blob/master/coroutines-guide.md#channels" target="_blank" rel="external nofollow noopener noreferrer">&#x7BA1;&#x9053;</a> &#x548C; select &#x4EE5;&#x53CA;&#x6E90;&#x4E8E; C# &#x548C; Python <a href="https://www.kotlincn.net/docs/reference/coroutines.html#kotlincoroutines-%E4%B8%AD%E7%9A%84%E7%94%9F%E6%88%90%E5%99%A8-api" target="_blank" rel="external nofollow noopener noreferrer">&#x751F;&#x6210;&#x5668;/yield</a>&#x3002;&#x5173;&#x4E8E;&#x63D0;&#x4F9B;&#x8FD9;&#x4E9B;&#x7ED3;&#x6784;&#x7684;&#x5E93;&#x8BF7;&#x53C2;&#x89C1;&#x5176;<a href="https://www.kotlincn.net/docs/reference/coroutines.html#%E6%A0%87%E5%87%86-api" target="_blank" rel="external nofollow noopener noreferrer">&#x4E0B;&#x6587;</a>&#x63CF;&#x8FF0;&#x3002;</p>
<h2 id="&#x963B;&#x585E;-vs-&#x6302;&#x8D77;"><a class="header-anchor" href="#&#x963B;&#x585E;-vs-&#x6302;&#x8D77;"></a>&#x963B;&#x585E; vs &#x6302;&#x8D77;</h2>
<p>&#x57FA;&#x672C;&#x4E0A;&#xFF0C;&#x534F;&#x7A0B;&#x8BA1;&#x7B97;&#x53EF;&#x4EE5;&#x88AB;&#x6302;&#x8D77;&#x800C;&#x65E0;&#x9700;&#x963B;&#x585E;&#x7EBF;&#x7A0B;&#x3002;&#x7EBF;&#x7A0B;&#x963B;&#x585E;&#x7684;&#x4EE3;&#x4EF7;&#x901A;&#x5E38;&#x662F;&#x6602;&#x8D35;&#x7684;&#xFF0C;&#x5C24;&#x5176;&#x5728;&#x9AD8;&#x8D1F;&#x8F7D;&#x65F6;&#xFF0C;&#x56E0;&#x4E3A;&#x53EA;&#x6709;&#x76F8;&#x5BF9;&#x5C11;&#x91CF;&#x7EBF;&#x7A0B;&#x5B9E;&#x9645;&#x53EF;&#x7528;&#xFF0C;&#x56E0;&#x6B64;&#x963B;&#x585E;&#x5176;&#x4E2D;&#x4E00;&#x4E2A;&#x4F1A;&#x5BFC;&#x81F4;&#x4E00;&#x4E9B;&#x91CD;&#x8981;&#x7684;&#x4EFB;&#x52A1;&#x88AB;&#x5EF6;&#x8FDF;&#x3002;</p>
<p>&#x53E6;&#x4E00;&#x65B9;&#x9762;&#xFF0C;&#x534F;&#x7A0B;&#x6302;&#x8D77;&#x51E0;&#x4E4E;&#x662F;&#x65E0;&#x4EE3;&#x4EF7;&#x7684;&#x3002;&#x4E0D;&#x9700;&#x8981;&#x4E0A;&#x4E0B;&#x6587;&#x5207;&#x6362;&#x6216;&#x8005; OS &#x7684;&#x4EFB;&#x4F55;&#x5176;&#x4ED6;&#x5E72;&#x9884;&#x3002;&#x6700;&#x91CD;&#x8981;&#x7684;&#x662F;&#xFF0C;&#x6302;&#x8D77;&#x53EF;&#x4EE5;&#x5728;&#x5F88;&#x5927;&#x7A0B;&#x5EA6;&#x4E0A;&#x7531;&#x7528;&#x6237;&#x5E93;&#x63A7;&#x5236;&#xFF1A;&#x4F5C;&#x4E3A;&#x5E93;&#x7684;&#x4F5C;&#x8005;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x51B3;&#x5B9A;&#x6302;&#x8D77;&#x65F6;&#x53D1;&#x751F;&#x4EC0;&#x4E48;&#x5E76;&#x6839;&#x636E;&#x9700;&#x6C42;&#x4F18;&#x5316;/&#x8BB0;&#x65E5;&#x5FD7;/&#x622A;&#x83B7;&#x3002;</p>
<p>&#x53E6;&#x4E00;&#x4E2A;&#x533A;&#x522B;&#x662F;&#xFF0C;&#x534F;&#x7A0B;&#x4E0D;&#x80FD;&#x5728;&#x968F;&#x673A;&#x7684;&#x6307;&#x4EE4;&#x4E2D;&#x6302;&#x8D77;&#xFF0C;&#x800C;&#x53EA;&#x80FD;&#x5728;&#x6240;&#x8C13;&#x7684;&#x6302;&#x8D77;&#x70B9;&#x6302;&#x8D77;&#xFF0C;&#x8FD9;&#x4F1A;&#x8C03;&#x7528;&#x7279;&#x522B;&#x6807;&#x8BB0;&#x7684;&#x51FD;&#x6570;&#x3002;</p>
<h2 id="&#x6302;&#x8D77;&#x51FD;&#x6570;"><a class="header-anchor" href="#&#x6302;&#x8D77;&#x51FD;&#x6570;"></a>&#x6302;&#x8D77;&#x51FD;&#x6570;</h2>
<p>&#x5F53;&#x6211;&#x4EEC;&#x8C03;&#x7528;&#x6807;&#x8BB0;&#x6709;&#x7279;&#x6B8A;&#x4FEE;&#x9970;&#x7B26; suspend &#x7684;&#x51FD;&#x6570;&#x65F6;&#xFF0C;&#x4F1A;&#x53D1;&#x751F;&#x6302;&#x8D77;&#xFF1A;</p>
<pre><code>suspend fun doSomething(foo: Foo): Bar {
    &#x2026;&#x2026;
}
</code></pre>
<p>&#x8FD9;&#x6837;&#x7684;&#x51FD;&#x6570;&#x79F0;&#x4E3A;&#x6302;&#x8D77;&#x51FD;&#x6570;&#xFF0C;&#x56E0;&#x4E3A;&#x8C03;&#x7528;&#x5B83;&#x4EEC;&#x53EF;&#x80FD;&#x6302;&#x8D77;&#x534F;&#x7A0B;&#xFF08;&#x5982;&#x679C;&#x76F8;&#x5173;&#x8C03;&#x7528;&#x7684;&#x7ED3;&#x679C;&#x5DF2;&#x7ECF;&#x53EF;&#x7528;&#xFF0C;&#x5E93;&#x53EF;&#x4EE5;&#x51B3;&#x5B9A;&#x7EE7;&#x7EED;&#x8FDB;&#x884C;&#x800C;&#x4E0D;&#x6302;&#x8D77;&#xFF09;&#x3002;&#x6302;&#x8D77;&#x51FD;&#x6570;&#x80FD;&#x591F;&#x4EE5;&#x4E0E;&#x666E;&#x901A;&#x51FD;&#x6570;&#x76F8;&#x540C;&#x7684;&#x65B9;&#x5F0F;&#x83B7;&#x53D6;&#x53C2;&#x6570;&#x548C;&#x8FD4;&#x56DE;&#x503C;&#xFF0C;&#x4F46;&#x5B83;&#x4EEC;&#x53EA;&#x80FD;&#x4ECE;&#x534F;&#x7A0B;&#x548C;&#x5176;&#x4ED6;&#x6302;&#x8D77;&#x51FD;&#x6570;&#x4E2D;&#x8C03;&#x7528;&#x3002;&#x4E8B;&#x5B9E;&#x4E0A;&#xFF0C;&#x8981;&#x542F;&#x52A8;&#x534F;&#x7A0B;&#xFF0C;&#x5FC5;&#x987B;&#x81F3;&#x5C11;&#x6709;&#x4E00;&#x4E2A;&#x6302;&#x8D77;&#x51FD;&#x6570;&#xFF0C;&#x5B83;&#x901A;&#x5E38;&#x662F;&#x533F;&#x540D;&#x7684;&#xFF08;&#x5373;&#x5B83;&#x662F;&#x4E00;&#x4E2A;&#x6302;&#x8D77; lambda &#x8868;&#x8FBE;&#x5F0F;&#xFF09;&#x3002;&#x8BA9;&#x6211;&#x4EEC;&#x6765;&#x770B;&#x4E00;&#x4E2A;&#x4F8B;&#x5B50;&#xFF0C;&#x4E00;&#x4E2A;&#x7B80;&#x5316;&#x7684; async() &#x51FD;&#x6570;&#xFF08;&#x6E90;&#x81EA; <a href="https://www.kotlincn.net/docs/reference/coroutines.html#kotlincoroutines-%E4%B8%AD%E7%9A%84%E7%94%9F%E6%88%90%E5%99%A8-api" target="_blank" rel="external nofollow noopener noreferrer">kotlinx.coroutines</a> &#x5E93;&#xFF09;&#xFF1A;</p>
<pre><code>fun &lt;T&gt; async(block: suspend () -&gt; T)
</code></pre>
<p>&#x8FD9;&#x91CC;&#x7684; async() &#x662F;&#x4E00;&#x4E2A;&#x666E;&#x901A;&#x51FD;&#x6570;&#xFF08;&#x4E0D;&#x662F;&#x6302;&#x8D77;&#x51FD;&#x6570;&#xFF09;&#xFF0C;&#x4F46;&#x662F;&#x5B83;&#x7684; block &#x53C2;&#x6570;&#x5177;&#x6709;&#x4E00;&#x4E2A;&#x5E26; suspend &#x4FEE;&#x9970;&#x7B26;&#x7684;&#x51FD;&#x6570;&#x7C7B;&#x578B;&#xFF1A; suspend () -&gt; T&#x3002;&#x6240;&#x4EE5;&#xFF0C;&#x5F53;&#x6211;&#x4EEC;&#x5C06;&#x4E00;&#x4E2A; lambda &#x8868;&#x8FBE;&#x5F0F;&#x4F20;&#x7ED9; async() &#x65F6;&#xFF0C;&#x5B83;&#x4F1A;&#x662F;&#x6302;&#x8D77; lambda &#x8868;&#x8FBE;&#x5F0F;&#xFF0C;&#x4E8E;&#x662F;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x4ECE;&#x4E2D;&#x8C03;&#x7528;&#x6302;&#x8D77;&#x51FD;&#x6570;&#xFF1A;</p>
<pre><code>async {
    doSomething(foo)
    &#x2026;&#x2026;
}
</code></pre>
<p>&#x7EE7;&#x7EED;&#x8BE5;&#x7C7B;&#x6BD4;&#xFF0C;await() &#x53EF;&#x4EE5;&#x662F;&#x4E00;&#x4E2A;&#x6302;&#x8D77;&#x51FD;&#x6570;&#xFF08;&#x56E0;&#x6B64;&#x4E5F;&#x53EF;&#x4EE5;&#x5728;&#x4E00;&#x4E2A; async {} &#x5757;&#x4E2D;&#x8C03;&#x7528;&#xFF09;&#xFF0C;&#x8BE5;&#x51FD;&#x6570;&#x6302;&#x8D77;&#x4E00;&#x4E2A;&#x534F;&#x7A0B;&#xFF0C;&#x76F4;&#x5230;&#x4E00;&#x4E9B;&#x8BA1;&#x7B97;&#x5B8C;&#x6210;&#x5E76;&#x8FD4;&#x56DE;&#x5176;&#x7ED3;&#x679C;&#xFF1A;</p>
<pre><code>async {
    &#x2026;&#x2026;
    val result = computation.await()
    &#x2026;&#x2026;
}
</code></pre>
<p>&#x66F4;&#x591A;&#x5173;&#x4E8E; async/await &#x51FD;&#x6570;&#x5B9E;&#x9645;&#x5728; kotlinx.coroutines &#x4E2D;&#x5982;&#x4F55;&#x5DE5;&#x4F5C;&#x7684;&#x4FE1;&#x606F;&#x53EF;&#x4EE5;&#x5728;<a href="https://github.com/Kotlin/kotlinx.coroutines/blob/master/coroutines-guide.md#composing-suspending-functions" target="_blank" rel="external nofollow noopener noreferrer">&#x8FD9;&#x91CC;</a>&#x627E;&#x5230;&#x3002;</p>
<p>&#x8BF7;&#x6CE8;&#x610F;&#xFF0C;&#x6302;&#x8D77;&#x51FD;&#x6570; await() &#x548C; doSomething() &#x4E0D;&#x80FD;&#x5728;&#x50CF; main() &#x8FD9;&#x6837;&#x7684;&#x666E;&#x901A;&#x51FD;&#x6570;&#x4E2D;&#x8C03;&#x7528;&#xFF1A;</p>
<pre><code>fun main(args: Array&lt;String&gt;) {
    doSomething() // &#x9519;&#x8BEF;&#xFF1A;&#x6302;&#x8D77;&#x51FD;&#x6570;&#x4ECE;&#x975E;&#x534F;&#x7A0B;&#x4E0A;&#x4E0B;&#x6587;&#x8C03;&#x7528;
}
</code></pre>
<p>&#x8FD8;&#x8981;&#x6CE8;&#x610F;&#x7684;&#x662F;&#xFF0C;&#x6302;&#x8D77;&#x51FD;&#x6570;&#x53EF;&#x4EE5;&#x662F;&#x865A;&#x62DF;&#x7684;&#xFF0C;&#x5F53;&#x8986;&#x76D6;&#x5B83;&#x4EEC;&#x65F6;&#xFF0C;&#x5FC5;&#x987B;&#x6307;&#x5B9A; suspend &#x4FEE;&#x9970;&#x7B26;&#xFF1A;</p>
<pre><code>interface Base {
    suspend fun foo()
}

class Derived: Base {
    override suspend fun foo() { &#x2026;&#x2026; }
}
</code></pre>
<h3 id="restrictssuspension-&#x6CE8;&#x89E3;"><a class="header-anchor" href="#restrictssuspension-&#x6CE8;&#x89E3;"></a>@RestrictsSuspension &#x6CE8;&#x89E3;</h3>
<p>&#x6269;&#x5C55;&#x51FD;&#x6570;&#xFF08;&#x548C; lambda &#x8868;&#x8FBE;&#x5F0F;&#xFF09;&#x4E5F;&#x53EF;&#x4EE5;&#x6807;&#x8BB0;&#x4E3A; suspend&#xFF0C;&#x5C31;&#x50CF;&#x666E;&#x901A;&#x7684;&#x4E00;&#x6837;&#x3002;&#x8FD9;&#x5141;&#x8BB8;&#x521B;&#x5EFA; <a href="https://www.kotlincn.net/docs/reference/type-safe-builders.html" target="_blank" rel="external nofollow noopener noreferrer">DSL</a> &#x53CA;&#x5176;&#x4ED6;&#x7528;&#x6237;&#x53EF;&#x6269;&#x5C55;&#x7684; API&#x3002;&#x5728;&#x67D0;&#x4E9B;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x5E93;&#x4F5C;&#x8005;&#x9700;&#x8981;&#x963B;&#x6B62;&#x7528;&#x6237;&#x6DFB;&#x52A0;&#x65B0;&#x65B9;&#x5F0F;&#x6765;&#x6302;&#x8D77;&#x534F;&#x7A0B;&#x3002;</p>
<p>&#x4E3A;&#x4E86;&#x5B9E;&#x73B0;&#x8FD9;&#x4E00;&#x70B9;&#xFF0C;&#x53EF;&#x4EE5;&#x4F7F;&#x7528; <a href="https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.coroutines.experimental/-restricts-suspension/index.html" target="_blank" rel="external nofollow noopener noreferrer">@RestrictsSuspension</a> &#x6CE8;&#x89E3;&#x3002;&#x5F53;&#x63A5;&#x6536;&#x8005;&#x7C7B;/&#x63A5;&#x53E3; R &#x7528;&#x5B83;&#x6807;&#x6CE8;&#x65F6;&#xFF0C;&#x6240;&#x6709;&#x6302;&#x8D77;&#x6269;&#x5C55;&#x90FD;&#x9700;&#x8981;&#x59D4;&#x6258;&#x7ED9; R &#x7684;&#x6210;&#x5458;&#x6216;&#x5176;&#x5B83;&#x59D4;&#x6258;&#x7ED9;&#x5B83;&#x7684;&#x6269;&#x5C55;&#x3002;&#x7531;&#x4E8E;&#x6269;&#x5C55;&#x4E0D;&#x80FD;&#x65E0;&#x9650;&#x76F8;&#x4E92;&#x59D4;&#x6258;&#xFF08;&#x7A0B;&#x5E8F;&#x4E0D;&#x4F1A;&#x7EC8;&#x6B62;&#xFF09;&#xFF0C;&#x8FD9;&#x4FDD;&#x8BC1;&#x6240;&#x6709;&#x6302;&#x8D77;&#x90FD;&#x901A;&#x8FC7;&#x8C03;&#x7528; R &#x7684;&#x6210;&#x5458;&#x53D1;&#x751F;&#xFF0C;&#x5E93;&#x7684;&#x4F5C;&#x8005;&#x5C31;&#x53EF;&#x4EE5;&#x5B8C;&#x5168;&#x63A7;&#x5236;&#x4E86;&#x3002;</p>
<p>&#x8FD9;&#x5728;&#x5C11;&#x6570;&#x60C5;&#x51B5;&#x662F;&#x9700;&#x8981;&#x7684;&#xFF0C;&#x5F53;&#x6BCF;&#x6B21;&#x6302;&#x8D77;&#x5728;&#x5E93;&#x4E2D;&#x4EE5;&#x7279;&#x6B8A;&#x65B9;&#x5F0F;&#x5904;&#x7406;&#x65F6;&#x3002;&#x4F8B;&#x5982;&#xFF0C;&#x5F53;&#x901A;&#x8FC7; <a href="https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.coroutines.experimental/build-sequence.html" target="_blank" rel="external nofollow noopener noreferrer">buildSequence()</a> &#x51FD;&#x6570;&#x5B9E;&#x73B0;<a href="https://www.kotlincn.net/docs/reference/coroutines.html#kotlincoroutines-%E4%B8%AD%E7%9A%84%E7%94%9F%E6%88%90%E5%99%A8-api" target="_blank" rel="external nofollow noopener noreferrer">&#x4E0B;&#x6587;</a>&#x6240;&#x8FF0;&#x7684;&#x751F;&#x6210;&#x5668;&#x65F6;&#xFF0C;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x786E;&#x4FDD;&#x5728;&#x534F;&#x7A0B;&#x4E2D;&#x7684;&#x4EFB;&#x4F55;&#x6302;&#x8D77;&#x8C03;&#x7528;&#x6700;&#x7EC8;&#x8C03;&#x7528; yield() &#x6216; yieldAll() &#x800C;&#x4E0D;&#x662F;&#x4EFB;&#x4F55;&#x5176;&#x4ED6;&#x51FD;&#x6570;&#x3002;&#x8FD9;&#x5C31;&#x662F;&#x4E3A;&#x4EC0;&#x4E48; <a href="https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.coroutines.experimental/-sequence-builder/index.html" target="_blank" rel="external nofollow noopener noreferrer">SequenceBuilder</a> &#x7528; @RestrictsSuspension &#x6CE8;&#x89E3;&#xFF1A;</p>
<pre><code>@RestrictsSuspension
public abstract class SequenceBuilder&lt;in T&gt; {
    &#x2026;&#x2026;
}
</code></pre>
<p>&#x53C2;&#x89C1;&#x5176; <a href="https://github.com/JetBrains/kotlin/blob/master/libraries/stdlib/src/kotlin/coroutines/experimental/SequenceBuilder.kt" target="_blank" rel="external nofollow noopener noreferrer">Github</a> &#x4E0A; &#x7684;&#x6E90;&#x4EE3;&#x7801;&#x3002;</p>
<h2 id="&#x534F;&#x7A0B;&#x7684;&#x5185;&#x90E8;&#x673A;&#x5236;"><a class="header-anchor" href="#&#x534F;&#x7A0B;&#x7684;&#x5185;&#x90E8;&#x673A;&#x5236;"></a>&#x534F;&#x7A0B;&#x7684;&#x5185;&#x90E8;&#x673A;&#x5236;</h2>
<p>&#x6211;&#x4EEC;&#x4E0D;&#x662F;&#x5728;&#x8FD9;&#x91CC;&#x7ED9;&#x51FA;&#x4E00;&#x4E2A;&#x5173;&#x4E8E;&#x534F;&#x7A0B;&#x5982;&#x4F55;&#x5DE5;&#x4F5C;&#x7684;&#x5B8C;&#x6574;&#x89E3;&#x91CA;&#xFF0C;&#x7136;&#x800C;&#x7C97;&#x7565;&#x5730;&#x8BA4;&#x8BC6;&#x53D1;&#x751F;&#x4E86;&#x4EC0;&#x4E48;&#x662F;&#x76F8;&#x5F53;&#x91CD;&#x8981;&#x7684;&#x3002;</p>
<p>&#x534F;&#x7A0B;&#x5B8C;&#x5168;&#x901A;&#x8FC7;&#x7F16;&#x8BD1;&#x6280;&#x672F;&#x5B9E;&#x73B0;&#xFF08;&#x4E0D;&#x9700;&#x8981;&#x6765;&#x81EA; VM &#x6216; OS &#x7AEF;&#x7684;&#x652F;&#x6301;&#xFF09;&#xFF0C;&#x6302;&#x8D77;&#x901A;&#x8FC7;&#x4EE3;&#x7801;&#x6765;&#x751F;&#x6548;&#x3002;&#x57FA;&#x672C;&#x4E0A;&#xFF0C;&#x6BCF;&#x4E2A;&#x6302;&#x8D77;&#x51FD;&#x6570;&#xFF08;&#x4F18;&#x5316;&#x53EF;&#x80FD;&#x9002;&#x7528;&#xFF0C;&#x4F46;&#x6211;&#x4EEC;&#x4E0D;&#x5728;&#x8FD9;&#x91CC;&#x8BA8;&#x8BBA;&#xFF09;&#x90FD;&#x8F6C;&#x6362;&#x4E3A;&#x72B6;&#x6001;&#x673A;&#xFF0C;&#x5176;&#x4E2D;&#x7684;&#x72B6;&#x6001;&#x5BF9;&#x5E94;&#x4E8E;&#x6302;&#x8D77;&#x8C03;&#x7528;&#x3002;&#x521A;&#x597D;&#x5728;&#x6302;&#x8D77;&#x524D;&#xFF0C;&#x4E0B;&#x4E00;&#x72B6;&#x6001;&#x4E0E;&#x76F8;&#x5173;&#x5C40;&#x90E8;&#x53D8;&#x91CF;&#x7B49;&#x4E00;&#x8D77;&#x5B58;&#x50A8;&#x5728;&#x7F16;&#x8BD1;&#x5668;&#x751F;&#x6210;&#x7684;&#x7C7B;&#x7684;&#x5B57;&#x6BB5;&#x4E2D;&#x3002;&#x5728;&#x6062;&#x590D;&#x8BE5;&#x534F;&#x7A0B;&#x65F6;&#xFF0C;&#x6062;&#x590D;&#x5C40;&#x90E8;&#x53D8;&#x91CF;&#x5E76;&#x4E14;&#x72B6;&#x6001;&#x673A;&#x4ECE;&#x521A;&#x597D;&#x6302;&#x8D77;&#x4E4B;&#x540E;&#x7684;&#x72B6;&#x6001;&#x8FDB;&#x884C;&#x3002;</p>
<p>&#x6302;&#x8D77;&#x7684;&#x534F;&#x7A0B;&#x53EF;&#x4EE5;&#x4F5C;&#x4E3A;&#x4FDD;&#x6301;&#x5176;&#x6302;&#x8D77;&#x72B6;&#x6001;&#x4E0E;&#x5C40;&#x90E8;&#x53D8;&#x91CF;&#x7684;&#x5BF9;&#x8C61;&#x6765;&#x5B58;&#x50A8;&#x548C;&#x4F20;&#x9012;&#x3002;&#x8FD9;&#x79CD;&#x5BF9;&#x8C61;&#x7684;&#x7C7B;&#x578B;&#x662F; Continuation&#xFF0C;&#x800C;&#x8FD9;&#x91CC;&#x63CF;&#x8FF0;&#x7684;&#x6574;&#x4E2A;&#x4EE3;&#x7801;&#x8F6C;&#x6362;&#x5BF9;&#x5E94;&#x4E8E;&#x7ECF;&#x5178;&#x7684;<a href="https://en.wikipedia.org/wiki/Continuation-passing_style" target="_blank" rel="external nofollow noopener noreferrer">&#x5EF6;&#x7EED;&#x6027;&#x4F20;&#x9012;&#x98CE;&#x683C;&#xFF08;Continuation-passing style&#xFF09;</a>&#x3002;&#x56E0;&#x6B64;&#xFF0C;&#x6302;&#x8D77;&#x51FD;&#x6570;&#x6709;&#x4E00;&#x4E2A; Continuation &#x7C7B;&#x578B;&#x7684;&#x989D;&#x5916;&#x53C2;&#x6570;&#x4F5C;&#x4E3A;&#x9AD8;&#x7EA7;&#x9009;&#x9879;&#x3002;</p>
<p>&#x5173;&#x4E8E;&#x534F;&#x7A0B;&#x5DE5;&#x4F5C;&#x539F;&#x7406;&#x7684;&#x66F4;&#x591A;&#x7EC6;&#x8282;&#x53EF;&#x4EE5;&#x5728;<a href="https://github.com/Kotlin/kotlin-coroutines/blob/master/kotlin-coroutines-informal.md" target="_blank" rel="external nofollow noopener noreferrer">&#x8FD9;&#x4E2A;&#x8BBE;&#x8BA1;&#x6587;&#x6863;</a>&#x4E2D;&#x627E;&#x5230;&#x3002;&#x5728;&#x5176;&#x4ED6;&#x8BED;&#x8A00;&#xFF08;&#x5982; C# &#x6216;&#x8005; ECMAScript 2016&#xFF09;&#x4E2D;&#x7684; async/await &#x7684;&#x7C7B;&#x4F3C;&#x63CF;&#x8FF0;&#x4E0E;&#x6B64;&#x76F8;&#x5173;&#xFF0C;&#x867D;&#x7136;&#x5B83;&#x4EEC;&#x5B9E;&#x73B0;&#x7684;&#x8BED;&#x8A00;&#x529F;&#x80FD;&#x53EF;&#x80FD;&#x4E0D;&#x50CF; Kotlin &#x534F;&#x7A0B;&#x8FD9;&#x6837;&#x901A;&#x7528;&#x3002;</p>
<h2 id="&#x534F;&#x7A0B;&#x7684;&#x5B9E;&#x9A8C;&#x6027;&#x72B6;&#x6001;"><a class="header-anchor" href="#&#x534F;&#x7A0B;&#x7684;&#x5B9E;&#x9A8C;&#x6027;&#x72B6;&#x6001;"></a>&#x534F;&#x7A0B;&#x7684;&#x5B9E;&#x9A8C;&#x6027;&#x72B6;&#x6001;</h2>
<p>&#x534F;&#x7A0B;&#x7684;&#x8BBE;&#x8BA1;&#x662F;<a href="https://www.kotlincn.net/docs/reference/compatibility.html#%E5%AE%9E%E9%AA%8C%E6%80%A7%E7%9A%84%E5%8A%9F%E8%83%BD" target="_blank" rel="external nofollow noopener noreferrer">&#x5B9E;&#x9A8C;&#x6027;&#x7684;</a>&#xFF0C;&#x8FD9;&#x610F;&#x5473;&#x7740;&#x5B83;&#x53EF;&#x80FD;&#x5728;&#x5373;&#x5C06;&#x53D1;&#x5E03;&#x7684;&#x7248;&#x672C;&#x4E2D;&#x66F4;&#x6539;&#x3002;&#x5F53;&#x5728; Kotlin 1.1 &#x4E2D;&#x7F16;&#x8BD1;&#x534F;&#x7A0B;&#x65F6;&#xFF0C;&#x9ED8;&#x8BA4;&#x60C5;&#x51B5;&#x4E0B;&#x4F1A;&#x62A5;&#x4E00;&#x4E2A;&#x8B66;&#x544A;&#xFF1A;&#x201C;&#x534F;&#x7A0B;&#x201D;&#x529F;&#x80FD;&#x662F;&#x5B9E;&#x9A8C;&#x6027;&#x7684;&#x3002;&#x8981;&#x79FB;&#x51FA;&#x8BE5;&#x8B66;&#x544A;&#xFF0C;&#x4F60;&#x9700;&#x8981;&#x6307;&#x5B9A; <a href="https://www.kotlincn.net/docs/diagnostics/experimental-coroutines.html" target="_blank" rel="external nofollow noopener noreferrer">opt-in &#x6807;&#x5FD7;</a>&#x3002;</p>
<p>&#x7531;&#x4E8E;&#x5176;&#x5B9E;&#x9A8C;&#x6027;&#x72B6;&#x6001;&#xFF0C;&#x6807;&#x51C6;&#x5E93;&#x4E2D;&#x534F;&#x7A0B;&#x76F8;&#x5173;&#x7684; API &#x653E;&#x5728; kotlin.coroutines.experimental &#x5305;&#x4E0B;&#x3002;&#x5F53;&#x8BBE;&#x8BA1;&#x5B8C;&#x6210;&#x5E76;&#x4E14;&#x5B9E;&#x9A8C;&#x6027;&#x72B6;&#x6001;&#x89E3;&#x9664;&#x65F6;&#xFF0C;&#x6700;&#x7EC8;&#x7684; API &#x4F1A;&#x79FB;&#x52A8;&#x5230; kotlin.coroutines&#xFF0C;&#x5E76;&#x4E14;&#x5B9E;&#x9A8C;&#x5305;&#x4F1A;&#x88AB;&#x4FDD;&#x7559;&#xFF08;&#x53EF;&#x80FD;&#x5728;&#x4E00;&#x4E2A;&#x5355;&#x72EC;&#x7684;&#x6784;&#x4EF6;&#x4E2D;&#xFF09;&#x4EE5;&#x5B9E;&#x73B0;&#x5411;&#x540E;&#x517C;&#x5BB9;&#x3002;</p>
<p>**&#x91CD;&#x8981;&#x6CE8;&#x610F;&#x4E8B;&#x9879;&#xFF1A;**&#x6211;&#x4EEC;&#x5EFA;&#x8BAE;&#x5E93;&#x4F5C;&#x8005;&#x9075;&#x5FAA;&#x76F8;&#x540C;&#x60EF;&#x4F8B;&#xFF1A;&#x7ED9;&#x66B4;&#x9732;&#x57FA;&#x4E8E;&#x534F;&#x7A0B; API &#x7684;&#x5305;&#x6DFB;&#x52A0;&#x201C;experimental&#x201D;&#x540E;&#x7F00;&#xFF08;&#x5982; com.example.experimental&#xFF09;&#xFF0C;&#x4EE5;&#x4F7F;&#x4F60;&#x7684;&#x5E93;&#x4FDD;&#x6301;&#x4E8C;&#x8FDB;&#x5236;&#x517C;&#x5BB9;&#x3002;&#x5F53;&#x6700;&#x7EC8; API &#x53D1;&#x5E03;&#x65F6;&#xFF0C;&#x8BF7;&#x6309;&#x7167;&#x4E0B;&#x5217;&#x6B65;&#x9AA4;&#x64CD;&#x4F5C;&#xFF1A;</p>
<ul>
<li>&#x5C06;&#x6240;&#x6709; API &#x590D;&#x5236;&#x5230; com.example&#xFF08;&#x6CA1;&#x6709; experimental &#x540E;&#x7F00;&#xFF09;&#xFF0C;</li>
<li>&#x4FDD;&#x6301;&#x5B9E;&#x9A8C;&#x5305;&#x7684;&#x5411;&#x540E;&#x517C;&#x5BB9;&#x6027;&#x3002;</li>
</ul>
<p>&#x8FD9;&#x5C06;&#x6700;&#x5C0F;&#x5316;&#x4F60;&#x7684;&#x7528;&#x6237;&#x7684;&#x8FC1;&#x79FB;&#x95EE;&#x9898;&#x3002;</p>
<h2 id="&#x6807;&#x51C6;-api"><a class="header-anchor" href="#&#x6807;&#x51C6;-api"></a>&#x6807;&#x51C6; API</h2>
<p>&#x534F;&#x7A0B;&#x6709;&#x4E09;&#x4E2A;&#x4E3B;&#x8981;&#x7EC4;&#x6210;&#x90E8;&#x5206;&#xFF1A;</p>
<ul>
<li>&#x8BED;&#x8A00;&#x652F;&#x6301;&#xFF08;&#x5373;&#x5982;&#x4E0A;&#x6240;&#x8FF0;&#x7684;&#x6302;&#x8D77;&#x529F;&#x80FD;&#xFF09;&#xFF0C;</li>
<li>Kotlin &#x6807;&#x51C6;&#x5E93;&#x4E2D;&#x7684;&#x5E95;&#x5C42;&#x6838;&#x5FC3; API&#xFF0C;</li>
<li>&#x53EF;&#x4EE5;&#x76F4;&#x63A5;&#x5728;&#x7528;&#x6237;&#x4EE3;&#x7801;&#x4E2D;&#x4F7F;&#x7528;&#x7684;&#x9AD8;&#x7EA7; API&#x3002;</li>
</ul>
<h3 id="&#x5E95;&#x5C42;-api&#xFF1A;kotlin-coroutines"><a class="header-anchor" href="#&#x5E95;&#x5C42;-api&#xFF1A;kotlin-coroutines"></a>&#x5E95;&#x5C42; API&#xFF1A;kotlin.coroutines</h3>
<p>&#x5E95;&#x5C42; API &#x76F8;&#x5BF9;&#x8F83;&#x5C0F;&#xFF0C;&#x5E76;&#x4E14;&#x9664;&#x4E86;&#x521B;&#x5EFA;&#x66F4;&#x9AD8;&#x7EA7;&#x7684;&#x5E93;&#x4E4B;&#x5916;&#xFF0C;&#x4E0D;&#x5E94;&#x8BE5;&#x4F7F;&#x7528;&#x5B83;&#x3002; &#x5B83;&#x7531;&#x4E24;&#x4E2A;&#x4E3B;&#x8981;&#x5305;&#x7EC4;&#x6210;&#xFF1A;</p>
<ul>
<li><a href="https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.coroutines.experimental/index.html" target="_blank" rel="external nofollow noopener noreferrer">kotlin.coroutines.experimental</a> &#x5E26;&#x6709;&#x4E3B;&#x8981;&#x7C7B;&#x578B;&#x4E0E;&#x4E0B;&#x8FF0;&#x539F;&#x8BED;</li>
<li><a href="https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.coroutines.experimental/create-coroutine.html" target="_blank" rel="external nofollow noopener noreferrer">createCoroutine()</a></li>
<li><a href="https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.coroutines.experimental/start-coroutine.html" target="_blank" rel="external nofollow noopener noreferrer">startCoroutine()</a></li>
<li><a href="https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.coroutines.experimental/suspend-coroutine.html" target="_blank" rel="external nofollow noopener noreferrer">suspendCoroutine()</a></li>
<li><a href="https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.coroutines.experimental.intrinsics/index.html" target="_blank" rel="external nofollow noopener noreferrer">kotlin.coroutines.experimental.intrinsics</a> &#x5E26;&#x6709;&#x751A;&#x81F3;&#x66F4;&#x5E95;&#x5C42;&#x7684;&#x5185;&#x5728;&#x51FD;&#x6570;&#x5982; <a href="https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.coroutines.experimental.intrinsics/suspend-coroutine-or-return.html" target="_blank" rel="external nofollow noopener noreferrer">suspendCoroutineOrReturn</a></li>
</ul>
<p>&#x5173;&#x4E8E;&#x8FD9;&#x4E9B; API &#x7528;&#x6CD5;&#x7684;&#x66F4;&#x591A;&#x7EC6;&#x8282;&#x53EF;&#x4EE5;&#x5728;<a href="https://github.com/Kotlin/kotlin-coroutines/blob/master/kotlin-coroutines-informal.md" target="_blank" rel="external nofollow noopener noreferrer">&#x8FD9;&#x91CC;</a>&#x627E;&#x5230;&#x3002;</p>
<h3 id="kotlin-coroutines-&#x4E2D;&#x7684;&#x751F;&#x6210;&#x5668;-api"><a class="header-anchor" href="#kotlin-coroutines-&#x4E2D;&#x7684;&#x751F;&#x6210;&#x5668;-api"></a>kotlin.coroutines &#x4E2D;&#x7684;&#x751F;&#x6210;&#x5668; API</h3>
<p>kotlin.coroutines.experimental &#x4E2D;&#x4EC5;&#x6709;&#x7684;&#x201C;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x7EA7;&#x201D;&#x51FD;&#x6570;&#x662F;</p>
<ul>
<li><a href="https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.coroutines.experimental/build-sequence.html" target="_blank" rel="external nofollow noopener noreferrer">buildSequence()</a></li>
<li><a href="https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.coroutines.experimental/build-iterator.html" target="_blank" rel="external nofollow noopener noreferrer">buildIterator()</a></li>
</ul>
<p>&#x8FD9;&#x4E9B;&#x5305;&#x542B;&#x5728; kotlin-stdlib &#x4E2D;&#x56E0;&#x4E3A;&#x4ED6;&#x4EEC;&#x4E0E;&#x5E8F;&#x5217;&#x76F8;&#x5173;&#x3002;&#x8FD9;&#x4E9B;&#x51FD;&#x6570;&#xFF08;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x4EC5;&#x9650;&#x4E8E;&#x8FD9;&#x91CC;&#x7684; buildSequence()&#xFF09;&#x5B9E;&#x73B0;&#x4E86; &#x751F;&#x6210;&#x5668; &#xFF0C;&#x5373;&#x63D0;&#x4F9B;&#x4E00;&#x79CD;&#x5EC9;&#x4EF7;&#x6784;&#x5EFA;&#x60F0;&#x6027;&#x5E8F;&#x5217;&#x7684;&#x65B9;&#x6CD5;&#xFF1A;</p>
<pre><code>val fibonacciSeq = buildSequence {
    var a = 0
    var b = 1
&#x200B;
    yield(1)
&#x200B;
    while (true) {
        yield(a + b)
&#x200B;
        val tmp = a + b
        a = b
        b = tmp
    }
}
</code></pre>
<p>&#x76EE;&#x6807;&#x5E73;&#x53F0;: JVMRunning on kotlin v. 1.1.2</p>
<p>&#x8FD9;&#x901A;&#x8FC7;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x534F;&#x7A0B;&#x751F;&#x6210;&#x4E00;&#x4E2A;&#x60F0;&#x6027;&#x7684;&#x3001;&#x6F5C;&#x5728;&#x65E0;&#x9650;&#x7684;&#x6590;&#x6CE2;&#x90A3;&#x5951;&#x6570;&#x5217;&#xFF0C;&#x8BE5;&#x534F;&#x7A0B;&#x901A;&#x8FC7;&#x8C03;&#x7528; yield() &#x51FD;&#x6570;&#x6765;&#x4EA7;&#x751F;&#x8FDE;&#x7EED;&#x7684;&#x6590;&#x6CE2;&#x7EB3;&#x5951;&#x6570;&#x3002;&#x5F53;&#x5728;&#x8FD9;&#x6837;&#x7684;&#x5E8F;&#x5217;&#x7684;&#x8FED;&#x4EE3;&#x5668;&#x4E0A;&#x8FED;&#x4EE3;&#x6BCF;&#x4E00;&#x6B65;&#xFF0C;&#x90FD;&#x4F1A;&#x6267;&#x884C;&#x751F;&#x6210;&#x4E0B;&#x4E00;&#x4E2A;&#x6570;&#x7684;&#x534F;&#x7A0B;&#x7684;&#x53E6;&#x4E00;&#x90E8;&#x5206;&#x3002;&#x56E0;&#x6B64;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x4ECE;&#x8BE5;&#x5E8F;&#x5217;&#x4E2D;&#x53D6;&#x51FA;&#x4EFB;&#x4F55;&#x6709;&#x9650;&#x7684;&#x6570;&#x5B57;&#x5217;&#x8868;&#xFF0C;&#x4F8B;&#x5982; fibonacciSeq.take(8).toList() &#x7ED3;&#x679C;&#x662F; [1, 1, 2, 3, 5, 8, 13, 21]&#x3002;&#x534F;&#x7A0B;&#x8DB3;&#x591F;&#x5EC9;&#x4EF7;&#x4F7F;&#x8FD9;&#x5F88;&#x5B9E;&#x7528;&#x3002;</p>
<p>&#x4E3A;&#x4E86;&#x6F14;&#x793A;&#x8FD9;&#x6837;&#x4E00;&#x4E2A;&#x5E8F;&#x5217;&#x7684;&#x771F;&#x6B63;&#x60F0;&#x6027;&#xFF0C;&#x8BA9;&#x6211;&#x4EEC;&#x5728;&#x8C03;&#x7528; buildSequence() &#x5185;&#x90E8;&#x8F93;&#x51FA;&#x4E00;&#x4E9B;&#x8C03;&#x8BD5;&#x4FE1;&#x606F;&#xFF1A;</p>
<pre><code>val lazySeq = buildSequence {
    print(&quot;START &quot;)
    for (i in 1..5) {
        yield(i)
        print(&quot;STEP &quot;)
    }
    print(&quot;END&quot;)
}
&#x200B;
// Print the first three elements of the sequence
lazySeq.take(3).forEach { print(&quot;$it &quot;) }
</code></pre>
<p>&#x76EE;&#x6807;&#x5E73;&#x53F0; JVMRunning on kotlin v. 1.1.2</p>
<p>&#x8FD0;&#x884C;&#x4E0A;&#x9762;&#x7684;&#x4EE3;&#x7801;&#x770B;&#xFF0C;&#x662F;&#x4E0D;&#x662F;&#x6211;&#x4EEC;&#x8F93;&#x51FA;&#x524D;&#x4E09;&#x4E2A;&#x5143;&#x7D20;&#x7684;&#x6570;&#x5B57;&#x4E0E;&#x751F;&#x6210;&#x5FAA;&#x73AF;&#x7684; STEP &#x6709;&#x4EA4;&#x53C9;&#x3002;&#x8FD9;&#x610F;&#x5473;&#x7740;&#x8BA1;&#x7B97;&#x786E;&#x5B9E;&#x662F;&#x60F0;&#x6027;&#x7684;&#x3002;&#x8981;&#x8F93;&#x51FA; 1&#xFF0C;&#x6211;&#x4EEC;&#x53EA;&#x6267;&#x884C;&#x5230;&#x7B2C;&#x4E00;&#x4E2A; yield(i)&#xFF0C;&#x5E76;&#x4E14;&#x8FC7;&#x7A0B;&#x4E2D;&#x4F1A;&#x8F93;&#x51FA; START&#x3002;&#x7136;&#x540E;&#xFF0C;&#x8F93;&#x51FA; 2&#xFF0C;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x7EE7;&#x7EED;&#x4E0B;&#x4E00;&#x4E2A; yield(i)&#xFF0C;&#x5E76;&#x4F1A;&#x8F93;&#x51FA; STEP&#x3002;3 &#x4E5F;&#x4E00;&#x6837;&#x3002;&#x6C38;&#x8FDC;&#x4E0D;&#x4F1A;&#x8F93;&#x51FA;&#x518D;&#x4E0B;&#x4E00;&#x4E2A; STEP&#xFF08;&#x4EE5;&#x53CA;END&#xFF09;&#xFF0C;&#x56E0;&#x4E3A;&#x6211;&#x4EEC;&#x518D;&#x4E5F;&#x6CA1;&#x6709;&#x8BF7;&#x6C42;&#x5E8F;&#x5217;&#x7684;&#x540E;&#x7EED;&#x5143;&#x7D20;&#x3002;</p>
<p>&#x4E3A;&#x4E86;&#x4E00;&#x6B21;&#x4EA7;&#x751F;&#x503C;&#x7684;&#x96C6;&#x5408;&#xFF08;&#x6216;&#x5E8F;&#x5217;&#xFF09;&#xFF0C;&#x53EF;&#x4EE5;&#x4F7F;&#x7528; yieldAll() &#x51FD;&#x6570;&#xFF1A;</p>
<pre><code>val lazySeq = buildSequence {
    yield(0)
    yieldAll(1..10) 
}
&#x200B;
lazySeq.forEach { print(&quot;$it &quot;) }
</code></pre>
<p>&#x76EE;&#x6807;&#x5E73;&#x53F0;: JVMRunning on kotlin v. 1.1.2</p>
<p>buildIterator() &#x7684;&#x5DE5;&#x4F5C;&#x65B9;&#x5F0F;&#x7C7B;&#x4F3C;&#x4E8E; buildSequence()&#xFF0C;&#x4F46;&#x8FD4;&#x56DE;&#x4E00;&#x4E2A;&#x60F0;&#x6027;&#x8FED;&#x4EE3;&#x5668;&#x3002;</p>
<p>&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x4E3A; SequenceBuilder &#x7C7B;&#x5199;&#x6302;&#x8D77;&#x6269;&#x5C55;&#xFF08;&#x5E26;&#x6709;<a href="https://www.kotlincn.net/docs/reference/coroutines.html#restrictssuspension-%E6%B3%A8%E8%A7%A3" target="_blank" rel="external nofollow noopener noreferrer">&#x4E0A;&#x6587;</a>&#x63CF;&#x8FF0;&#x7684; @RestrictsSuspension &#x6CE8;&#x89E3;&#xFF09;&#x6765;&#x4E3A; buildSequence() &#x6DFB;&#x52A0;&#x81EA;&#x5B9A;&#x4E49;&#x751F;&#x4EA7;&#x903B;&#x8F91;&#xFF08;custom yielding logic&#xFF09;&#xFF1A;</p>
<pre><code>suspend fun SequenceBuilder&lt;Int&gt;.yieldIfOdd(x: Int) {
    if (x % 2 != 0) yield(x)
}&#x200B;
val lazySeq = buildSequence {
    for (i in 1..10) yieldIfOdd(i)
}
</code></pre>
<p>&#x76EE;&#x6807;&#x5E73;&#x53F0;: JVMRunning on kotlin v. 1.1.2</p>
<h3 id="&#x5176;&#x4ED6;&#x9AD8;&#x7EA7;-api&#xFF1A;kotlinx-coroutines"><a class="header-anchor" href="#&#x5176;&#x4ED6;&#x9AD8;&#x7EA7;-api&#xFF1A;kotlinx-coroutines"></a>&#x5176;&#x4ED6;&#x9AD8;&#x7EA7; API&#xFF1A;kotlinx.coroutines</h3>
<p>&#x53EA;&#x6709;&#x4E0E;&#x534F;&#x7A0B;&#x76F8;&#x5173;&#x7684;&#x6838;&#x5FC3; API &#x53EF;&#x4EE5;&#x4ECE; Kotlin &#x6807;&#x51C6;&#x5E93;&#x83B7;&#x5F97;&#x3002;&#x8FD9;&#x4E3B;&#x8981;&#x5305;&#x62EC;&#x6240;&#x6709;&#x57FA;&#x4E8E;&#x534F;&#x7A0B;&#x7684;&#x5E93;&#x53EF;&#x80FD;&#x4F7F;&#x7528;&#x7684;&#x6838;&#x5FC3;&#x539F;&#x8BED;&#x548C;&#x63A5;&#x53E3;&#x3002;</p>
<p>&#x5927;&#x591A;&#x6570;&#x57FA;&#x4E8E;&#x534F;&#x7A0B;&#x7684;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x7EA7;API&#x90FD;&#x4F5C;&#x4E3A;&#x5355;&#x72EC;&#x7684;&#x5E93;&#x53D1;&#x5E03;&#xFF1A;<a href="https://github.com/Kotlin/kotlinx.coroutines" target="_blank" rel="external nofollow noopener noreferrer">kotlinx.coroutines</a>&#x3002;&#x8FD9;&#x4E2A;&#x5E93;&#x8986;&#x76D6;&#x4E86;</p>
<ul>
<li>&#x4F7F;&#x7528; kotlinx-coroutines-core &#x7684;&#x5E73;&#x53F0;&#x65E0;&#x5173;&#x5F02;&#x6B65;&#x7F16;&#x7A0B;
<ul>
<li>&#x6B64;&#x6A21;&#x5757;&#x5305;&#x62EC;&#x652F;&#x6301; select &#x548C;&#x5176;&#x4ED6;&#x4FBF;&#x5229;&#x539F;&#x8BED;&#x7684;&#x7C7B;&#x4F3C; Go &#x7684;&#x7BA1;&#x9053;</li>
<li>&#x8FD9;&#x4E2A;&#x5E93;&#x7684;&#x7EFC;&#x5408;&#x6307;&#x5357;<a href="https://github.com/Kotlin/kotlinx.coroutines/blob/master/coroutines-guide.md" target="_blank" rel="external nofollow noopener noreferrer">&#x5728;&#x8FD9;&#x91CC;</a>&#x3002;</li>
</ul>
</li>
<li>&#x57FA;&#x4E8E; JDK 8 &#x4E2D;&#x7684; CompletableFuture &#x7684; API&#xFF1A;kotlinx-coroutines-jdk8</li>
<li>&#x57FA;&#x4E8E; JDK 7 &#x53CA;&#x66F4;&#x9AD8;&#x7248;&#x672C; API &#x7684;&#x975E;&#x963B;&#x585E; IO&#xFF08;NIO&#xFF09;&#xFF1A;kotlinx-coroutines-nio</li>
<li>&#x652F;&#x6301; Swing (kotlinx-coroutines-swing) &#x548C; JavaFx (kotlinx-coroutines-javafx)</li>
<li>&#x652F;&#x6301; RxJava&#xFF1A;kotlinx-coroutines-rx</li>
</ul>
<p>&#x8FD9;&#x4E9B;&#x5E93;&#x65E2;&#x4F5C;&#x4E3A;&#x4F7F;&#x901A;&#x7528;&#x4EFB;&#x52A1;&#x6613;&#x7528;&#x7684;&#x4FBF;&#x5229;&#x7684; API&#xFF0C;&#x4E5F;&#x4F5C;&#x4E3A;&#x5982;&#x4F55;&#x6784;&#x5EFA;&#x57FA;&#x4E8E;&#x534F;&#x7A0B;&#x7684;&#x5E93;&#x7684;&#x7AEF;&#x5230;&#x7AEF;&#x793A;&#x4F8B;&#x3002;</p>
<blockquote>
<p>&#x539F;&#x6587;&#xFF1A;<a href="https://kotlinlang.org/docs/reference/coroutines.html" target="_blank" rel="external nofollow noopener noreferrer">Kotlin Coroutines / Kotlin &#x7684;&#x534F;&#x7A0B;</a><br>
&#x8BD1;&#x6587;&#xFF1A;<a href="https://coyee.com/article/12257-kotlin-coroutines?hmsr=toutiao.io&amp;utm_medium=toutiao.io&amp;utm_source=toutiao.io" target="_blank" rel="external nofollow noopener noreferrer">Kotlin &#x7684;&#x534F;&#x7A0B; </a><br>
&#x8BD1;&#x8005;&#xFF1A;<a href="https://coyee.com/u/6qrx50j6cg" target="_blank" rel="external nofollow noopener noreferrer">CY2</a></p>
</blockquote>]]></content>
    
    <summary type="html">
    
      一些 API 启动长时间运行的操作（例如网络 IO、文件 IO、CPU 或 GPU 密集型任务等），并要求调用者阻塞直到它们完成。协程提供了一种避免阻塞线程并用更廉价、更可控的操作替代线程阻塞的方法：协程挂起。
    
    </summary>
    
      <category term="晨读" scheme="http://ngudream.com/categories/%E6%99%A8%E8%AF%BB/"/>
    
      <category term="移动开发" scheme="http://ngudream.com/categories/%E6%99%A8%E8%AF%BB/%E7%A7%BB%E5%8A%A8%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="Android" scheme="http://ngudream.com/tags/Android/"/>
    
      <category term="Kotlin" scheme="http://ngudream.com/tags/Kotlin/"/>
    
  </entry>
  
  <entry>
    <title>五分钟学会 Kotlin 语法</title>
    <link href="http://ngudream.com/2017/05/18/kotlin-for-android-expression/"/>
    <id>http://ngudream.com/2017/05/18/kotlin-for-android-expression/</id>
    <published>2017-05-18T14:53:01.000Z</published>
    <updated>2017-07-13T13:42:59.398Z</updated>
    
    <content type="html"><![CDATA[<ul>
<li><strong><a href="https://huanglizhuo.gitbooks.io/kotlin-in-chinese/content/" target="_blank" rel="external nofollow noopener noreferrer">kotlin &#x5B98;&#x65B9;&#x6587;&#x6863;&#x7FFB;&#x8BD1;</a></strong></li>
<li><strong><a href="https://www.kotlincn.net/" target="_blank" rel="external nofollow noopener noreferrer">kotlin &#x4E2D;&#x6587;&#x7F51;</a></strong></li>
</ul>
<h2 id="&#x4E3A;&#x4EC0;&#x4E48;&#x4F7F;&#x7528;kotlin"><a class="header-anchor" href="#&#x4E3A;&#x4EC0;&#x4E48;&#x4F7F;&#x7528;kotlin"></a>&#x4E3A;&#x4EC0;&#x4E48;&#x4F7F;&#x7528;Kotlin</h2>
<p>&#x9879;&#x76EE;&#x4E00;&#x671F;&#x5728;&#x6536;&#x5C3E;&#x4E86;&#x7EC8;&#x4E8E;&#x6709;&#x65F6;&#x95F4;&#x6298;&#x817E;&#x4E86;&#xFF0C;&#x4E00;&#x4E2A;&#x591A;&#x6708;&#x4EE5;&#x6765; Kotlin &#x4ECE;&#x5165;&#x95E8;&#x5230;&#x73B0;&#x5728;&#xFF0C;&#x575A;&#x6301;&#x7528;&#x6765;&#x5F00;&#x53D1;&#x7684;&#x5207;&#x8EAB;&#x611F;&#x53D7;&#x3002;&#x56E0;&#x4E3A;&#x8BED;&#x6CD5;&#x4E0E; Java &#x7684;&#x533A;&#x522B;&#x633A;&#x5927;&#x7684;&#x4E00;&#x5F00;&#x59CB;&#x5F88;&#x60F3;&#x653E;&#x5F03;&#xFF0C;&#x5982;&#x679C;&#x4E0D;&#x662F;&#x56E0;&#x4E3A;&#x9879;&#x76EE;&#x5728;&#x4F7F;&#x7528;&#xFF0C;&#x60F3;&#x5FC5;&#x5F88;&#x5C11;&#x4EBA;&#x4F1A;&#x5C1D;&#x8BD5;&#x8FD9;&#x6837;&#x4E00;&#x95E8;&#x5C0F;&#x4F17;&#x8BED;&#x8A00;&#xFF0C;&#x4F46;&#x662F;&#x4E60;&#x60EF;&#x540E;&#x4F1A;&#x53D1;&#x73B0;&#x8FD9;&#x4E9B;&#x5E74;&#x7A76;&#x7ADF;&#x6D6A;&#x8D39;&#x591A;&#x5C11;&#x65F6;&#x95F4;&#x5728;&#x5199;&#x65E0;&#x7528;&#x7684; Java &#x4EE3;&#x7801;&#x4E86;&#xFF0C; Kotlin &#x5728;&#x517C;&#x5BB9; Java &#x7684;&#x57FA;&#x7840;&#x4E0A;&#x8FD8;&#x80FD;&#x5927;&#x5927;&#x63D0;&#x5347;&#x5F00;&#x53D1;&#x6548;&#x7387;&#x3002;Kotlin &#x6709;&#x8BB8;&#x591A;&#x7279;&#x6027;&#x4F46;&#x5BF9;&#x4E8E;&#x5F00;&#x53D1;&#x6765;&#x8BF4;&#xFF0C;&#x5FEB;&#x901F;&#x9002;&#x5E94;&#x548C;&#x5B66;&#x4E60;&#x66F4;&#x4E3A;&#x91CD;&#x8981;&#xFF0C;&#x5F88;&#x591A;&#x65F6;&#x5019;&#x6211;&#x4EEC;&#x90FD;&#x662F;&#x5728;&#x4E0D;&#x660E;&#x767D;&#x5176;&#x539F;&#x56E0;&#x5C31;&#x5F00;&#x59CB;&#x4F7F;&#x7528;&#x7684;&#xFF0C;&#x6B63;&#x5982;&#x6211;&#x4EEC;&#x4E0D;&#x53EF;&#x80FD;&#x628A; Retrofit &#x539F;&#x7406;&#x7814;&#x7A76;&#x900F;&#x624D;&#x4F7F;&#x7528;&#x5B83;&#x3002;&#x53EA;&#x8981;&#x5B83;&#x8DB3;&#x591F;&#x7A33;&#x5B9A;&#x6210;&#x719F;&#xFF0C;&#x5E76;&#x80FD;&#x6709;&#x6548;&#x7684;&#x63D0;&#x5347;&#x5F00;&#x53D1;&#x6548;&#x7387;&#x90FD;&#x662F;&#x503C;&#x5F97;&#x5C1D;&#x8BD5;&#x7684;&#x3002;&#x9119;&#x4EBA;&#x4E0D;&#x624D;&#xFF0C;&#x76EE;&#x524D;&#x4F7F;&#x7528; Kotlin &#x7684;&#x539F;&#x56E0;&#x4E3B;&#x8981;&#x662F;&#x56E0;&#x4E3A;&#x5B83;&#x8BED;&#x6CD5;&#x7B80;&#x6D01;&#xFF0C;&#x652F;&#x6301; lambda &#x8868;&#x8FBE;&#x5F0F;&#xFF0C;&#x5F3A;&#x5927;&#x7684; when &#x8BED;&#x6CD5;&#xFF0C;&#x4E0D;&#x7528;&#x5199;&#x5206;&#x53F7;&#x7ED3;&#x5C3E;&#xFF0C;&#x5149;&#x662F;&#x8FD9;&#x4E9B;&#x5C31;&#x8DB3;&#x4EE5;&#x8BA9;&#x6211;&#x559C;&#x6B22; Kotlin&#x3002;&#x81F3;&#x4E8E;&#x7A7A;&#x5B89;&#x5168;&#x4E4B;&#x7C7B;&#x7684;&#x7279;&#x6027;&#xFF0C;&#x6BD5;&#x7ADF;&#x670D;&#x52A1;&#x7AEF;&#x6570;&#x636E;&#x7C7B;&#x578B;&#x592A;&#x591A; null &#x4E86;&#x5E76;&#x6CA1;&#x591A;&#x5927;&#x611F;&#x89E6;&#xFF0C;&#x8FD9;&#x4E9B;&#x7279;&#x6027;&#x5728;&#x5B9E;&#x9645;&#x5E94;&#x7528;&#x4E2D;&#x6F5C;&#x79FB;&#x9ED8;&#x5316;&#x7684;&#x5C31;&#x5438;&#x6536;&#x4E86;&#xFF0C;&#x4EE5;&#x81F3;&#x4E8E;&#x73B0;&#x5728;&#x9047;&#x5230;&#x51E0;&#x4E2A;Java&#x7F16;&#x5199;&#x7684;&#x4EE3;&#x7801;&#xFF0C;&#x90FD;&#x6709;&#x4E9B;&#x4E0D;&#x9002;&#x5E94;&#x4E86;&#x3002;</p>
<h2 id="&#x4FEE;&#x6539;&#x8BF4;&#x660E;"><a class="header-anchor" href="#&#x4FEE;&#x6539;&#x8BF4;&#x660E;"></a>&#x4FEE;&#x6539;&#x8BF4;&#x660E;</h2>
<p>&#x7A81;&#x7136;&#x706B;&#x4E86;&#x4E00;&#x8138;&#x61F5;&#x903C;&#xFF0C;Google IO &#x7684;&#x5F71;&#x54CD;&#x771F;&#x662F;&#x4E0D;&#x5BB9;&#x5C0F;&#x89D1;&#x3002;&#x907F;&#x514D;&#x8BEF;&#x4EBA;&#x5B50;&#x5F1F;&#x8FD8;&#x662F;&#x4FEE;&#x6539;&#x4E0B;&#x6BD4;&#x8F83;&#x597D;&#xFF0C;&#x4E5F;&#x5C31;&#x628A;&#x4E0A;&#x4E00;&#x7BC7;&#x6587;&#x7AE0;&#x7684;&#x57FA;&#x7840;&#x77E5;&#x8BC6;&#x4E5F;&#x642C;&#x8FC1;&#x8FC7;&#x6765;&#xFF0C;&#x5BF9;&#x6761;&#x4EF6;&#x5224;&#x65AD;when&#x8FD8;&#x6709;&#x7A7A;&#x5224;&#x65AD;&#x5904;&#x7406;&#x8FDB;&#x884C;&#x4E86;&#x4FEE;&#x6539;&#xFF0C;&#x6DFB;&#x52A0;&#x4E86;lambda&#x8BF4;&#x660E;&#xFF0C;&#x79FB;&#x9664;&#x8FC7;&#x671F;&#x94FE;&#x63A5;&#x3002;</p>
<h2 id="kotlin-&#x57FA;&#x672C;&#x8BED;&#x6CD5;"><a class="header-anchor" href="#kotlin-&#x57FA;&#x672C;&#x8BED;&#x6CD5;"></a>Kotlin &#x57FA;&#x672C;&#x8BED;&#x6CD5;</h2>
<p>&#x5148;&#x8BF4;&#x4E2A;&#x5B66;&#x4E60; Kotlin &#x8BED;&#x6CD5;&#x7684;&#x5C0F;&#x7A8D;&#x95E8;&#xFF0C;&#x5C06;&#x4EE3;&#x7801;&#x7528; Java &#x5199;&#x597D;&#xFF0C;&#x7136;&#x540E; Code/Conver Java File to Kotlin File &#x8F6C;&#x6362;&#x6210; Kotlin &#x4EE3;&#x7801;&#xFF0C;&#x6216;&#x8005;&#x5C06; Java &#x4EE3;&#x7801;&#x590D;&#x5236;&#x5230; Kotlin &#x6587;&#x4EF6;&#x4F1A;&#x63D0;&#x793A;&#x8F6C;&#x6362;&#x4E5F;&#x662F;&#x633A;&#x65B9;&#x4FBF;&#x7684;&#xFF0C;&#x6BD4;&#x8F83;&#x5DEE;&#x5F02;&#x5F88;&#x5BB9;&#x6613;&#x5C31;&#x80FD;&#x7406;&#x89E3;&#x4E86;&#xFF0C;&#x4E00;&#x5F00;&#x59CB;&#x96BE;&#x514D;&#x4E0D;&#x9002;&#x5E94;&#x4E60;&#x60EF;&#x540E;&#x76F8;&#x4FE1;&#x4F60;&#x4E00;&#x5B9A;&#x4F1A;&#x559C;&#x6B22;&#x4E0A;Kotlin</p>
<p><strong>1). &#x5B9A;&#x4E49;</strong></p>
<p>&#x5FD8;&#x6389; Java &#x7684;&#x90A3;&#x4E00;&#x5957;&#x5199;&#x6CD5;&#x4E0D;&#x7136;&#x4F1A;&#x5F88;&#x4E0D;&#x9002;&#x5E94;&#x7684;&#xFF0C;Kotlin &#x6709;&#x81EA;&#x5DF1;&#x7684;&#x7279;&#x6027;&#x4E0D;&#x8BE5;&#x88AB; Java &#x7684;&#x601D;&#x7EF4;&#x6240;&#x675F;&#x7F1A;&#x3002;&#x5728; Kotlin &#x4E2D;&#x5E38;&#x91CF;&#x7528; val &#x58F0;&#x660E;&#xFF0C;&#x53D8;&#x91CF;&#x7528; var &#x58F0;&#x660E;&#xFF0C;&#x5173;&#x952E;&#x5B57;&#x5728;&#x524D;&#x9762;&#xFF0C;&#x7C7B;&#x578B;&#x4EE5;&#x5192;&#x53F7;:&#x9694;&#x5F00;&#x5728;&#x540E;&#x9762;&#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x7701;&#x7565;&#x76F4;&#x63A5;&#x8D4B;&#x503C;&#xFF0C;&#x7C7B;&#x578B;&#x540E;&#x5E26;&#x95EE;&#x53F7;?&#x8868;&#x793A;&#x53EF;&#x4E3A;&#x7A7A;&#x7C7B;&#x578B;(&#x9ED8;&#x8BA4;&#x7A7A;&#x5B89;&#x5168;)&#x3002;<br>
&#x5E38;&#x91CF; val &#x5EF6;&#x8FDF;&#x52A0;&#x8F7D; by lazy{}&#xFF0C;&#x9ED8;&#x8BA4;&#x7EBF;&#x7A0B;&#x5B89;&#x5168;&#x5173;&#x95ED;&#x7EBF;&#x7A0B;&#x5B89;&#x5168; lazy(LazyThreadSafetyMode.NONE){}&#xFF0C;&#x53D8;&#x91CF; var &#x5EF6;&#x8FDF;&#x52A0;&#x8F7D; lateinit&#x3002;</p>
<pre><code>//&#x5E38;&#x91CF;&#x6570;&#x7EC4;int[][][] arrs = new int[3][2][1];
val arrs = Array(3) { Array(2) { IntArray(1) } }
//&#x7A7A;&#x5B89;&#x5168;&#x53D8;&#x91CF;
var str: String = &quot;hello&quot;
var str1 = &quot;word&quot;
//&#x53EF;&#x4E3A;&#x7A7A;&#x5B57;&#x7B26;&#x4E32;&#x53D8;&#x91CF;
var str2: String? = null
</code></pre>
<p><strong>2). &#x6761;&#x4EF6;</strong></p>
<p>if&#x2026;else &#x6B63;&#x5E38;&#x4F7F;&#x7528;&#xFF0C;&#x4E0D;&#x8FC7;&#x79FB;&#x9664;&#x4E86; switch &#x7528;&#x66F4;&#x5F3A;&#x5927;&#x7684; when &#x66FF;&#x4EE3;&#xFF0C;when &#x5B50;&#x5F0F;&#x53EF;&#x4EE5;&#x662F;&#x5E38;&#x91CF;&#x3001;&#x53D8;&#x91CF;&#x3001;&#x8FD4;&#x56DE;&#x6570;&#x503C;&#x7684;&#x8868;&#x8FBE;&#x5F0F;&#x3001;&#x8FD4;&#x56DE; Boolean &#x503C;&#x7684;&#x8868;&#x8FBE;&#x5F0F;&#xFF0C;&#x5F3A;&#x5927;&#x5230;&#x7528;&#x6765;&#x66FF;&#x6362; if&#x2026;else if</p>
<pre><code>// &#x6D4B;&#x8BD5;&#x503C; x = 0, -1, 1, 2, 3, 6, 10
var x = 10
when (x) {
    //&#x5E38;&#x91CF;
    2 -&gt; println(&quot;&#x7B49;&#x4E8E;2&quot;)
    //&#x6570;&#x503C;&#x8868;&#x8FBE;&#x5F0F;
    if (x &gt; 0) 1 else -1 -&gt; println(&quot;&#x5927;&#x4E8E;0&#x5E76;&#x7B49;&#x4E8E;1&#xFF0C;&#x6216;&#x5C0F;&#x4E8E;0&#x5E76;&#x7B49;&#x4E8E;-1&quot;)
    //Boolean&#x7C7B;&#x578B;&#x8868;&#x8FBE;&#x5F0F;
    in 1..5 -&gt; println(&quot;&#x8303;&#x56F4;&#x5339;&#x914D;1-5&quot;)
    !in 6..9 -&gt; println(&quot;&#x4E0D;&#x662F;6-9&quot;)
    is Int -&gt; println(&quot;&#x7C7B;&#x578B;&#x5224;&#x65AD;&quot;)
    else -&gt; println(&quot;else&quot;)
}
// &#x4EE3;&#x66FF;if...else if
when{
    x &gt; 6 &amp;&amp; x &lt;= 10  -&gt;  println(&quot;&#x5927;&#x4E8E;6&#x5C0F;&#x4E8E;&#x7B49;&#x4E8E;10&quot;)
    x &lt; 6 -&gt; println(&quot;&#x5C0F;&#x4E8E;6&quot;)
    else -&gt; println(&quot;else&quot;)
}
</code></pre>
<p><strong>3). &#x5FAA;&#x73AF;</strong></p>
<p>while &#x548C; do&#x2026;while &#x540C; Java &#x5E76;&#x65E0;&#x533A;&#x522B;&#xFF0C;for &#x5219;&#x6709;&#x5F88;&#x5927;&#x6539;&#x53D8;&#x5E76;&#x591A;&#x51FA;&#x4E86;&#x51E0;&#x4E2A;&#x53D8;&#x79CD;</p>
<pre><code>val list = ArrayList&lt;String&gt;()
//&#x9012;&#x589E;for (int i = 0; i &lt; list.size(); i++)
for (i in list.indices) {
   print(list[i])
}
//&#x9012;&#x589E;for (int i = 2; i &lt; list.size(); i++)
for (i in 2..list.size-1) {
   print(list[i])
}
//&#x9012;&#x51CF;for (int i = list.size(); i &gt;= 0; i--)
for (i in list.size downTo 0) {
    print(list[i])
}
//&#x64CD;&#x4F5C;&#x5217;&#x8868;&#x5185;&#x7684;&#x5BF9;&#x8C61;
for (item in list) {
    print(item)
}
//&#x52A0;&#x5F3A;&#x7248;
for&#xFF08;&#xFF08;i&#xFF0C; item&#xFF09; in list.witnIndex()&#xFF09; {
    print(list[i])
    print(item)
}
//&#x53D8;&#x79CD;&#x7248;
list.forEach {
    print(it)
}

list.forEach {
    print(it)
}

list.forEachIndexed { i, s -&gt;
    print(list[i])
    print(s)
}

list.forEachIndexed(object :(Int,String) -&gt; Unit{
    override fun invoke(i: Int, s: String) {
        print(list[i])
        print(s)
    }
})
</code></pre>
<h2 id="&#x4E07;&#x80FD;&#x7684;&#x5192;&#x53F7;"><a class="header-anchor" href="#&#x4E07;&#x80FD;&#x7684;&#x5192;&#x53F7;"></a>&#x4E07;&#x80FD;&#x7684;&#x5192;&#x53F7;</h2>
<p>&#x5728; Kotlin &#x4E2D;&#x5192;&#x53F7;:&#x7528;&#x4E07;&#x80FD;&#x6765;&#x79F0;&#x547C;&#x7EDD;&#x4E0D;&#x4E3A;&#x8FC7;&#x3002;&#x5E38;&#x91CF;&#x53D8;&#x91CF;&#x7684;&#x7C7B;&#x578B;&#x58F0;&#x660E;&#xFF0C;&#x51FD;&#x6570;&#x7684;&#x8FD4;&#x56DE;&#x503C;&#xFF0C;&#x7C7B;&#x7684;&#x7EE7;&#x627F;&#x90FD;&#x9700;&#x8981;&#x5B83;</p>
<pre><code>//val&#x8868;&#x793A;&#x5E38;&#x91CF;var&#x8868;&#x793A;&#x53D8;&#x91CF;&#x58F0;&#x660E;
val name: String = &quot;tutu&quot; 
//&#x7701;&#x7565;&#x7C7B;&#x578B;&#x8BF4;&#x660E;
var age = &quot;23&quot;
//fun&#x8868;&#x793A;&#x51FD;&#x6570;
fun getName(): String{
   return &quot;tutu&quot;
}
//&#x7C7B;&#x7EE7;&#x627F;
class UserList&lt;E&gt;(): ArrayList&lt;E&gt;() {
    //...
}
</code></pre>
<p>&#x9664;&#x6B64;&#x4E4B;&#x5916;&#x8FD8;&#x6709;&#x4E00;&#x4E2A;&#x7279;&#x522B;&#x7684;&#x5730;&#x65B9;&#x4E5F;&#x9700;&#x8981;&#x5B83;&#xFF0C;&#x4F7F;&#x7528; Java &#x7C7B;&#x7684;&#x65F6;&#x5019;&#x3002;Kotlin &#x6700;&#x7EC8;&#x4F1A;&#x8FD8;&#x662F;&#x7F16;&#x8BD1;&#x6210; Java &#x5B57;&#x8282;&#x7801;&#xFF0C;&#x4F7F;&#x7528;&#x5230; Java &#x7C7B;&#x662F;&#x5FC5;&#x7136;&#x7684;&#xFF0C;&#x5728;Kotlin&#x8BED;&#x6CD5;&#x5982;&#x4E0B;</p>
<pre><code>val intent = Intent(this, MainActivity::class.java)
</code></pre>
<p>&#x7C7B;&#x540D;::class.java&#x6CA1;&#x6709;&#x4E3A;&#x4EC0;&#x4E48;&#x5C31;&#x8FD9;&#x4E48;&#x5199;&#x8BB0;&#x7740;&#x5C31;&#x662F;</p>
<h2 id="&#x6211;&#x662F;&#x8C01;&#x7684;"><a class="header-anchor" href="#&#x6211;&#x662F;&#x8C01;&#x7684;"></a>&#x6211;&#x662F;&#x8C01;&#x7684;@</h2>
<p>&#x9664;&#x4E86;&#x5192;&#x53F7;&#x53E6;&#x4E00;&#x4E2A;&#x91CD;&#x8981;&#x7B26;&#x53F7;@&#xFF0C;&#x60F3;&#x5FC5;&#x7528;&#x5230;&#x5185;&#x90E8;&#x7C7B;&#x548C;&#x533F;&#x540D;&#x5185;&#x90E8;&#x7C7B;&#x7684;&#x5730;&#x65B9;&#x4E00;&#x5B9A;&#x5F88;&#x591A;&#xFF0C;&#x518D;&#x52A0;&#x4E0A;&#x652F;&#x6301; lambda &#x8BED;&#x6CD5;&#xFF0C;&#x6CA1;&#x6709;&#x5B83;&#x8C01;&#x544A;&#x8BC9;&#x4F60; this &#x548C; return &#x6307;&#x7684;&#x662F;&#x54EA;&#x4E00;&#x4E2A;</p>
<pre><code>class User {
    inner class State{
        fun getUser(): User{
            //&#x8FD4;&#x56DE;User
            return this@User
        }
        fun getState(): State{
            //&#x8FD4;&#x56DE;State
            return this@State
        }
    }
}
</code></pre>
<h2 id="&#x5077;&#x61D2;&#x7684;&#x65B9;&#x6CD5;"><a class="header-anchor" href="#&#x5077;&#x61D2;&#x7684;&#x65B9;&#x6CD5;"></a>&#x5077;&#x61D2;&#x7684;&#x65B9;&#x6CD5;</h2>
<p><strong>1). Kotlin &#x7279;&#x8272;</strong></p>
<p>Java &#x7684; getter/setter &#x65B9;&#x6CD5;&#x81EA;&#x52A8;&#x8F6C;&#x6362;&#x6210;&#x5C5E;&#x6027;&#xFF0C;&#x5BF9;&#x5E94;&#x5230;Kotlin&#x5C5E;&#x6027;&#x7684;&#x8C03;&#x7528;</p>
<pre><code>public class User {
    private String name;
    private String age;

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public String getAge() {
        return age;
    }

    public void setAge(String age) {
        this.age = age;
    }
}
</code></pre>
<p>&#x53CD;&#x4E4B; Kotlin &#x7684;&#x5C5E;&#x6027;&#x81EA;&#x52A8;&#x751F;&#x6210; Java &#x7684; getter/setter &#x65B9;&#x6CD5;&#xFF0C;&#x65B9;&#x4FBF;&#x5728; Java &#x4E2D;&#x8C03;&#x7528;&#xFF0C;&#x540C;&#x6837;&#x7684;&#x5B9A; &#x4E49;&#x5728; Kotlin &#x4E2D;</p>
<pre><code>class User {
    var name: String? = null
    var age: String? = null
}
</code></pre>
<p>&#x8FD9;&#x6837;&#x4E00;&#x4E2A;Java&#x7C7B;&#x5728;Kotlin&#x4E2D;&#x53EA;&#x9700;&#x8FD9;&#x6837;&#x8C03;&#x7528;</p>
<pre><code>val user = User()
//&#x8D4B;&#x503C;
user.name = &quot;tutu&quot;
user.age = &quot;23&quot;
//&#x53D6;&#x503C;
val name = user.name
val age = user.age
</code></pre>
<p>&#x6211;&#x4EEC;&#x7684; getter/setter &#x65B9;&#x6CD5;&#x6709;&#x65F6;&#x4E0D;&#x4F1A;&#x8FD9;&#x4E48;&#x7B80;&#x5355;&#xFF0C;&#x8FD9;&#x5C31;&#x9700;&#x8981;&#x81EA;&#x5B9A;&#x4E49; getter/setter &#x4E86;&#xFF0C;&#x53E6;&#x8D77;&#x4E00;&#x884C;&#x8BBE;&#x7F6E; get()/set(value) &#x65B9;&#x6CD5;&#xFF0C;&#x5B9E;&#x73B0;&#x4E00;&#x4E2A; Java &#x4E2D;&#x5E38;&#x7528;&#x7684;&#x5355;&#x4F8B;&#xFF0C;&#x8FD9;&#x91CC;&#x53EA;&#x4E3A;&#x4E86;&#x5C55;&#x793A;&#xFF0C;&#x5355;&#x4F8B;&#x5728; Kotlin &#x6709;&#x66F4;&#x7B80;&#x5355;&#x7684;&#x65B9;&#x6CD5;&#x5B9E;&#x73B0;&#xFF0C;&#x53EA;&#x8981;&#x5728; package &#x7EA7;&#x522B;&#x521B;&#x5EFA;&#x4E00;&#x4E2A; object &#x5373;&#x53EF;</p>
<pre><code>class User {
    companion object {
        @Volatile var instance: User? = null
            get() {
                if (field == null) {
                    synchronized(User::class.java) {
                        if (field == null)
                            field = User()
                    }
                }
                return field
            }
    }

    var name: String? = null
    var age: String? = null
}
</code></pre>
<p>&#x81EA;&#x5B9A;&#x4E49; getter/setter &#x91CD;&#x70B9;&#x5728; field&#xFF0C;&#x8DDF;&#x6211;&#x4EEC;&#x719F;&#x6089;&#x6240; Java &#x7684; this &#x6307;&#x4EE3;&#x5F53;&#x524D;&#x7C7B;&#x4E00;&#x6837;&#xFF0C;field &#x6307;&#x4EE3;&#x5F53;&#x524D;&#x53C2;&#x6570;&#xFF0C;&#x76F4;&#x63A5;&#x4F7F;&#x7528;&#x53C2;&#x6570;&#x540D; instance &#x4EE3;&#x66FF;&#x4E0D;&#x4F1A;&#x62A5;&#x9519;&#x4F46;&#x5355;&#x4F8B;&#x5C31;&#x6CA1;&#x6548;&#x679C;&#x4E86;</p>
<p><strong>2). &#x5B57;&#x7B26;&#x4E32;&#x6A21;&#x677F;</strong></p>
<p>&#x5728; Java &#x4E2D;&#x62FC;&#x63A5;&#x5B57;&#x7B26;&#x4E32;&#x7684;&#x4EE3;&#x7801;&#x53EF;&#x8BFB;&#x6027;&#x90FD;&#x5F88;&#x5DEE;&#xFF0C;&#x5728; Kotlin &#x5B57;&#x7B26;&#x4E32;&#x62FC;&#x63A5;&#x53D8;&#x5F97;&#x975E;&#x5E38;&#x7B80;&#x6D01;&#xFF0C;&#x53EA;&#x9700;&#x7528; $ &#x540E;&#x9762;&#x52A0;&#x4E0A;&#x53C2;&#x6570;&#x540D;&#xFF0C;&#x590D;&#x6742;&#x7684;&#x53C2;&#x6570;&#x8981;&#x52A0;&#x4E0A;{}</p>
<pre><code>val user = User()
//&#x8D4B;&#x503C;
user.name = &quot;tutu&quot;
user.age = &quot;23&quot;
//&#x53D6;&#x503C;
val name = user.name
val age = user.age
var userInfo = &quot;name:${user.name},  age:$age&quot;
//&#x8F93;&#x51FA;&#x7ED3;&#x679C;&#xFF1A;name:tutu, age:23
</code></pre>
<p><strong>3). lambda</strong></p>
<p>&#x4E00;&#x5F00;&#x59CB;&#x89C9;&#x5F97; lambda &#x5F88;&#x9AD8;&#x7EA7;&#x5B8C;&#x5168;&#x770B;&#x4E0D;&#x61C2;&#xFF0C;&#x5176;&#x5B9E;&#x5F88;&#x7B80;&#x5355;&#x7684;&#x5C31;&#x662F;&#x628A;&#x63A5;&#x53E3;&#x540D;&#x3001;&#x65B9;&#x6CD5;&#x540D;&#x548C;&#x53C2;&#x6570;&#x7C7B;&#x578B;&#x7701;&#x6389;&#x4E0D;&#x5199;&#x518D;&#x52A0;&#x4E2A;-&gt;&#x7F62;&#x4E86;&#xFF0C;&#x660E;&#x767D;&#x8FD9;&#x70B9;&#x4E86;&#x5F88;&#x597D;&#x7406;&#x89E3;&#x3002;</p>
<pre><code>// &#x65E0;&#x53C2;&#x6570;&#x65E0;&#x8FD4;&#x56DE;&#x503C;
Thread(Runnable {
    sleep(1000)
}).start()
// &#x5355;&#x53C2;&#x6570;&#x4E0D;&#x5E26;&#x8FD4;&#x56DE;&#x503C;
view.setOnClickListener { v -&gt;
    Log.e(&quot;tag&quot;, &quot;${v.tag}&quot;)
}
// &#x591A;&#x53C2;&#x6570;&#x5E26;&#x8FD4;&#x56DE;&#x503C;
view.setOnKeyListener(View.OnKeyListener { v, keyCode, event -&gt;
    Log.e(&quot;tag&quot;, &quot;keyCode$keyCode, ${event.keyCode}&quot;)
    if (event.keyCode == KeyEvent.KEYCODE_BACK)
        return@OnKeyListener true
    false
})
</code></pre>
<h2 id="&#x65B0;&#x9762;&#x5B54;"><a class="header-anchor" href="#&#x65B0;&#x9762;&#x5B54;"></a>&#x65B0;&#x9762;&#x5B54;</h2>
<ul>
<li>1). &#x5EF6;&#x8FDF;&#x52A0;&#x8F7D;</li>
<li>2). &#x6D41;&#x7A0B;&#x63A7;&#x5236;</li>
</ul>
<p>&#x5185;&#x5BB9;&#x4E0A;&#x4E00;&#x7BC7;&#x5199;&#x8FC7;&#x53C2;&#x8003; <a href="http://www.jianshu.com/p/946da9f06302" target="_blank" rel="external nofollow noopener noreferrer">Android Kotlin&#x5B66;&#x4E60;&#x7B14;&#x8BB0;</a>&#xFF0C;&#x4E0D;&#x91CD;&#x590D;&#x4ECB;&#x7ECD;</p>
<h2 id="&#x7A7A;&#x5224;&#x65AD;"><a class="header-anchor" href="#&#x7A7A;&#x5224;&#x65AD;"></a>&#x7A7A;&#x5224;&#x65AD;</h2>
<p>Kotlin &#x7684;&#x7A7A;&#x5B89;&#x5168;&#x8BBE;&#x8BA1;&#x5BF9;&#x4E8E;&#x58F0;&#x660E;&#x53EF;&#x4E3A;&#x7A7A;&#x7684;&#x53C2;&#x6570;&#xFF0C;&#x5728;&#x4F7F;&#x7528;&#x65F6;&#x8981;&#x8FDB;&#x884C;&#x7A7A;&#x5224;&#x65AD;&#x5904;&#x7406;&#xFF0C;&#x6709;&#x4E24;&#x79CD;&#x5904;&#x7406;&#x65B9;&#x5F0F;&#xFF0C;&#x5B57;&#x6BB5;&#x540E;&#x52A0; !! &#x50CF; Java &#x4E00;&#x6837;&#x629B;&#x51FA;&#x7A7A;&#x5F02;&#x5E38;&#xFF0C;&#x53E6;&#x4E00;&#x79CD;&#x5B57;&#x6BB5;&#x540E;&#x52A0;?&#x53EF;&#x4E0D;&#x505A;&#x5904;&#x7406;&#x8FD4;&#x56DE;&#x503C;&#x4E3A; null &#x6216;&#x914D;&#x5408; ?: &#x505A;&#x7A7A;&#x5224;&#x65AD;&#x5904;&#x7406;</p>
<pre><code>//&#x7C7B;&#x578B;&#x540E;&#x9762;&#x52A0;?&#x8868;&#x793A;&#x53EF;&#x4E3A;&#x7A7A;
var age: String? = &quot;23&quot; 
//&#x629B;&#x51FA;&#x7A7A;&#x6307;&#x9488;&#x5F02;&#x5E38;
val ages = age!!.toInt()
//&#x4E0D;&#x505A;&#x5904;&#x7406;&#x8FD4;&#x56DE; null
val ages1 = age?.toInt()
//age&#x4E3A;&#x7A7A;&#x8FD4;&#x56DE;-1
val ages2 = age?.toInt() ?: -1
</code></pre>
<p>&#x66F4;&#x591A;&#x7A7A;&#x5904;&#x7406;<a href="http://www.jianshu.com/p/905f8c2de5ea" target="_blank" rel="external nofollow noopener noreferrer">NullPointException &#x5229;&#x5668; Kotlin &#x53EF;&#x9009;&#x578B;</a></p>
<h2 id="&#x6CE8;&#x610F;&#x4E8B;&#x9879;"><a class="header-anchor" href="#&#x6CE8;&#x610F;&#x4E8B;&#x9879;"></a>&#x6CE8;&#x610F;&#x4E8B;&#x9879;</h2>
<p>&#x5185;&#x90E8;&#x7C7B;&#x548C;&#x53C2;&#x6570;&#x9ED8;&#x8BA4;&#x4E3A; public&#xFF0C;&#x800C;&#x5728; Java &#x4E2D;&#x4E3A; private<br>
&#x7C7B;&#x9ED8;&#x8BA4;&#x4E3A;&#x4E0D;&#x53EF;&#x7EE7;&#x627F;(final)&#xFF0C;&#x60F3;&#x8981;&#x53EF;&#x88AB;&#x7EE7;&#x627F;&#x8981;&#x58F0;&#x660E;&#x4E3A; open &#x6216; abstract<br>
&#x53D6;&#x6D88;&#x4E86; static &#x5173;&#x952E;&#x5B57;&#xFF0C;&#x9759;&#x6001;&#x65B9;&#x6CD5;&#x548C;&#x53C2;&#x6570;&#x7EDF;&#x4E00;&#x5199;&#x5728; companion object &#x5757;<br>
internal &#x6A21;&#x5757;&#x5185;&#x53EF;&#x89C1;&#xFF0C;inner &#x5185;&#x90E8;&#x7C7B;</p>
<p>&#x4EE5;&#x4E0A;&#x4EC5;&#x662F;&#x5BF9;&#x4F7F;&#x7528;&#x9891;&#x7387;&#x8F83;&#x9AD8;&#x7684;&#x8BED;&#x6CD5;&#x603B;&#x7ED3;&#xFF0C;&#x5B66;&#x4F1A;&#x57FA;&#x672C;&#x53EF;&#x4EE5;&#x9605;&#x8BFB; Kotlin &#x4EE3;&#x7801;&#xFF0C;&#x9047;&#x5230;&#x70B9;&#x95EE;&#x9898; Google &#x901F;&#x67E5;&#x4E00;&#x4E0B;&#xFF0C;&#x81F3;&#x4E8E;&#x667A;&#x80FD;&#x8F6C;&#x6362;&#x3001;&#x7C7B;&#x578B;&#x63A8;&#x5BFC;&#x4E4B;&#x7C7B;&#x7684;&#x4E0D;&#x7528;&#x8BF4;&#x4F7F;&#x7528;&#x540E;&#x559C;&#x6B22;&#x81EA;&#x7136;&#x5C31;&#x4F1A;&#x4E86;&#x3002;&#x5F53;&#x7136;&#x8FD9;&#x53EA;&#x662F; kotlin &#x7684;&#x57FA;&#x672C;&#x8BED;&#x6CD5;&#xFF0C;&#x65B9;&#x4FBF; Java &#x5FEB;&#x901F;&#x719F;&#x6089; kotlin&#xFF0C;&#x6DF1;&#x5165;&#x5B66;&#x4E60;&#x8FD8;&#x8BF7;&#x9605;&#x8BFB;&#x76F8;&#x5173;&#x8D44;&#x6599;&#x3002;</p>
<h2 id="&#x76F8;&#x5173;&#x94FE;&#x63A5;"><a class="header-anchor" href="#&#x76F8;&#x5173;&#x94FE;&#x63A5;"></a>&#x76F8;&#x5173;&#x94FE;&#x63A5;</h2>
<ul>
<li><a href="https://try.kotlinlang.org/" target="_blank" rel="external nofollow noopener noreferrer">&#x5728;&#x7EBF;&#x5B66;&#x4E60;</a></li>
<li><a href="https://kotlinlang.org/docs/reference/" target="_blank" rel="external nofollow noopener noreferrer">Kotlin &#x5B98;&#x65B9;&#x6587;&#x6863;</a></li>
<li>&#x6700;&#x7EC8;&#x627E;&#x5230;&#x4E86;&#x7FFB;&#x8BD1;&#x51FA;&#x5904;<a href="https://github.com/cctanfujun/kotlin-web-site-cn" target="_blank" rel="external nofollow noopener noreferrer">kotlin-web-site-cn</a></li>
<li><a href="http://tanfujun.com/kotlin-web-site-cn/" target="_blank" rel="external nofollow noopener noreferrer">http://tanfujun.com/kotlin-web-site-cn/</a></li>
</ul>
<h2 id="&#x540E;&#x8BB0;"><a class="header-anchor" href="#&#x540E;&#x8BB0;"></a>&#x540E;&#x8BB0;</h2>
<p>&#x4E3A;&#x4E86;&#x65B9;&#x4FBF;&#x6536;&#x96C6;&#x4F18;&#x79C0; Kotlin &#x6587;&#x7AE0;&#x65B0;&#x5EFA;&#x4E86;&#x4E2A;&#x4E13;&#x9898;&#xFF0C;&#x6709;&#x5174;&#x8DA3;&#x7684;&#x6B22;&#x8FCE;&#x6295;&#x7A3F;&#x4F18;&#x79C0;&#x5185;&#x5BB9;<br>
<a href="http://www.jianshu.com/c/3c442ef98c83" target="_blank" rel="external nofollow noopener noreferrer">http://www.jianshu.com/c/3c442ef98c83</a></p>
<blockquote>
<p>&#x8F6C;&#x8F7D;&#x8BF7;&#x6CE8;&#x660E;&#x51FA;&#x5904;&#xFF1A;<a href="http://www.jianshu.com/u/4025214b6abd" target="_blank" rel="external nofollow noopener noreferrer">http://www.jianshu.com/u/4025214b6abd</a></p>
</blockquote>]]></content>
    
    <summary type="html">
    
      先说个学习Kotlin语法的小窍门，将代码用Java写好，然后Code/Conver Java File to Kotlin File转换成Kotlin代码，或者将Java代码复制到 Kotlin 文件会提示转换也是挺方便的，比较差异很容易就能理解了，一开始难免不适应习惯后相信你一定会喜欢上 Kotlin
    
    </summary>
    
      <category term="晨读" scheme="http://ngudream.com/categories/%E6%99%A8%E8%AF%BB/"/>
    
      <category term="移动开发" scheme="http://ngudream.com/categories/%E6%99%A8%E8%AF%BB/%E7%A7%BB%E5%8A%A8%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="Android" scheme="http://ngudream.com/tags/Android/"/>
    
      <category term="Kotlin" scheme="http://ngudream.com/tags/Kotlin/"/>
    
  </entry>
  
  <entry>
    <title>kotlin for android 简介(二)</title>
    <link href="http://ngudream.com/2017/05/13/kotlin-for-android-introduction-2/"/>
    <id>http://ngudream.com/2017/05/13/kotlin-for-android-introduction-2/</id>
    <published>2017-05-13T13:27:35.000Z</published>
    <updated>2017-06-10T14:50:21.846Z</updated>
    
    <content type="html"><![CDATA[<ul>
<li>&#x539F;&#x6587;&#x94FE;&#x63A5; : <a href="http://antonioleiva.com/kotlin-android-create-project/" target="_blank" rel="external nofollow noopener noreferrer">Kotlin for Android (II): Create a new project</a></li>
<li>&#x8BD1;&#x8005; : <a href="https://github.com/Lollypo" target="_blank" rel="external nofollow noopener noreferrer">Lollypo</a></li>
<li>&#x6821;&#x5BF9;&#x8005;: <a href="https://github.com/chaossss" target="_blank" rel="external nofollow noopener noreferrer">chaossss</a></li>
<li>&#x72B6;&#x6001; : &#x6821;&#x5BF9;&#x4E2D;</li>
</ul>
<p>&#x5F53;&#x6211;&#x4ECE;<a href="http://antonioleiva.com/kotlin-for-android-introduction/" target="_blank" rel="external nofollow noopener noreferrer">what Kotlin is and what it can do for us</a>&#x83B7;&#x5F97;&#x4E00;&#x4E9B;&#x542F;&#x53D1;&#x4E4B;&#x540E;&#xFF0C;&#x89C9;&#x5F97;&#x662F;&#x65F6;&#x5019;&#x914D;&#x7F6E;&#x4E0B; Android Studio&#x6765;&#x5E2E;&#x52A9;&#x6211;&#x4EEC;&#x4F7F;&#x7528; Kotlin &#x5F00;&#x53D1; Android &#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x4E86;&#x3002; &#x5176;&#x4E2D;&#x6709;&#x4E9B;&#x6B65;&#x9AA4;&#x53EA;&#x9700;&#x8981;&#x5728;&#x521D;&#x6B21;&#x4F7F;&#x7528;&#x65F6;&#x5B8C;&#x6210;&#x4E00;&#x6B21;, &#x4F46;&#x662F;&#x5176;&#x4ED6;&#x4E00;&#x4E9B; Gradle &#x914D;&#x7F6E;&#x9700;&#x8981;&#x4E3A;&#x6BCF;&#x4E00;&#x4E2A;&#x65B0;&#x9879;&#x76EE;&#x505A;&#x4E00;&#x904D;&#x3002; ( &#x8BD1;&#x8005;&#x6CE8; : &#x5982;&#x679C;&#x4F60;&#x5BF9; Kotlin &#x8FD8;&#x4E0D;&#x4E86;&#x89E3;&#xFF0C;&#x53EF;&#x4EE5;&#x5148;&#x770B;&#x770B;<a href="https://github.com/bboyfeiyu/android-tech-frontier/blob/master/androidweekly/kotlin-for-android%E7%AE%80%E4%BB%8B" target="_blank" rel="external nofollow noopener noreferrer">kotlin-for-android</a>&#x7B80;&#x4ECB;&#x8FD9;&#x7BC7;&#x6587;&#x7AE0; )</p>
<p>&#x5BF9;&#x4E8E;&#x672C;&#x7CFB;&#x5217;&#x6587;&#x7AE0;, &#x6211;&#x5C06;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x6211;&#x65E9;&#x4E9B;&#x65F6;&#x5019;&#x521B;&#x5EFA;&#x7684;<a href="https://play.google.com/store/apps/details?id=com.limecreativelabs.bandhook" target="_blank" rel="external nofollow noopener noreferrer">Bandhook</a>&#x7684;&#x7B80;&#x5316;&#x7248;&#x672C;, &#x5B83;&#x57FA;&#x672C;&#x4E0A;&#x5C31;&#x662F;&#x8FDE;&#x63A5;&#x5230;&#x4E00;&#x4E2A;&#x57FA;&#x4E8E;RESTful&#x7684;&#x97F3;&#x4E50;API&#x7136;&#x540E;&#x63A5;&#x6536;&#x4E00;&#x4E9B;&#x4E50;&#x961F;&#x7684;&#x4FE1;&#x606F;. &#x94FE;&#x63A5;&#x5230; <a href="https://github.com/antoniolg/Bandhook-Kotlin" target="_blank" rel="external nofollow noopener noreferrer">Bandhook Kotlin on Github</a> &#x67E5;&#x770B;&#x6E90;&#x4EE3;&#x7801;&#x3002;</p>
<h2 id="&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x65B0;&#x9879;&#x76EE;&#x7136;&#x540E;&#x4E0B;&#x8F7D;kotlin&#x63D2;&#x4EF6;"><a class="header-anchor" href="#&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x65B0;&#x9879;&#x76EE;&#x7136;&#x540E;&#x4E0B;&#x8F7D;kotlin&#x63D2;&#x4EF6;"></a>&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x65B0;&#x9879;&#x76EE;&#x7136;&#x540E;&#x4E0B;&#x8F7D;Kotlin&#x63D2;&#x4EF6;</h2>
<p>&#x5C31;&#x50CF;&#x4F60;&#x5E73;&#x5E38;&#x505A;&#x7684;&#x90A3;&#x6837;&#xFF0C;&#x6211;&#x4EEC;&#x53EA;&#x9700;&#x8981;&#x7528; Android Studio &#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x5E26; Activity &#x7684;&#x57FA;&#x672C; Android &#x9879;&#x76EE;&#x3002;</p>
<p>&#x4E00;&#x65E6;&#x5B8C;&#x6210;,&#x6211;&#x4EEC;&#x9700;&#x8981;&#x505A;&#x7684;&#x7B2C;&#x4E00;&#x4EF6;&#x4E8B;&#x5C31;&#x662F;&#x53BB;&#x4E0B;&#x8F7D; Kotlin &#x63D2;&#x4EF6;. &#x53BB;&#x5230; Android Studio &#x7684;&#x7CFB;&#x7EDF;&#x8BBE;&#x7F6E;&#x4E2D;&#x7136;&#x540E;&#x67E5;&#x627E; plugins &#x4E4B;&#x540E;&#xFF0C;&#x518D;&#x6B21;&#x4F7F;&#x7528;&#x641C;&#x7D22;&#x627E;&#x5230; Kotlin &#x63D2;&#x4EF6;&#xFF0C;&#x5B89;&#x88C5;&#x5E76;&#x91CD;&#x542F; IDE&#x3002;</p>
<div align="center">
<img data-original="/2017/05/13/kotlin-for-android-introduction-2/1.png" class="lazy">
</div>
<h2 id="&#x6DFB;&#x52A0;-kotlin-&#x63D2;&#x4EF6;&#x7684;&#x4F9D;&#x8D56;&#x5230;&#x7684;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x7684;-build-gradle-&#x4E2D;"><a class="header-anchor" href="#&#x6DFB;&#x52A0;-kotlin-&#x63D2;&#x4EF6;&#x7684;&#x4F9D;&#x8D56;&#x5230;&#x7684;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x7684;-build-gradle-&#x4E2D;"></a>&#x6DFB;&#x52A0; Kotlin &#x63D2;&#x4EF6;&#x7684;&#x4F9D;&#x8D56;&#x5230;&#x7684;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x7684; build.gradle &#x4E2D;</h2>
<p>&#x8BE5;&#x9879;&#x76EE;&#x7684; build.gradle &#x9700;&#x8981;&#x6DFB;&#x52A0;&#x4E00;&#x4E2A;&#x65B0;&#x7684;&#x4F9D;&#x8D56;&#xFF0C;&#x8FD9;&#x4E2A;&#x4F9D;&#x8D56;&#x5C06;&#x4F1A;&#x88AB;Kotlin&#x63D2;&#x4EF6;&#x8981;&#x6C42;&#x4EE5;&#x5728;&#x4E3B;Module&#x4E2D;&#x4F7F;&#x7528;:</p>
<pre><code>buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath &apos;com.android.tools.build:gradle:1.1.3&apos;
        classpath &apos;org.jetbrains.kotlin:kotlin-gradle-plugin:1.0.0&apos;
    }
}
</code></pre>
<h2 id="&#x914D;&#x7F6E;-module-&#x7684;-build-grade"><a class="header-anchor" href="#&#x914D;&#x7F6E;-module-&#x7684;-build-grade"></a>&#x914D;&#x7F6E; Module &#x7684; build.grade</h2>
<p>&#x9996;&#x5148;, &#x5E94;&#x7528;Kotlin&#x63D2;&#x4EF6;:</p>
<pre><code>apply plugin: &apos;com.android.application&apos;
apply plugin: &apos;kotlin-android&apos;	
</code></pre>
<p>&#x63A5;&#x7740;, &#x6DFB;&#x52A0;Kotlin&#x5E93;&#x5230;&#x4F60;&#x7684;&#x4F9D;&#x8D56;:</p>
<pre><code>dependencies {
    compile fileTree(dir: &apos;libs&apos;, include: [&apos;*.jar&apos;])
    compile &apos;org.jetbrains.kotlin:kotlin-stdlib:1.0.0&apos;
}
</code></pre>
<p>&#x6700;&#x540E;, &#x4F60;&#x9700;&#x8981;&#x6DFB;&#x52A0;&#x6211;&#x4EEC;&#x5728;&#x4E0B;&#x4E00;&#x4E2A;&#x6B65;&#x9AA4;&#x521B;&#x5EFA;&#x7684;Kotlin&#x6587;&#x4EF6;&#x5939;:</p>
<pre><code>android {
    compileSdkVersion 22
    buildToolsVersion &quot;22.0.0&quot;
 
    ...
 
    sourceSets {
        main.java.srcDirs += &apos;src/main/kotlin&apos;
    }
}
</code></pre>
<p>&#x6216;&#x8005;,&#x4F60;&#x53EF;&#x4EE5;&#x8DF3;&#x8FC7;&#x8FD9;&#x4E00;&#x6B65;,&#x5F53;&#x505A;&#x5B8C;&#x4E0B;&#x4E00;&#x4E2A;&#x6B65;&#x9AA4;&#x65F6;&#xFF0C;&#x4F7F;&#x7528;&#x8FD9;&#x4E2A;Android Studio&#x7684;&#x64CD;&#x4F5C;:</p>
<div align="center">
<img data-original="/2017/05/13/kotlin-for-android-introduction-2/2.png" class="lazy">
</div>
<p>&#x6211;&#x66F4;&#x503E;&#x5411;&#x4E8E;&#x624B;&#x52A8;&#x53BB;&#x505A;&#x4EE5;&#x4FDD;&#x6301;&#x6211;&#x7684; Gradle &#x6587;&#x4EF6;&#x6709;&#x6574;&#x6D01;&#x6709;&#x5E8F;, &#x4F46;&#x7B2C;&#x4E8C;&#x4E2A;&#x9009;&#x9879;&#x53EF;&#x80FD;&#x8F83;&#x4E3A;&#x5BB9;&#x6613;&#x4E9B;&#x3002;</p>
<h2 id="&#x521B;&#x5EFA;-kotlin-&#x6587;&#x4EF6;&#x5939;"><a class="header-anchor" href="#&#x521B;&#x5EFA;-kotlin-&#x6587;&#x4EF6;&#x5939;"></a>&#x521B;&#x5EFA; Kotlin &#x6587;&#x4EF6;&#x5939;</h2>
<p>&#x5982;&#x679C;&#x4F60;&#x5C06;&#x9879;&#x76EE;&#x7684;&#x89C6;&#x56FE;&#x4ECE;&#x2018;Android&#x2019;&#x8F6C;&#x5230;&#x2018;Project&#x2019;&#xFF0C;&#x90A3;&#x5C06;&#x4F1A;&#x975E;&#x5E38;&#x5BB9;&#x6613;&#x3002;&#x4F9D;&#x6B21;&#x9009;&#x62E9;&#x2018;app-&gt;src-&gt;main&#x2019; &#x7136;&#x540E;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x540D;&#x4E3A; &#x2018;kotlin&#x2019;&#x7684;&#x6587;&#x4EF6;&#x5939;:</p>
<div align="center">
<img data-original="/2017/05/13/kotlin-for-android-introduction-2/3.png" class="lazy">
</div>
<h2 id="&#x5C06;-java-activity-&#x8F6C;&#x6362;&#x6210;-kotlin-&#x6587;&#x4EF6;"><a class="header-anchor" href="#&#x5C06;-java-activity-&#x8F6C;&#x6362;&#x6210;-kotlin-&#x6587;&#x4EF6;"></a>&#x5C06; Java activity &#x8F6C;&#x6362;&#x6210; Kotlin &#x6587;&#x4EF6;</h2>
<p>Kotlin &#x63D2;&#x4EF6;&#x80FD;&#x5C06; Java &#x8F6C;&#x6362;&#x4E3A; Kotlin &#x7C7B;. &#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x8F7B;&#x677E;&#x7684;&#x901A;&#x8FC7;&#x2018;Code&#x2019;&#x83DC;&#x5355;&#x4E2D;&#x7684;&#x2018;Convert Java File to Kotlin File&#x2019;&#x9009;&#x9879;&#x8F6C;&#x6362;&#x5F53;&#x524D;&#x7684; Activity &#x5230; Kotlin &#x7C7B; :</p>
<div align="center">
<img data-original="/2017/05/13/kotlin-for-android-introduction-2/4.png" class="lazy">
</div>
<p>IDE&#x5C06;&#x5EFA;&#x8BAE;&#x4F60;&#x79FB;&#x52A8;&#x65B0;&#x6587;&#x4EF6;&#x5230;Kotlin&#x6587;&#x4EF6;&#x5939;&#xFF0C;&#x70B9;&#x51FB;&#x2018;Move File&#x2019;(&#x6216;&#x8005;&#x624B;&#x52A8;&#x5B8C;&#x6210;&#xFF0C;&#x5047;&#x5982;&#x4F60;&#x6CA1;&#x770B;&#x5230;&#x8FD9;&#x4E2A;&#x9009;&#x9879;)&#x3002;</p>
<pre><code>public class MainActivity : ActionBarActivity() {
 
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_main)
    }
 
 
    override fun onCreateOptionsMenu(menu: Menu): Boolean {
        // Inflate the menu; this adds items to the action bar if it is present.
        getMenuInflater().inflate(R.menu.menu_main, menu)
        return true
    }
 
    override fun onOptionsItemSelected(item: MenuItem): Boolean {
        // Handle action bar item clicks here. The action bar will
        // automatically handle clicks on the Home/Up button, so long
        // as you specify a parent activity in AndroidManifest.xml.
        val id = item.getItemId()
 
        //noinspection SimplifiableIfStatement
        if (id == R.id.action_settings) {
            return true
        }
 
        return super.onOptionsItemSelected(item)
    }
}
</code></pre>
<h2 id="&#x4E3B;&#x8981;&#x533A;&#x522B;"><a class="header-anchor" href="#&#x4E3B;&#x8981;&#x533A;&#x522B;"></a>&#x4E3B;&#x8981;&#x533A;&#x522B;</h2>
<p>&#x770B;&#x4E00;&#x770B;&#x4E4B;&#x524D;&#x7684;&#x4EE3;&#x7801;, &#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x770B;&#x5230;&#x4E00;&#x4E9B;&#x660E;&#x663E;&#x7684;&#x5DEE;&#x5F02;&#x3002; &#x5176;&#x4E2D;&#x5F88;&#x5927;&#x4E00;&#x90E8;&#x5206;&#x6211;&#x4EEC;&#x5C06;&#x4F1A;&#x5728;&#x4E0B;&#x4E00;&#x7BC7;&#x6587;&#x7AE0;&#x8BB2;&#x89E3;&#x5230;:</p>
<ul>
<li>&#x4F7F;&#x7528;&#x5192;&#x53F7;&#xFF0C;&#x800C;&#x4E0D;&#x662F;&#x2019;extends&#x2019;&#x3002;</li>
<li>&#x663E;&#x5F0F;&#x4F7F;&#x7528;&#x2018;override&#x2019;: &#x5728;Java&#x4E2D;, &#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x4E00;&#x4E2A;&#x6CE8;&#x91CA;&#x4F7F;&#x6211;&#x4EEC;&#x7684;&#x4EE3;&#x7801;&#x66F4;&#x6E05;&#x6670;,&#x4F46;&#x5B83;&#x4E0D;&#x662F;&#x5FC5;&#x8981;&#x6761;&#x4EF6;. Kotlin&#x5C06;&#x8FEB;&#x4F7F;&#x6211;&#x4EEC;&#x4F7F;&#x7528;&#x5B83;.</li>
<li>&#x51FD;&#x6570;&#x5219;&#x4F7F;&#x7528;&#x2018;fun&#x2019;&#x5173;&#x952E;&#x5B57;: Kotlin&#x662F;&#x4E00;&#x4E2A;&#x9762;&#x5411;&#x5BF9;&#x8C61;&#x7684;&#x51FD;&#x6570;&#x5F0F;&#x8BED;&#x8A00;, &#x56E0;&#x6B64;&#x53EF;&#x80FD;&#x4F1A;&#x4E0E;&#x5176;&#x4ED6;&#x8BED;&#x8A00;&#x7C7B;&#x4F3C;&#xFF0C;&#x4F8B;&#x5982;Scala. Java&#x65B9;&#x6CD5;&#x88AB;&#x51FD;&#x6570;&#x7684;&#x5F62;&#x5F0F;&#x8868;&#x793A;&#x3002;</li>
<li>&#x51FD;&#x6570;&#x53C2;&#x6570;&#x547D;&#x540D;&#x89C4;&#x5219;&#x4E0D;&#x540C;: &#x7C7B;&#x578B;&#x548C;&#x540D;&#x79F0;&#x90FD;&#x5199;&#x5728;&#x76F8;&#x53CD;&#x7684;&#x4F4D;&#x7F6E;,&#x5E76;&#x7528;&#x5192;&#x53F7;&#x9694;&#x5F00;&#x3002;</li>
<li>&#x5206;&#x53F7;&#x53EF;&#x9009;: &#x6211;&#x4EEC;&#x4E0D;&#x9700;&#x8981;&#x5728;&#x884C;&#x7684;&#x7ED3;&#x5C3E;&#x5904;&#x52A0;&#x4E0A;&#x5206;&#x53F7;&#x3002;&#x5982;&#x679C;&#x6211;&#x4EEC;&#x60F3;&#x8981;&#x4E5F;&#x53EF;&#x4EE5;&#x52A0;&#x4E0A;, &#x4F46;&#x5982;&#x679C;&#x6211;&#x4EEC;&#x4E0D;&#x8FD9;&#x6837;&#x505A;&#xFF0C;&#x5B83;&#x5C31;&#x53EF;&#x4EE5;&#x8282;&#x7701;&#x5927;&#x91CF;&#x7684;&#x65F6;&#x95F4;,&#x5E76;&#x4F7F;&#x6211;&#x4EEC;&#x7684;&#x4EE3;&#x7801;&#x6574;&#x6D01;&#x3002;</li>
<li>&#x5176;&#x4ED6;&#x5C0F;&#x7EC6;&#x8282;: &#x5728;&#x7B80;&#x4ECB;&#x4E00;&#x6587;&#x4E2D;, &#x6211;&#x5DF2;&#x7ECF;&#x8BF4;&#x5230;&#x4E86; &#x2018;?&#x2019; &#x7684;&#x610F;&#x4E49;. &#x8FD9;&#x8868;&#x660E;&#x53C2;&#x6570;&#x53EF;&#x4EE5;&#x4E3A;&#x7A7A;&#x3002;NULL&#x7684;&#x5904;&#x7406;&#x65B9;&#x5F0F;&#x4E0D;&#x540C;&#x4E8E;Java&#x3002;</li>
</ul>
<h2 id="&#x603B;&#x7ED3;"><a class="header-anchor" href="#&#x603B;&#x7ED3;"></a>&#x603B;&#x7ED3;</h2>
<p>&#x4E5F;&#x8BB8;&#x6211;&#x4EEC;&#x4F1A;&#x8BA4;&#x4E3A;&#x4F7F;&#x7528;&#x4E00;&#x95E8;&#x65B0;&#x8BED;&#x8A00;&#x5C06;&#x4F1A;&#x975E;&#x5E38;&#x56F0;&#x96BE;, Kotlin&#x88AB;JetBrains&#x56E2;&#x961F;&#x5F00;&#x53D1;&#x51FA;&#x6765;&#x7684;&#xFF0C;&#x8981;&#x6210;&#x4E3A;&#x6700;&#x5BB9;&#x6613;&#x548C;&#x53EF;&#x4EA4;&#x4E92;&#x7684;&#x8BED;&#x8A00;&#x7528;&#x6765;&#x8986;&#x76D6;&#x90A3;&#x4E9B;Java&#x7684;&#x4E0D;&#x8DB3;&#x4E4B;&#x5904;&#x3002;&#x7531;&#x4E8E;Android Studio&#x4E5F;&#x662F;&#x57FA;&#x4E8E;JetBrains&#x7684;&#x4EA7;&#x54C1;&#xFF0C;&#x8FD9;&#x5C06;&#x8BA9;&#x96C6;&#x6210;&#x5230;&#x8FD9;&#x4E2A;IDE&#x4E2D;&#x5E76;&#x4E14;&#x5F00;&#x59CB;&#x5DE5;&#x4F5C;&#x975E;&#x5E38;&#x7B80;&#x5355;&#x3002;</p>
<p>&#x5982;&#x679C;&#x6CA1;&#x770B;&#x8FC7;&#x4ECB;&#x7ECD;1&#x7684;&#x8BDD;&#xFF0C;&#x53EF;&#x4EE5;&#x770B;&#x770B;&#x4E0B;&#x9762;&#x4E24;&#x7BC7;&#x6587;&#x7AE0;&#xFF1A;</p>
<ul>
<li><a href="http://ngudream.com/2017/05/10/kotlin-for-android-introduction/">kotlin for android &#x7B80;&#x4ECB; (&#x4E00;)</a></li>
<li><a href="https://m.signalvnoise.com/kotlin-makes-me-a-happier-better-programmer-1fc668724563" target="_blank" rel="external nofollow noopener noreferrer">Kotlin makes me a happier (better) programmer</a></li>
</ul>]]></content>
    
    <summary type="html">
    
      当我从 what Kotlin is and what it can do for us 获得一些启发之后，觉得是时候配置下 Android Studio 来帮助我们使用 Kotlin 开发 Android 应用程序了。其中有些步骤只需要在初次使用时完成一次，但是其他一些Gradle配置需要为每一个新项目做一遍。
    
    </summary>
    
      <category term="晨读" scheme="http://ngudream.com/categories/%E6%99%A8%E8%AF%BB/"/>
    
      <category term="移动开发" scheme="http://ngudream.com/categories/%E6%99%A8%E8%AF%BB/%E7%A7%BB%E5%8A%A8%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="Android" scheme="http://ngudream.com/tags/Android/"/>
    
      <category term="Kotlin" scheme="http://ngudream.com/tags/Kotlin/"/>
    
  </entry>
  
  <entry>
    <title>kotlin for android 简介(一)</title>
    <link href="http://ngudream.com/2017/05/10/kotlin-for-android-introduction/"/>
    <id>http://ngudream.com/2017/05/10/kotlin-for-android-introduction/</id>
    <published>2017-05-10T15:20:13.000Z</published>
    <updated>2017-06-10T14:49:29.708Z</updated>
    
    <content type="html"><![CDATA[<ul>
<li>&#x539F;&#x6587;&#x94FE;&#x63A5; : <a href="http://antonioleiva.com/kotlin-for-android-introduction/" target="_blank" rel="external nofollow noopener noreferrer">Kotlin for Android (I): Introduction</a></li>
<li>&#x8BD1;&#x8005; : <a href="https://github.com/canglangwenyue" target="_blank" rel="external nofollow noopener noreferrer">canglangwenyue</a></li>
<li>&#x6821;&#x5BF9;&#x8005;: <a href="https://github.com/bboyfeiyu" target="_blank" rel="external nofollow noopener noreferrer">Mr.Simple</a></li>
<li>&#x72B6;&#x6001; : &#x5B8C;&#x6210;</li>
</ul>
<p>Kotlin &#x662F;&#x4F17;&#x591A;&#x57FA;&#x4E8E;JVM&#x7684;&#x8BED;&#x8A00;&#x4E4B;&#x4E00;&#xFF0C;&#x5B83;&#x4E00;&#x5F00;&#x59CB;&#x662F;&#x4F5C;&#x4E3A; android &#x5F00;&#x53D1;&#x4E2D; java &#x8BED;&#x8A00;&#x7684;&#x53EF;&#x80FD;&#x7684;&#x4EE3;&#x66FF;&#x8005;&#x51FA;&#x73B0;&#x7684;&#x3002;java &#x662F;&#x4E16;&#x754C;&#x4E0A;&#x4F7F;&#x7528;&#x6700;&#x591A;&#x7684;&#x8BED;&#x8A00;&#x4E4B;&#x4E00;&#xFF0C;&#x800C;&#x4F34;&#x968F;&#x7740;&#x5176;&#x4ED6;&#x8BED;&#x8A00;&#x7684;&#x53D1;&#x5C55;&#x4F7F;&#x5F97;&#x7A0B;&#x5E8F;&#x5458;&#x7F16;&#x7A0B;&#x8D8A;&#x6765;&#x8D8A;&#x5BB9;&#x6613;&#xFF0C;&#x4F46;&#x662F; java &#x5E76;&#x6CA1;&#x6709;&#x5C3D;&#x5FEB;&#x5730;&#x5411;&#x9884;&#x671F;&#x76EE;&#x6807;&#x53D1;&#x5C55;&#x3002;</p>
<h2 id="kotlin&#x7B80;&#x4ECB;"><a class="header-anchor" href="#kotlin&#x7B80;&#x4ECB;"></a>Kotlin&#x7B80;&#x4ECB;</h2>
<p>Kotlin &#x662F; JetBrains &#x521B;&#x9020;&#x7684;&#x57FA;&#x4E8E;JVM&#x7684;&#x8BED;&#x8A00;&#xFF0C;JetBrains &#x662F; IntelliJ &#x7684;&#x7F14;&#x9020;&#x56E2;&#x961F;&#x3002; Kotlin &#x662F;&#x4E00;&#x4E2A;&#x62E5;&#x6709;&#x5F88;&#x591A;&#x51FD;&#x6570;&#x7F16;&#x7A0B;&#x7279;&#x70B9;&#x7684;&#x9762;&#x5411;&#x5BF9;&#x8C61;&#x7684;&#x7F16;&#x7A0B;&#x8BED;&#x8A00;&#x3002;</p>
<h2 id="&#x4E3A;&#x4EC0;&#x4E48;&#x8981;&#x7528;kotlin"><a class="header-anchor" href="#&#x4E3A;&#x4EC0;&#x4E48;&#x8981;&#x7528;kotlin"></a>&#x4E3A;&#x4EC0;&#x4E48;&#x8981;&#x7528;Kotlin</h2>
<p>&#x6211;&#x9996;&#x5148;&#x58F0;&#x660E;&#x6211;&#x5E76;&#x6CA1;&#x6709;&#x4F7F;&#x7528; Kotlin &#x5F88;&#x957F;&#x65F6;&#x95F4;&#xFF0C;&#x6211;&#x51E0;&#x4E4E;&#x662F;&#x5728;&#x5B66;&#x4E60;&#x7684;&#x540C;&#x65F6;&#x5199;&#x4E86;&#x8FD9;&#x4E9B;&#x6587;&#x7AE0;&#x7684;&#x3002;&#x6211;&#x5E76;&#x6CA1;&#x6709;&#x5C1D;&#x8BD5;&#x4EFB;&#x4F55;&#x5176;&#x5B83;&#x7684;&#x66FF;	&#x4EE3;&#x8BED;&#x8A00;&#xFF0C;&#x4F8B;&#x5982; Go &#x548C; Scala&#xFF0C;&#x6240;&#x4EE5;&#x5982;&#x679C;&#x4F60;&#x662F;&#x771F;&#x7684;&#x8003;&#x8651;&#x6362;&#x4E00;&#x79CD;&#x5F00;&#x53D1;&#x8BED;&#x8A00;&#x7684;&#x8BDD;&#xFF0C;&#x6211;&#x5EFA;&#x8BAE;&#x4F60;&#x53BB;&#x641C;&#x7D22;&#x4E00;&#x4E0B;&#x5176;&#x4ED6;&#x4EBA;&#x5BF9;&#x8FD9;&#x4E9B;	&#x8BED;&#x8A00;&#x7684;&#x8BC4;&#x4EF7;&#x3002;&#x4E00;&#x4E2A;&#x4F7F;&#x7528; Scala &#x5F00;&#x53D1; android &#x7684;&#x4F8B;&#x5B50;&#x53EF;&#x4EE5;&#x5728;[47deg Github site](http:/ <a href="http://47deg.github.io/translate-bubble-android/" target="_blank" rel="external nofollow noopener noreferrer">47deg.github.io/translate-bubble-android/</a>)&#x627E;&#x5230;&#x3002;</p>
<p>&#x4EE5;&#x4E0B;&#x662F;&#x6211;&#x9009;&#x62E9;&#x5B66;&#x4E60; Kotlin &#x7684;&#x539F;&#x56E0;&#xFF1A;</p>
<ul>
<li>&#x5B66;&#x4E60;&#x66F2;&#x7EBF;&#x76F8;&#x5BF9;&#x8F83;&#x5FEB;&#xFF1A;&#x4EE5; Scala &#x4F5C;&#x4E3A;&#x4F8B;&#x5B50;&#x8FDB;&#x884C;&#x6BD4;&#x8F83;&#xFF0C;&#x6211;&#x4EEC;&#x662F;&#x5411;&#x7740;&#x66F4;&#x7B80;&#x5355;&#x7684;&#x65B9;&#x5411;&#x524D;&#x8FDB;&#x3002;Kotlin &#x6709;&#x66F4;&#x591A;&#x7684;&#x9650;&#x5236;&#xFF0C;&#x4F46;&#x662F;&#x5982;&#x679C;&#x4F60;&#x6CA1;&#x6709;&#x5B66;&#x4E60;&#x8FC7;&#x4E00;&#x95E8;&#x73B0;&#x4EE3;&#x7F16;&#x7A0B;&#x8BED;&#x8A00;&#x7684;&#x8BDD;&#xFF0C;Kotlin &#x66F4;&#x5BB9;&#x6613;&#x5B66;&#x4E60;&#x3002;</li>
<li>&#x8F7B;&#x91CF;&#x7EA7;&#xFF1A;&#x4E0E;&#x5176;&#x4ED6;&#x8BED;&#x8A00;&#x76F8;&#x6BD4; Kotlin &#x7684;&#x6838;&#x5FC3;&#x5E93;&#x66F4;&#x5C0F;&#x3002;&#x8FD9;&#x5F88;&#x91CD;&#x8981;&#xFF0C;&#x56E0;&#x4E3A;android&#x51FD;&#x6570;&#x6570;&#x91CF;&#x9650;&#x5236;(&#x51FD;&#x6570;&#x6570;&#x91CF;&#x4E0D;&#x80FD;&#x5927;&#x4E8E;64k)&#x662F;&#x4E00;&#x4E2A;&#x95EE;&#x9898;&#xFF0C;&#x867D; &#x7136;&#x6709;&#x4E00;&#x4E9B;&#x9009;&#x62E9;&#x6765;&#x89E3;&#x51B3;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#xFF0C;&#x4F8B;&#x5982;proguard &#x6216;  multidexing&#xFF0C;&#x4F46;&#x662F;&#x8FD9;&#x4E9B;&#x89E3;&#x51B3;&#x65B9;&#x6848;&#x4F1A;&#x52A0;&#x590D;&#x6742;&#x5EA6;&#xFF0C;&#x5E76;&#x5BFC; &#x81F4;&#x8C03;&#x8BD5;&#x65F6;&#x82B1;&#x8D39;&#x66F4;&#x591A;&#x7684;&#x65F6;&#x95F4;&#x3002;&#x5F15;&#x5165; Kotlin &#x6838;&#x5FC3;&#x5E93;&#x6DFB;&#x52A0;&#x4E86;&#x4E0D;&#x5230; 7000 &#x4E2A;&#x65B9;&#x6CD5;&#xFF0C;&#x5927;&#x81F4;&#x548C; support&#xFF0D;v4 &#x4E00;&#x6837;&#x3002;</li>
<li>&#x9AD8;&#x4EA4;&#x4E92;&#x6027;&#xFF1A;Kotlin &#x548C;&#x5176;&#x5B83; java &#x5E93;&#x534F;&#x8C03;&#x4F7F;&#x7528;&#x7684;&#x7279;&#x522B;&#x597D;&#xFF0C;&#x5E76;&#x4E14;&#x4EA4;&#x4E92;&#x64CD;&#x4F5C;&#x5F88;&#x7B80;&#x5355;&#x3002;&#x8FD9;&#x662F; Kotlin &#x56E2;&#x961F; &#x5728;&#x5F00;&#x53D1;&#x65B0;&#x8BED;&#x8A00;&#x662F;&#x7684;&#x4E3B;&#x8981;&#x7406;&#x5FF5;&#x4E4B;&#x4E00;&#x3002;&#x4ED6;&#x4EEC;&#x60F3;&#x5728;&#x4F7F;&#x7528; Kotlin &#x5F00;&#x53D1;&#x65F6;&#x5E76;&#x4E0D;&#x7528;&#x91CD;&#x5199;&#x4E4B;&#x524D;&#x6240;&#x6709;&#x7528; java &#x5199;&#x7684;&#x4EE3;&#x7801;&#xFF0C;&#x6240;&#x4EE5;&#xFF0C;Kotlin &#x548C; java &#x4EA4;&#x4E92;&#x7684;&#x80FD;&#x529B;&#x5FC5;&#x987B;&#x975E;&#x5E38;&#x9AD8;&#x3002;</li>
<li>&#x4E0E; AS &#x548C; Gradle &#x5B8C;&#x7F8E;&#x7ED3;&#x5408;&#xFF1A;&#x6211;&#x4EEC;&#x6709;&#x4E00;&#x4E2A;IDE&#x7684;&#x63D2;&#x4EF6;&#x548C;&#x53E6;&#x4E00;&#x4E2A;&#x5C5E;&#x4E8E; Grade &#x7684;&#x63D2;&#x4EF6;&#xFF0C;&#x56E0;&#x6B64;&#xFF0C;&#x7528;Kotlin &#x8FDB;&#x884C; android &#x7F16;&#x7A0B;&#x5E76;&#x4E0D;&#x56F0;&#x96BE;&#x3002;</li>
</ul>
<p>&#x5728;&#x5F00;&#x59CB;&#x4EFB;&#x4F55;&#x4E89;&#x8BBA;&#x4E4B;&#x524D;&#x6211;&#x5EFA;&#x8BAE;&#x4F60;&#x770B;&#x4E00;&#x4E0B; Jake Wharton &#x5199;&#x7684;&#x4E00;&#x4E2A;&#x6709;&#x8DA3;&#x7684;&#x6587;&#x6863;<a href="https://docs.google.com/document/d/1ReS3ep-hjxWA8kZi0YqDbEhCqTt29hG8P44aA9W0DM8/edit?hl=es&amp;forcehl=1&amp;pli=1" target="_blank" rel="external nofollow noopener noreferrer">the use of Kotlin for Android development</a>&#x3002;</p>
<h2 id="kotlin&#x7684;&#x4F18;&#x70B9;"><a class="header-anchor" href="#kotlin&#x7684;&#x4F18;&#x70B9;"></a>Kotlin&#x7684;&#x4F18;&#x70B9;</h2>
<h3 id="&#x53EF;&#x8BFB;&#x6027;&#x66F4;&#x9AD8;-&#x66F4;&#x7B80;&#x6D01;"><a class="header-anchor" href="#&#x53EF;&#x8BFB;&#x6027;&#x66F4;&#x9AD8;-&#x66F4;&#x7B80;&#x6D01;"></a>&#x53EF;&#x8BFB;&#x6027;&#x66F4;&#x9AD8;&#xFF0C;&#x66F4;&#x7B80;&#x6D01;</h3>
<p>&#x4F7F;&#x7528; Kotlin&#xFF0C;&#x53EF;&#x4EE5;&#x66F4;&#x5BB9;&#x6613;&#x7684;&#x907F;&#x514D;&#x521B;&#x5EFA;&#x6A21;&#x7248;&#x578B;&#x4EE3;&#x7801;&#xFF0C;&#x56E0;&#x4E3A;&#x5927;&#x591A;&#x6570;&#x7ECF;&#x5178;&#x7684;&#x60C5;&#x666F;&#x90FD;&#x9ED8;&#x8BA4;&#x5305;&#x542B;&#x5728; Kotlin &#x4E2D;&#x3002;</p>
<p>&#x4F8B;&#x5982;&#xFF0C;&#x5728; java &#x4E2D;&#xFF0C;&#x6211;&#x4EEC;&#x60F3;&#x8981;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x5178;&#x578B;&#x7684; data class &#x65F6;&#x9700;&#x8981;&#x8FD9;&#x6837;&#x505A;&#xFF1A;</p>
<pre><code>public class Artist {
    private long id;
    private String name;
    private String url;
    private String mbid;
 
    public long getId() {
        return id;
    }
 
    public void setId(long id) {
        this.id = id;
    }
 
    public String getName() {
        return name;
    }
 
    public void setName(String name) {
        this.name = name;
    }
 
    public String getUrl() {
        return url;
    }
 
    public void setUrl(String url) {
        this.url = url;
    }
 
    public String getMbid() {
        return mbid;
    }
 
    public void setMbid(String mbid) {
        this.mbid = mbid;
    }
 
    @Override public String toString() {
        return &quot;Artist{&quot; +
                &quot;id=&quot; + id +
                &quot;, name=&apos;&quot; + name + &apos;\&apos;&apos; +
                &quot;, url=&apos;&quot; + url + &apos;\&apos;&apos; +
                &quot;, mbid=&apos;&quot; + mbid + &apos;\&apos;&apos; +
                &apos;}&apos;;
    }
}
</code></pre>
<p>&#x90A3;&#x4E48;&#x5728; Kotlin &#x9700;&#x8981;&#x591A;&#x5C11;&#x4EE3;&#x7801;&#x5462;&#xFF1F;&#x4EC5;&#x4EC5;&#x662F;&#x4E0B;&#x9762;&#x8FD9;&#x4E2A;&#x7B80;&#x5355;&#x7684;&#x6570;&#x636E;&#x7C7B;&#xFF1A;</p>
<pre><code>data class Artist(
    var id: Long, 
    var name: String, 
    var url: String, 
    var mbid: String)
</code></pre>
<h3 id="&#x7A7A;&#x6307;&#x9488;&#x5B89;&#x5168;"><a class="header-anchor" href="#&#x7A7A;&#x6307;&#x9488;&#x5B89;&#x5168;"></a>&#x7A7A;&#x6307;&#x9488;&#x5B89;&#x5168;</h3>
<p>&#x5F53;&#x6211;&#x4EEC;&#x7528; java &#x5F00;&#x53D1;&#x65F6;&#xFF0C;&#x6211;&#x4EEC;&#x7684;&#x5927;&#x591A;&#x6570;&#x4EE3;&#x7801;&#x662F;&#x8981;&#x8FDB;&#x884C;&#x7C7B;&#x578B;&#x68C0;&#x67E5;&#x7684;&#xFF0C;&#x5982;&#x679C;&#x6211;&#x4EEC;&#x4E0D;&#x60F3;&#x51FA;&#x73B0; unexpected NullPointerException &#x7684;&#x8BDD;,&#x6211;&#x4EEC;&#x5C31;&#x8981;&#x5728;&#x8FD0;&#x884C;&#x4EE3;&#x7801;&#x4E4B;&#x524D;&#x6301;&#x7EED;&#x7684;&#x68C0;&#x67E5;&#x662F;&#x5426;&#x6709;&#x5BF9;&#x8C61;&#x4E3A; null&#x3002;Kotlin&#xFF0C;&#x548C;&#x5176;&#x5B83;&#x8BED; &#x8A00;&#x4E00;&#x6837;&#xFF0C;&#x662F;&#x7A7A;&#x6307;&#x9488;&#x5B89;&#x5168;&#x7684;&#xFF0C;&#x56E0;&#x4E3A;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x5B89;&#x5168;&#x7684;&#x8C03;&#x7528;&#x64CD;&#x4F5C;&#x6765;&#x51C6;&#x786E;&#x7684;&#x58F0;&#x660E;&#x4E00;&#x4E2A; object &#x53EF;&#x4EE5;&#x4E3A; null&#x3002;</p>
<p>&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x8FD9;&#x6837;&#x505A;&#xFF1A;</p>
<pre><code>//This won&#xB4;t compile. Artist can&#xB4;t be null
	var notNullArtist: Artist = null
 
	//Artist can be null
	var artist: Artist? = null
 
	// Won&#xB4;t compile, artist could be null and we need to deal with that
	artist.print()
 
	// Will print only if artist != null
	artist?.print()
 
	// Smart cast. We don&#xB4;t need to use safe call operator if we previously checked 	nullity
	if (artist != null) {
	    artist.print()
	}
	 
	// Only use it when we are sure it&#xB4;s not null. Will throw an exception otherwise.
	artist!!.print()
 
	// Use Elvis operator to give an alternative in case the object is null
	val name = artist?.name ?: &quot;empty&quot;
</code></pre>
<h3 id="&#x6269;&#x5C55;&#x65B9;&#x6CD5;"><a class="header-anchor" href="#&#x6269;&#x5C55;&#x65B9;&#x6CD5;"></a>&#x6269;&#x5C55;&#x65B9;&#x6CD5;</h3>
<p>&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x7ED9;&#x4EFB;&#x4F55;&#x7C7B;&#x6DFB;&#x52A0;&#x65B0;&#x65B9;&#x6CD5;&#x3002;&#x8FD9;&#x6BD4;&#x6211;&#x4EEC;&#x5728; project &#x4E2D;&#x4F7F;&#x7528;&#x7684;&#x5DE5;&#x5177;&#x7C7B;&#x53EF;&#x8BFB;&#x6027;&#x66F4;&#x9AD8;&#x3002;&#x4F8B;&#x5982;&#xFF1A;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x7ED9; Fragment &#x6DFB;&#x52A0;&#x4E00;&#x4E2A;&#x65B0;&#x65B9;&#x6CD5;&#x6765;&#x663E;&#x793A; Toast&#x3002;</p>
<pre><code>fun Fragment.toast(message: CharSequence, duration: Int = Toast.LENGTH_SHORT) {
    Toast.makeText(getActivity(), message, duration).show()
}
</code></pre>
<p>&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x8FD9;&#x6837;&#x4F7F;&#x7528;&#xFF1A;</p>
<pre><code>fragment.toast(&quot;Hello world!&quot;)
</code></pre>
<h3 id="&#x652F;&#x6301;&#x51FD;&#x6570;&#x5F0F;&#x7F16;&#x7A0B;"><a class="header-anchor" href="#&#x652F;&#x6301;&#x51FD;&#x6570;&#x5F0F;&#x7F16;&#x7A0B;"></a>&#x652F;&#x6301;&#x51FD;&#x6570;&#x5F0F;&#x7F16;&#x7A0B;</h3>
<p>&#x5982;&#x679C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x4E0D;&#x7528;&#x5728;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x7684;&#x65F6;&#x5019;&#x6BCF;&#x4E00;&#x6B21;&#x90FD;&#x521B;&#x5EFA;&#x4E00;&#x4E2A; listener&#xFF0C;&#x5C31;&#x50CF;&#x521B;&#x5EFA;&#x4E00;&#x4E2A; click  listener &#x90A3;&#x6837;&#x7684;&#x64CD;&#x4F5C;&#xFF0C; &#x800C;&#x662F;&#x4EC5;&#x4EC5;&#x5B9A;&#x4E49;&#x6211;&#x4EEC;&#x60F3;&#x8981;&#x505A;&#x4EC0;&#x4E48;&#xFF1F;&#x8FD9;&#x79CD;&#x60F3;&#x6CD5;&#x7684;&#x786E;&#x53EF;&#x4EE5;&#x5B9E;&#x73B0;&#xFF0C;&#x5B83;&#x7684;&#x5B9E;&#x73B0;&#x5F97;&#x76CA;&#x4E8E; lambdad &#x7684;&#x4F7F;&#x7528;&#xFF1A;</p>
<pre><code>view.setOnClickListener({ toast(&quot;Hello world!&quot;) })
</code></pre>
<h2 id="kotlin&#x76EE;&#x524D;&#x5B58;&#x5728;&#x7684;&#x9650;&#x5236;"><a class="header-anchor" href="#kotlin&#x76EE;&#x524D;&#x5B58;&#x5728;&#x7684;&#x9650;&#x5236;"></a>Kotlin&#x76EE;&#x524D;&#x5B58;&#x5728;&#x7684;&#x9650;&#x5236;</h2>
<p>Kotlin &#x4F9D;&#x65E7;&#x5728;&#x53D1;&#x5C55;&#xFF0C;&#x867D;&#x7136;&#x5B83;&#x76F8;&#x5BF9;&#x7A33;&#x5B9A;&#xFF0C;&#x5E76;&#x4E14; final release &#x7248;&#x672C;&#x5C31;&#x5F88;&#x5FEB;&#x53D1;&#x5E03;&#xFF0C;&#x4F46;&#x662F; Kotlin &#x5728;&#x8FDB;&#x884C; android &#x76F8;&#x5173;&#x5F00;&#x53D1;&#x7684;&#x65F6;&#x5019;&#x8FD8;&#x662F;&#x6709;&#x4E9B;&#x9650;&#x5236;&#x7684;&#x3002;</p>
<ul>
<li>&#x4EA4;&#x4E92;&#x6027;&#x4E0E;&#x81EA;&#x52A8;&#x4EE3;&#x7801;&#x751F;&#x6210;&#xFF1A;&#x4E00;&#x4E9B;&#x6709;&#x540D;&#x7684; android Libraries&#xFF0C;&#x4F8B;&#x5982; Dagger &#x6216; Butterknife&#xFF0C;&#x4ED6;&#x4EEC;&#x4F9D;&#x8D56;&#x4E8E;&#x81EA;&#x52A8; &#x4EE3;&#x7801;&#x751F;&#x6210;&#xFF0C;&#x8FD9;&#x79CD;&#x60C5;&#x51B5;&#x4E0B;&#x5982;&#x679C;&#x6709;&#x540D;&#x5B57;&#x51B2;&#x7A81;&#x7684;&#x8BDD;&#x5C06;&#x65E0;&#x6CD5;&#x8FDB;&#x884C;&#x4EE3;&#x7801;&#x751F;&#x6210;&#x3002;Kotlin &#x6B63;&#x5728;&#x89E3;&#x51B3;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#xFF0C;&#x6240;&#x4EE5;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#x4E5F;&#x8BB8; &#x4F1A;&#x5F88;&#x5FEB;&#x89E3;&#x51B3;&#x3002;&#x65E0;&#x8BBA;&#x5982;&#x4F55;&#xFF0C;&#x6211;&#x5C06;&#x5728;&#x63A5;&#x4E0B;&#x6765;&#x7684;&#x6587;&#x7AE0;&#x91CC;&#x9610;&#x660E;&#xFF0C;Kotlin &#x8BED;&#x8A00;&#x7684;&#x8868;&#x8FBE;&#x80FD;&#x529B;&#x4F1A;&#x8BA9;&#x6211;&#x4EEC;&#x89C9;&#x5F97;&#x4E0D;&#x518D;&#x9700;&#x8981;&#x90A3;&#x4E48;&#x591A;&#x7684; Libraries&#x3002;</li>
<li>&#x58F0;&#x660E;&#x81EA;&#x5B9A;&#x4E49; View &#x6BD4;&#x8F83;&#x56F0;&#x96BE;&#xFF1A;Kotlin &#x7C7B;&#x53EA;&#x80FD;&#x58F0;&#x660E;&#x4E00;&#x4E2A;&#x6784;&#x9020;&#x51FD;&#x6570;&#xFF0C;&#x7136;&#x800C;&#x81EA;&#x5B9A;&#x4E49; View &#x901A;&#x5E38;&#x9700;&#x8981;&#x4E09;&#x4E2A;&#x3002;&#x5982;&#x679C;&#x6211; &#x4EEC;&#x4F7F;&#x7528;&#x4EE3;&#x7801;&#x6765;&#x521B;&#x5EFA;View&#x7684;&#x8BDD;&#x53EF;&#x4EE5;&#x907F;&#x514D;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#xFF0C;&#x4F46;&#x5BF9;&#x4E8E;&#x4F7F;&#x7528;XML&#x6587;&#x4EF6;&#x6765;&#x58F0;&#x660E; View &#x7684;&#x8BDD;&#x5C31;&#x4E0D;&#x80FD;&#x6EE1;&#x8DB3;&#x9700;&#x6C42;&#x4E86;&#x3002;&#x6700;&#x5BB9;&#x6613;&#x7684;&#x53D8;&#x901A;&#x65B9;&#x5F0F;&#x662F;&#x7528; java &#x6765;&#x58F0;&#x660E;&#x8FD9;&#x4E9B; &#x81EA;&#x5B9A;&#x4E49;View&#x7684;&#x5B9E;&#x73B0;&#x7C7B;&#xFF0C;&#x7136;&#x540E;&#x901A;&#x8FC7; Kotlin &#x6765;&#x4F7F;&#x7528;&#x5B83;&#x4EEC;&#x3002;Kotlin &#x56E2;&#x961F;&#x8BB8;&#x8BFA;&#x5C06;&#x5728; M11 release &#x89E3;&#x51B3;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#x3002; Update: Kotlin M11 is out and now includes secondary constructors</li>
<li>android &#x4E0B; Junit &#x6D4B;&#x8BD5;&#xFF1A;AS 1.1 &#x4E2D;&#x4ECB;&#x7ECD;&#x7684;&#x65B0;&#x7279;&#x6027;&#x5E76;&#x4E0D;&#x9002;&#x7528;&#x4E0E; Kotlin&#x3002;&#x987A;&#x4FBF;&#x8BF4;&#x8BF4;&#xFF0C;&#x7CFB;&#x7EDF;&#x6D4B;&#x8BD5;&#x548C; Junit &#x6D4B;&#x8BD5;&#x5BF9;&#x4E8E;&#x7EAF; Kotlin &#x9879;&#x76EE;&#x662F;&#x5B8C;&#x5168;&#x53EF;&#x7528;&#x3002;</li>
</ul>
<h2 id="&#x7ED3;&#x8BBA;"><a class="header-anchor" href="#&#x7ED3;&#x8BBA;"></a>&#x7ED3;&#x8BBA;</h2>
<p>&#x5BF9;&#x4E8E; android apps &#x5F00;&#x53D1;&#xFF0C;Kotlin &#x662F;&#x4E00;&#x4E2A;&#x975E;&#x5E38;&#x6709;&#x8DA3;&#x7684; java &#x66FF;&#x4EE3;&#x8005;&#x3002;&#x4E0B;&#x4E00;&#x7BC7;&#x6587;&#x7AE0;&#x5C06;&#x4F1A;&#x63CF;&#x8FF0;&#x5982;&#x4F55;&#x7528; Kotlin &#x65B0;&#x5EFA;&#x4E00; &#x4E2A;project&#xFF0C;&#x548C;&#x5982;&#x4F55;&#x66F4;&#x597D;&#x7684;&#x9002;&#x7528; Kotlin &#x6765;&#x4F7F;&#x5F97; android &#x5F00;&#x53D1;&#x66F4;&#x52A0;&#x7B80;&#x5355;&#x3002;&#x656C;&#x8BF7;&#x5173;&#x6CE8;&#xFF01;</p>
<p>&#x610F;&#x72B9;&#x672A;&#x5C3D;&#x7684;&#x8BDD;&#xFF0C;&#x53EF;&#x4EE5;&#x770B;&#x770B;&#x4E0B;&#x9762;&#x4E24;&#x7BC7;&#x6587;&#x7AE0;&#xFF1A;</p>
<ul>
<li><a href="http://ngudream.com/2017/05/13/kotlin-for-android-introduction-2/">kotlin for android &#x7B80;&#x4ECB; (&#x4E8C;)</a></li>
<li><a href="https://m.signalvnoise.com/kotlin-makes-me-a-happier-better-programmer-1fc668724563" target="_blank" rel="external nofollow noopener noreferrer">Kotlin makes me a happier (better) programmer</a></li>
</ul>]]></content>
    
    <summary type="html">
    
      Kotlin 是众多基于JVM的语言之一，它一开始是作为 android  开发中 java 语言的可能的代替者出现的。java 是世界上使用最多的语言之一，而伴随着其他语言的发展使得程序员编程越来越容易，但是 java 并没有尽快地向预期目标发展。
    
    </summary>
    
      <category term="晨读" scheme="http://ngudream.com/categories/%E6%99%A8%E8%AF%BB/"/>
    
      <category term="移动开发" scheme="http://ngudream.com/categories/%E6%99%A8%E8%AF%BB/%E7%A7%BB%E5%8A%A8%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="Android" scheme="http://ngudream.com/tags/Android/"/>
    
      <category term="Kotlin" scheme="http://ngudream.com/tags/Kotlin/"/>
    
  </entry>
  
  <entry>
    <title>Java 面试题之数据库</title>
    <link href="http://ngudream.com/2017/05/07/java-interview-sql/"/>
    <id>http://ngudream.com/2017/05/07/java-interview-sql/</id>
    <published>2017-05-07T13:31:19.000Z</published>
    <updated>2017-05-16T13:51:00.785Z</updated>
    
    <content type="html"><![CDATA[<h2 id="&#x6570;&#x636E;&#x5E93;&#x57FA;&#x7840;"><a class="header-anchor" href="#&#x6570;&#x636E;&#x5E93;&#x57FA;&#x7840;"></a>&#x6570;&#x636E;&#x5E93;&#x57FA;&#x7840;</h2>
<p><strong>1. &#x6570;&#x636E;&#x62BD;&#x8C61;&#xFF1A;&#x7269;&#x7406;&#x62BD;&#x8C61;&#x3001;&#x6982;&#x5FF5;&#x62BD;&#x8C61;&#x3001;&#x89C6;&#x56FE;&#x7EA7;&#x62BD;&#x8C61;&#xFF0C;&#x5185;&#x6A21;&#x5F0F;&#x3001;&#x6A21;&#x5F0F;&#x3001;&#x5916;&#x6A21;&#x5F0F;</strong></p>
<p>&#x6570;&#x636E;&#x5E93;&#x7CFB;&#x7EDF;&#x4E09;&#x7EA7;&#x62BD;&#x8C61;&#x662F;&#x6307;&#xFF1A;</p>
<ul>
<li>&#x89C6;&#x56FE;&#x7EA7;&#x62BD;&#x8C61;&#xFF1A;&#x628A;&#x73B0;&#x5B9E;&#x4E16;&#x754C;&#x62BD;&#x8C61;&#x4E3A;&#x6570;&#x636E;&#x5E93;&#x7684;&#x5916;&#x6A21;&#x5F0F;;&#x628A;&#x73B0;&#x5B9E;&#x4E16;&#x754C;&#x4E2D;&#x7684;&#x4FE1;&#x606F;&#x6309;&#x7167;&#x4E0D;&#x540C;&#x7528;&#x6237;&#x7684;&#x89C2;&#x70B9;&#x62BD;&#x8C61;&#x4E3A;&#x591A;&#x4E2A;&#x903B;&#x8F91;&#x6570;&#x636E;&#x7ED3;&#x6784;&#xFF0C;&#x6BCF;&#x4E2A;&#x903B;&#x8F91;&#x7ED3;&#x6784;&#x79F0;&#x4E3A;&#x4E00;&#x4E2A;&#x89C6;&#x56FE;&#xFF0C;&#x63CF;&#x8FF0;&#x4E86;&#x6BCF;&#x4E2A;&#x7528;&#x6237;&#x5173;&#x5FC3;&#x7684;&#x6570;&#x636E;&#xFF0C;&#x5373;&#x6570;&#x636E;&#x5E93;&#x7684;&#x4E00;&#x4E2A;&#x4FA7;&#x9762;&#x3002;&#x6240;&#x6709;&#x89C6;&#x56FE;&#x7684;&#x96C6;&#x5408;&#x5F62;&#x6210;&#x4E86;&#x6570;&#x636E;&#x5E93;&#x7684;&#x5916;&#x6A21;&#x5F0F;&#x3002;</li>
<li>&#x6982;&#x5FF5;&#x7EA7;&#x62BD;&#x8C61;&#xFF1A;&#x628A;&#x6570;&#x636E;&#x5E93;&#x5916;&#x6A21;&#x5F0F;&#x62BD;&#x8C61;&#x4E3A;&#x6570;&#x636E;&#x5E93;&#x7684;&#x6982;&#x5FF5;&#x6A21;&#x5F0F;&#x3002;&#x5C06;&#x5916;&#x6A21;&#x5F0F;&#x6240;&#x6709;&#x89C6;&#x56FE;&#x7EFC;&#x5408;&#x4E3A;&#x6570;&#x636E;&#x5E93;&#x6574;&#x4F53;&#x903B;&#x8F91;&#x7ED3;&#x6784;&#xFF0C;&#x8FD9;&#x5C31;&#x662F;&#x6570;&#x636E;&#x5E93;&#x6982;&#x5FF5;&#x6A21;&#x5F0F;&#xFF0C;&#x5373;&#x5168;&#x4F53;&#x7528;&#x6237;&#x5173;&#x5FC3;&#x7684;&#x73B0;&#x5B9E;&#x62BD;&#x8C61;&#x3002;</li>
<li>&#x7269;&#x7406;&#x7EA7;&#x62BD;&#x8C61;&#xFF1A;&#x628A;&#x6570;&#x636E;&#x5E93;&#x6982;&#x5FF5;&#x6A21;&#x5F0F;&#x62BD;&#x8C61;&#x4E3A;&#x6570;&#x636E;&#x5E93;&#x7684;&#x5185;&#x6A21;&#x5F0F;&#x3002;</li>
</ul>
<p><strong>&#x4E09;&#x79CD;&#x6570;&#x636E;&#x5E93;&#x6A21;&#x5F0F;&#xFF1A;&#x5916;&#x6A21;&#x5F0F;&#x3001;&#x6982;&#x5FF5;&#x6A21;&#x5F0F;&#x548C;&#x5185;&#x6A21;&#x5F0F;&#xFF1A;</strong></p>
<p>&#xFF08;1&#xFF09;&#x6A21;&#x5F0F;</p>
<p>&#x5B9A;&#x4E49;&#xFF1A;&#x4E5F;&#x79F0;&#x903B;&#x8F91;&#x6A21;&#x5F0F;&#xFF0C;&#x662F;&#x6570;&#x636E;&#x5E93;&#x4E2D;&#x5168;&#x4F53;&#x6570;&#x636E;&#x7684;&#x903B;&#x8F91;&#x7ED3;&#x6784;&#x548C;&#x7279;&#x5F81;&#x7684;&#x63CF;&#x8FF0;&#xFF0C;&#x662F;&#x6240;&#x6709;&#x7528;&#x6237;&#x7684;&#x516C;&#x5171;&#x6570;&#x636E;&#x89C6;&#x56FE;&#x3002;</p>
<p>&#x7406;&#x89E3;&#xFF1A;</p>
<p>&#x2460; &#x4E00;&#x4E2A;&#x6570;&#x636E;&#x5E93;&#x53EA;&#x6709;&#x4E00;&#x4E2A;&#x6A21;&#x5F0F;;</p>
<p>&#x2461; &#x662F;&#x6570;&#x636E;&#x5E93;&#x6570;&#x636E;&#x5728;&#x903B;&#x8F91;&#x7EA7;&#x4E0A;&#x7684;&#x89C6;&#x56FE;;</p>
<p>&#x2462; &#x6570;&#x636E;&#x5E93;&#x6A21;&#x5F0F;&#x4EE5;&#x67D0;&#x4E00;&#x79CD;&#x6570;&#x636E;&#x6A21;&#x578B;&#x4E3A;&#x57FA;&#x7840;;</p>
<p>&#x2463; &#x5B9A;&#x4E49;&#x6A21;&#x5F0F;&#x65F6;&#x4E0D;&#x4EC5;&#x8981;&#x5B9A;&#x4E49;&#x6570;&#x636E;&#x7684;&#x903B;&#x8F91;&#x7ED3;&#x6784;(&#x5982;&#x6570;&#x636E;&#x8BB0;&#x5F55;&#x7531;&#x54EA;&#x4E9B;&#x6570;&#x636E;&#x9879;&#x6784;&#x6210;&#xFF0C;&#x6570;&#x636E;&#x9879;&#x7684;&#x540D;&#x5B57;&#x3001;&#x7C7B;&#x578B;&#x3001;&#x53D6;&#x503C;&#x8303;&#x56F4;&#x7B49;)&#xFF0C;&#x800C;&#x4E14;&#x8981;&#x5B9A;&#x4E49;&#x4E0E;&#x6570;&#x636E;&#x6709;&#x5173;&#x7684;&#x5B89;&#x5168;&#x6027;&#x3001;&#x5B8C;&#x6574;&#x6027;&#x8981;&#x6C42;&#xFF0C;&#x5B9A;&#x4E49;&#x8FD9;&#x4E9B;&#x6570;&#x636E;&#x4E4B;&#x95F4;&#x7684;&#x8054;&#x7CFB;&#x3002;</p>
<p>&#xFF08;2&#xFF09;&#x5916;&#x6A21;&#x5F0F;(External Schema)</p>
<p>&#x5B9A;&#x4E49;&#xFF1A;&#x4E5F;&#x79F0;&#x5B50;&#x6A21;&#x5F0F;(Subschema)&#x6216;&#x7528;&#x6237;&#x6A21;&#x5F0F;&#xFF0C;&#x662F;&#x6570;&#x636E;&#x5E93;&#x7528;&#x6237;(&#x5305;&#x62EC;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x5458;&#x548C;&#x6700;&#x7EC8;&#x7528;&#x6237;)&#x80FD;&#x591F;&#x770B;&#x89C1;&#x548C;&#x4F7F;&#x7528;&#x7684;&#x5C40;&#x90E8;&#x6570;&#x636E;&#x7684;&#x903B;&#x8F91;&#x7ED3;&#x6784;&#x548C;&#x7279;&#x5F81;&#x7684;&#x63CF;&#x8FF0;&#xFF0C;&#x662F;&#x6570;&#x636E;&#x5E93;&#x7528;&#x6237;&#x7684;&#x6570;&#x636E;&#x89C6;&#x56FE;&#xFF0C;&#x662F;&#x4E0E;&#x67D0;&#x4E00;&#x5E94;&#x7528;&#x6709;&#x5173;&#x7684;&#x6570;&#x636E;&#x7684;&#x903B;&#x8F91;&#x8868;&#x793A;&#x3002;</p>
<p>&#x7406;&#x89E3;&#xFF1A;</p>
<p>&#x2460; &#x4E00;&#x4E2A;&#x6570;&#x636E;&#x5E93;&#x53EF;&#x4EE5;&#x6709;&#x591A;&#x4E2A;&#x5916;&#x6A21;&#x5F0F;;</p>
<p>&#x2461; &#x5916;&#x6A21;&#x5F0F;&#x5C31;&#x662F;&#x7528;&#x6237;&#x89C6;&#x56FE;;</p>
<p>&#x2462; &#x5916;&#x6A21;&#x5F0F;&#x662F;&#x4FDD;&#x8BC1;&#x6570;&#x636E;&#x5B89;&#x5168;&#x6027;&#x7684;&#x4E00;&#x4E2A;&#x6709;&#x529B;&#x63AA;&#x65BD;&#x3002;</p>
<p>&#xFF08;3&#xFF09;&#x5185;&#x6A21;&#x5F0F;(Internal Schema)</p>
<p>&#x5B9A;&#x4E49;&#xFF1A;&#x4E5F;&#x79F0;&#x5B58;&#x50A8;&#x6A21;&#x5F0F;(Storage Schema)&#xFF0C;&#x5B83;&#x662F;&#x6570;&#x636E;&#x7269;&#x7406;&#x7ED3;&#x6784;&#x548C;&#x5B58;&#x50A8;&#x65B9;&#x5F0F;&#x7684;&#x63CF;&#x8FF0;&#xFF0C;&#x662F;&#x6570;&#x636E;&#x5728;&#x6570;&#x636E;&#x5E93;&#x5185;&#x90E8;&#x7684;&#x8868;&#x793A;&#x65B9;&#x5F0F;(&#x4F8B;&#x5982;&#xFF0C;&#x8BB0;&#x5F55;&#x7684;&#x5B58;&#x50A8;&#x65B9;&#x5F0F;&#x662F;&#x987A;&#x5E8F;&#x5B58;&#x50A8;&#x3001;&#x6309;&#x7167;B&#x6811;&#x7ED3;&#x6784;&#x5B58;&#x50A8;&#x8FD8;&#x662F;&#x6309;hash&#x65B9;&#x6CD5;&#x5B58;&#x50A8;;&#x7D22;&#x5F15;&#x6309;&#x7167;&#x4EC0;&#x4E48;&#x65B9;&#x5F0F;&#x7EC4;&#x7EC7;;&#x6570;&#x636E;&#x662F;&#x5426;&#x538B;&#x7F29;&#x5B58;&#x50A8;&#xFF0C;&#x662F;&#x5426;&#x52A0;&#x5BC6;;&#x6570;&#x636E;&#x7684;&#x5B58;&#x50A8;&#x8BB0;&#x5F55;&#x7ED3;&#x6784;&#x6709;&#x4F55;&#x89C4;&#x5B9A;)&#x3002;</p>
<p>&#x7406;&#x89E3;&#xFF1A;</p>
<p>&#x2460; &#x4E00;&#x4E2A;&#x6570;&#x636E;&#x5E93;&#x53EA;&#x6709;&#x4E00;&#x4E2A;&#x5185;&#x6A21;&#x5F0F;;</p>
<p>&#x2461; &#x4E00;&#x4E2A;&#x8868;&#x53EF;&#x80FD;&#x7531;&#x591A;&#x4E2A;&#x6587;&#x4EF6;&#x7EC4;&#x6210;&#xFF0C;&#x5982;&#xFF1A;&#x6570;&#x636E;&#x6587;&#x4EF6;&#x3001;&#x7D22;&#x5F15;&#x6587;&#x4EF6;&#x3002;</p>
<p>&#x5B83;&#x662F;&#x6570;&#x636E;&#x5E93;&#x7BA1;&#x7406;&#x7CFB;&#x7EDF;(DBMS)&#x5BF9;&#x6570;&#x636E;&#x5E93;&#x4E2D;&#x6570;&#x636E;&#x8FDB;&#x884C;&#x6709;&#x6548;&#x7EC4;&#x7EC7;&#x548C;&#x7BA1;&#x7406;&#x7684;&#x65B9;&#x6CD5;</p>
<p>&#x5176;&#x76EE;&#x7684;&#x6709;&#xFF1A;</p>
<p>&#x2460; &#x4E3A;&#x4E86;&#x51CF;&#x5C11;&#x6570;&#x636E;&#x5197;&#x4F59;&#xFF0C;&#x5B9E;&#x73B0;&#x6570;&#x636E;&#x5171;&#x4EAB;;</p>
<p>&#x2461; &#x4E3A;&#x4E86;&#x63D0;&#x9AD8;&#x5B58;&#x53D6;&#x6548;&#x7387;&#xFF0C;&#x6539;&#x5584;&#x6027;&#x80FD;&#x3002;</p>
<p>&#x5177;&#x4F53;&#x8BF7;&#x770B;&#xFF1A;<a href="http://www.2cto.com/database/201412/360263.html" target="_blank" rel="external nofollow noopener noreferrer">http://www.2cto.com/database/201412/360263.html</a></p>
<p><strong>2. SQL&#x8BED;&#x8A00;&#x5305;&#x62EC;&#x6570;&#x636E;&#x5B9A;&#x4E49;&#x3001;&#x6570;&#x636E;&#x64CD;&#x7EB5;(Data Manipulation)&#xFF0C;&#x6570;&#x636E;&#x63A7;&#x5236;(Data Control)</strong></p>
<ul>
<li>&#x6570;&#x636E;&#x5B9A;&#x4E49;&#xFF1A;Create Table, Alter Table, Drop Table, Craete/Drop Index&#x7B49;</li>
<li>&#x6570;&#x636E;&#x64CD;&#x7EB5;&#xFF1A;Select, insert, update, delete</li>
<li>&#x6570;&#x636E;&#x63A7;&#x5236;&#xFF1A;grant, revoke</li>
</ul>
<p><strong>3. SQL&#x5E38;&#x7528;&#x547D;&#x4EE4;&#xFF1A;</strong></p>
<p>CREATE TABLE Student(</p>
<p>ID NUMBER PRIMARY KEY,</p>
<p>NAME VARCHAR2(50) NOT NULL);//&#x5EFA;&#x8868;</p>
<p>CREATE VIEW view_name AS</p>
<p>Select * FROM Table_name;//&#x5EFA;&#x89C6;&#x56FE;</p>
<p>Create UNIQUE INDEX index_name ON TableName(col_name);//&#x5EFA;&#x7D22;&#x5F15;</p>
<p>INSERT INTO tablename {column1,column2,&#x2026;} values(exp1,exp2,&#x2026;);//&#x63D2;&#x5165;</p>
<p>INSERT INTO Viewname {column1,column2,&#x2026;} values(exp1,exp2,&#x2026;);//&#x63D2;&#x5165;&#x89C6;&#x56FE;&#x5B9E;&#x9645;&#x5F71;&#x54CD;&#x8868;</p>
<p>UPDATE tablename SET name=&#x2019;zang 3&#x2019; condition;//&#x66F4;&#x65B0;&#x6570;&#x636E;</p>
<p>DELETE FROM Tablename WHERE condition;//&#x5220;&#x9664;</p>
<p>GRANT (Select,delete,&#x2026;) ON (&#x5BF9;&#x8C61;) TO USER_NAME [WITH GRANT OPTION];//&#x6388;&#x6743;</p>
<p>REVOKE (&#x6743;&#x9650;&#x8868;) ON(&#x5BF9;&#x8C61;) FROM USER_NAME [WITH REVOKE OPTION] //&#x64A4;&#x6743;</p>
<p>&#x5217;&#x51FA;&#x5DE5;&#x4F5C;&#x4EBA;&#x5458;&#x53CA;&#x5176;&#x9886;&#x5BFC;&#x7684;&#x540D;&#x5B57;&#xFF1A;</p>
<p>Select <a href="http://E.NAME" target="_blank" rel="external nofollow noopener noreferrer">E.NAME</a>, <a href="http://S.NAME" target="_blank" rel="external nofollow noopener noreferrer">S.NAME</a> FROM EMPLOYEE E S</p>
<p>WHERE <a href="http://E.SUPERName=S.Name" target="_blank" rel="external nofollow noopener noreferrer">E.SUPERName=S.Name</a></p>
<p><strong>4. &#x89C6;&#x56FE;</strong></p>
<p>&#x89C6;&#x56FE;&#xFF08;View&#xFF09;&#x662F;&#x4ECE;&#x4E00;&#x4E2A;&#x6216;&#x591A;&#x4E2A;&#x8868;&#xFF08;&#x6216;&#x89C6;&#x56FE;&#xFF09;&#x5BFC;&#x51FA;&#x7684;&#x8868;&#x3002;&#x89C6;&#x56FE;&#x4E0E;&#x8868;&#xFF08;&#x6709;&#x65F6;&#x4E3A;&#x4E0E;&#x89C6;&#x56FE;&#x533A;&#x522B;&#xFF0C;&#x4E5F;&#x79F0;&#x8868;&#x4E3A;&#x57FA;&#x672C;&#x8868;&#x2014;&#x2014;Base Table&#xFF09;&#x4E0D;&#x540C;&#xFF0C;&#x89C6;&#x56FE;&#x662F;&#x4E00;&#x4E2A;&#x865A;&#x8868;&#xFF0C;&#x5373;&#x89C6;&#x56FE;&#x6240;&#x5BF9;&#x5E94;&#x7684;&#x6570;&#x636E;&#x4E0D;&#x8FDB;&#x884C;&#x5B9E;&#x9645;&#x5B58;&#x50A8;&#xFF0C;&#x6570;&#x636E;&#x5E93;&#x4E2D;&#x53EA;&#x5B58;&#x50A8;&#x89C6;&#x56FE;&#x7684;&#x5B9A;&#x4E49;&#xFF0C;&#x5728;&#x5BF9;&#x89C6;&#x56FE;&#x7684;&#x6570;&#x636E;&#x8FDB;&#x884C;&#x64CD;&#x4F5C;&#x65F6;&#xFF0C;&#x7CFB;&#x7EDF;&#x6839;&#x636E;&#x89C6;&#x56FE;&#x7684;&#x5B9A;&#x4E49;&#x53BB;&#x64CD;&#x4F5C;&#x4E0E;&#x89C6;&#x56FE;&#x76F8;&#x5173;&#x8054;&#x7684;&#x57FA;&#x672C;&#x8868;&#x3002;</p>
<p>&#x6570;&#x636E;&#x5E93;&#x5B58;&#x50A8;&#x6570;&#x636E;&#x662F;&#x901A;&#x8FC7;&#x8868;&#x6765;&#x5B9E;&#x73B0;&#x7684;&#xFF0C;&#x5176;&#x6709;&#x7269;&#x7406;&#x5B58;&#x50A8;&#x7A7A;&#x95F4;&#xFF0C;&#x4E5F;&#x662F;&#x4F60;&#x6570;&#x636E;&#x771F;&#x6B63;&#x5B58;&#x50A8;&#x7684;&#x5730;&#x65B9;&#x3002;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x5BF9;&#x8868;&#x7684;&#x64CD;&#x4F5C;&#x6765;&#x5B9E;&#x73B0;&#x4F60;&#x5BF9;&#x6570;&#x636E;&#x7684;&#x64CD;&#x4F5C;&#x3002;</p>
<p>&#x89C6;&#x56FE;&#x5176;&#x5B9E;&#x662F;&#x7269;&#x7406;&#x4E0D;&#x5B58;&#x5728;&#x7684;&#xFF0C;&#x5176;&#x662F;&#x901A;&#x8FC7;&#x6570;&#x636E;&#x5E93;&#x4EE3;&#x7801;&#x6765;&#x5C06;&#x4E00;&#x4E9B;&#x8868;&#x4E2D;&#x7684;&#x6570;&#x636E;&#x8FDB;&#x884C;&#x4E00;&#x4E2A;&#x60F3;&#x8981;&#x7684;&#x903B;&#x8F91;&#x7ED3;&#x6784;&#x91CD;&#x65B0;&#x8FDB;&#x884C;&#x6574;&#x7406;&#x3002;&#x53EF;&#x80FD;&#x8FD9;&#x6837;&#x8BF4;&#x6709;&#x70B9;&#x66F4;&#x8FF7;&#x7CCA;&#x3002;</p>
<p>&#x89C6;&#x56FE;&#x6CA1;&#x6709;&#x65B0;&#x5EFA;&#x8868;&#xFF0C;&#x53EA;&#x662F;&#x628A;&#x539F;&#x6765;&#x8868;&#x4E2D;&#x7684;&#x6570;&#x636E;&#x6210;&#x5458;&#x901A;&#x8FC7;&#x6570;&#x636E;&#x5E93;&#x8BED;&#x8A00;&#x6309;&#x7167;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x7684;&#x903B;&#x8F91;&#x7ED3;&#x6784;&#x91CD;&#x65B0;&#x7EC4;&#x7EC7;&#xFF0C;&#x800C;&#x8FDB;&#x884C;&#x64CD;&#x4F5C;&#x7684;&#x65F6;&#x5019;&#x8DDF;&#x4E00;&#x4E2A;&#x8868;&#x662F;&#x4E00;&#x6837;&#x7684;&#x3002;</p>
<p>&#x5177;&#x4F53;&#x8BF7;&#x770B;&#xFF1A;<a href="http://www.w3school.com.cn/sql/sql_view.asp" target="_blank" rel="external nofollow noopener noreferrer">http://www.w3school.com.cn/sql/sql_view.asp</a></p>
<p><strong>5. &#x5B8C;&#x6574;&#x6027;&#x7EA6;&#x675F;&#xFF1A;&#x5B9E;&#x4F53;&#x5B8C;&#x6574;&#x6027;&#x3001;&#x53C2;&#x7167;&#x5B8C;&#x6574;&#x6027;&#x3001;&#x7528;&#x6237;&#x5B9A;&#x4E49;&#x5B8C;&#x6574;&#x6027;</strong></p>
<p>&#x5173;&#x7CFB;&#x6A21;&#x578B;&#x4E2D;&#x53EF;&#x4EE5;&#x6709;&#x4E09;&#x7C7B;&#x5B8C;&#x6574;&#x6027;&#x7EA6;&#x675F;&#xFF1A;&#x5B9E;&#x4F53;&#x5B8C;&#x6574;&#x6027;&#x3001;&#x53C2;&#x7167;&#x5B8C;&#x6574;&#x6027;&#x548C;&#x7528;&#x6237;&#x5B9A;&#x4E49;&#x7684;&#x5B8C;&#x6574;&#x6027;&#x3002;&#x5B9E;&#x4F53;&#x5B8C;&#x6574;&#x6027;&#x89C4;&#x5219;&#x5B9A;&#x4E49;&#x4E86;&#x5BF9;&#x5173;&#x7CFB;&#x4E2D;&#x4E3B;&#x5C5E;&#x6027;&#xFF08;&#x4E3B;&#x952E;&#xFF09;&#x53D6;&#x503C;&#x7684;&#x7EA6;&#x675F;&#xFF0C;&#x5373;&#x5BF9;&#x4E3B;&#x5C5E;&#x6027;&#x7684;&#x503C;&#x57DF;&#x7684;&#x7EA6;&#x675F;&#xFF1B;&#x800C;&#x53C2;&#x7167;&#x5B8C;&#x6574;&#x6027;&#x89C4;&#x5219;&#x5B9A;&#x4E49;&#x4E86;&#x53C2;&#x7167;&#x5173;&#x7CFB;&#x548C;&#x88AB;&#x53C2;&#x7167;&#x5173;&#x7CFB;&#x7684;&#x5916;&#x7801;&#x4E0E;&#x4E3B;&#x7801;&#x4E4B;&#x95F4;&#x7684;&#x53C2;&#x7167;&#x7EA6;&#x675F;&#xFF0C;&#x5373;&#x5BF9;&#x53C2;&#x7167;&#x5173;&#x7CFB;&#x7684;&#x5916;&#x7801;&#x5C5E;&#x6027;&#x503C;&#x57DF;&#x7684;&#x7EA6;&#x675F;&#xFF0C;&#x89C4;&#x5B9A;&#x5916;&#x7801;&#x5C5E;&#x6027;&#x7684;&#x503C;&#x57DF;&#x53EA;&#x80FD;&#x662F;&#x7A7A;&#x503C;&#x6216;&#x662F;&#x76F8;&#x5E94;&#x88AB;&#x53C2;&#x7167;&#x5173;&#x7CFB;&#x4E3B;&#x7801;&#x5C5E;&#x6027;&#x7684;&#x503C;&#x3002;&#x7528;&#x6237;&#x5B9A;&#x4E49;&#x5B8C;&#x6574;&#x6027;&#x5C31;&#x662F;&#x9488;&#x5BF9;&#x67D0;&#x4E00;&#x5177;&#x4F53;&#x7684;&#x5173;&#x7CFB;&#x6570;&#x636E;&#x5E93;&#x7684;&#x7EA6;&#x675F;&#x6761;&#x4EF6;&#xFF0C;&#x53CD;&#x6620;&#x67D0;&#x4E00;&#x5177;&#x4F53;&#x5E94;&#x7528;&#x6240;&#x6D89;&#x53CA;&#x7684;&#x6570;&#x636E;&#x5FC5;&#x987B;&#x6EE1;&#x8DB3;&#x7684;&#x8BED;&#x4E49;&#x8981;&#x6C42;&#xFF0C;&#x7531;&#x5E94;&#x7528;&#x7684;&#x73AF;&#x5883;&#x51B3;&#x5B9A;&#x3002;&#x4F8B;&#x5982;&#xFF0C;&#x94F6;&#x884C;&#x7684;&#x7528;&#x6237;&#x5E10;&#x6237;&#x89C4;&#x5B9A;&#x5FC5;&#x987B;&#x5927;&#x4E8E;&#x7B49;&#x4E8E;100000&#xFF0C;&#x5C0F;&#x4E8E;999999&#x3002;&#x6240;&#x4EE5;&#xFF0C;&#x7528;&#x6237;&#x5B9A;&#x4E49;&#x7684;&#x5B8C;&#x6574;&#x6027;&#x901A;&#x5E38;&#x662F;&#x5B9A;&#x4E49;&#x5BF9;&#x5173;&#x7CFB;&#x4E2D;&#x9664;&#x4E3B;&#x952E;&#x4E0E;&#x5916;&#x952E;&#x5C5E;&#x6027;&#x4E4B;&#x5916;&#x7684;&#x5176;&#x4ED6;&#x5C5E;&#x6027;&#x53D6;&#x503C;&#x7684;&#x7EA6;&#x675F;&#xFF0C;&#x5373;&#x5BF9;&#x5176;&#x4ED6;&#x5C5E;&#x6027;&#x7684;&#x503C;&#x57DF;&#x7684;&#x7EA6;&#x675F;&#x3002;</p>
<p>&#x5B9E;&#x4F53;&#x5B8C;&#x6574;&#x6027;&#x7EA6;&#x675F;&#x89C4;&#x5219;&#x662F;&#x6307;&#xFF1A;&#x82E5;&#x5C5E;&#x6027;&#xFF08;&#x6307;&#x4E00;&#x4E2A;&#x6216;&#x4E00;&#x7EC4;&#x5C5E;&#x6027;&#xFF09;A &#x662F;&#x57FA;&#x672C;&#x5173;&#x7CFB; R &#x7684;&#x4E3B;&#x5C5E;&#x6027;&#xFF0C;&#x5219; A &#x4E0D;&#x80FD;&#x53D6;&#x7A7A;&#x503C;&#x3002;&#x6240;&#x8C13;&#x7A7A;&#x503C;&#x5C31;&#x662F;&#x201C;&#x4E0D;&#x77E5;&#x9053;&#x201D;&#x6216;&#x201C;&#x4E0D;&#x5B58;&#x5728;&#x201D;&#x7684;&#x503C;&#x3002;</p>
<p>&#x5B9E;&#x4F53;&#x5B8C;&#x6574;&#x6027;&#x89C4;&#x5219;&#x8BF4;&#x660E;&#x5982;&#x4E0B;&#xFF1A;</p>
<ul>
<li>&#xFF08;1&#xFF09;&#x5B9E;&#x4F53;&#x5B8C;&#x6574;&#x6027;&#x89C4;&#x5219;&#x662F;&#x9488;&#x5BF9;&#x57FA;&#x672C;&#x5173;&#x7CFB;&#x800C;&#x8A00;&#x7684;&#x3002;&#x4E00;&#x4E2A;&#x57FA;&#x672C;&#x8868;&#x901A;&#x5E38;&#x5BF9;&#x5E94;&#x73B0;&#x5B9E;&#x4E16;&#x754C;&#x7684;&#x4E00;&#x4E2A;&#x5B9E;&#x4F53;&#x96C6;&#x3002;</li>
<li>&#xFF08;2&#xFF09;&#x73B0;&#x5B9E;&#x4E16;&#x754C;&#x4E2D;&#x7684;&#x5B9E;&#x4F53;&#x662F;&#x53EF;&#x533A;&#x5206;&#x7684;&#xFF0C;&#x5373;&#x5B83;&#x4EEC;&#x5177;&#x6709;&#x67D0;&#x79CD;&#x552F;&#x4E00;&#x7684;&#x6807;&#x8BC6;&#x3002;</li>
<li>&#xFF08;3&#xFF09;&#x76F8;&#x5E94;&#x5730;&#xFF0C;&#x5173;&#x7CFB;&#x6A21;&#x578B;&#x4E2D;&#x4EE5;&#x4E3B;&#x7801;&#x4F5C;&#x4E3A;&#x552F;&#x4E00;&#x6027;&#x6807;&#x8BC6;&#x3002;</li>
<li>&#xFF08;4&#xFF09;&#x4E3B;&#x7801;&#x4E2D;&#x7684;&#x5C5E;&#x6027;&#x5373;&#x4E3B;&#x5C5E;&#x6027;&#x4E0D;&#x80FD;&#x53D6;&#x7A7A;&#x503C;&#x3002;&#x5982;&#x679C;&#x4E3B;&#x5C5E;&#x6027;&#x53D6;&#x7A7A;&#x503C;&#xFF0C;&#x5C31;&#x8BF4;&#x660E;&#x5B58;&#x5728;&#x67D0;&#x4E2A;&#x4E0D;&#x53EF;&#x6807;&#x8BC6;&#x7684;&#x5B9E;&#x4F53;&#xFF0C;&#x5373;&#x5B58;&#x5728;&#x4E0D;&#x53EF;&#x533A;&#x5206;&#x7684;&#x5B9E;&#x4F53;&#xFF0C;&#x8FD9;&#x4E0E;&#xFF08;2&#xFF09;&#x70B9;&#x76F8;&#x77DB;&#x76FE;&#xFF0C;&#x56E0;&#x6B64;&#x8FD9;&#x4E2A;&#x89C4;&#x5219;&#x79F0;&#x4E3A;&#x5B9E;&#x4F53;&#x5B8C;&#x6574;&#x6027;&#x3002;</li>
</ul>
<p>&#x7528;&#x6237;&#x81EA;&#x5B9A;&#x4E49;&#x5B8C;&#x6574;&#x6027;&#x7EA6;&#x675F;&#xFF1A;</p>
<p>&#x4E0D;&#x540C;&#x7684;&#x5173;&#x7CFB;&#x6570;&#x636E;&#x5E93;&#x7CFB;&#x7EDF;&#x6839;&#x636E;&#x5176;&#x5E94;&#x7528;&#x73AF;&#x5883;&#x7684;&#x4E0D;&#x540C;&#xFF0C;&#x5F80;&#x5F80;&#x8FD8;&#x9700;&#x8981;&#x4E00;&#x4E9B;&#x7279;&#x6B8A;&#x7684;&#x7EA6;&#x675F;&#x6761;&#x4EF6;&#x3002;&#x7528;&#x6237;&#x81EA;&#x5B9A;&#x4E49;&#x7684;&#x5B8C;&#x6574;&#x6027;&#x5C31;&#x662F;&#x9488;&#x5BF9;&#x67D0;&#x4E00;&#x5177;&#x4F53;&#x5173;&#x7CFB;&#x6570;&#x636E;&#x5E93;&#x7684;&#x7EA6;&#x675F;&#x6761;&#x4EF6;&#x3002;&#x5B83;&#x53CD;&#x6620;&#x67D0;&#x4E00;&#x5177;&#x4F53;&#x5E94;&#x7528;&#x6240;&#x6D89;&#x53CA;&#x7684;&#x6570;&#x636E;&#x5FC5;&#x987B;&#x6EE1;&#x8DB3;&#x7684;&#x8BED;&#x4E49;&#x8981;&#x6C42;&#x3002;</p>
<p><strong>6. &#x7B2C;&#x4E09;&#x8303;&#x5F0F;</strong></p>
<ul>
<li>1NF:&#x6BCF;&#x4E2A;&#x5C5E;&#x6027;&#x662F;&#x4E0D;&#x53EF;&#x5206;&#x7684;&#x3002;&#x5F3A;&#x8C03;&#x7684;&#x662F;&#x5217;&#x7684;&#x539F;&#x5B50;&#x6027;&#xFF0C;&#x5373;&#x5217;&#x4E0D;&#x80FD;&#x591F;&#x518D;&#x5206;&#x6210;&#x5176;&#x4ED6;&#x51E0;&#x5217;&#x3002;</li>
<li>2NF:&#x82E5;&#x5173;&#x7CFB;R&#x662F;&#xFF11;NF,&#x4E14;&#x6BCF;&#x4E2A;&#x975E;&#x4E3B;&#x5C5E;&#x6027;&#x90FD;&#x5B8C;&#x5168;&#x51FD;&#x6570;&#x4F9D;&#x8D56;&#x4E8E;R&#x7684;&#x952E;&#x3002;&#x4F8B;SLC(SID#, CourceID#, SNAME,Grade),&#x5219;&#x4E0D;&#x662F;2NF; &#x9996;&#x5148;&#x662F; 1NF&#xFF0C;&#x53E6;&#x5916;&#x5305;&#x542B;&#x4E24;&#x90E8;&#x5206;&#x5185;&#x5BB9;&#xFF0C;&#x4E00;&#x662F;&#x8868;&#x5FC5;&#x987B;&#x6709;&#x4E00;&#x4E2A;&#x4E3B;&#x952E;&#xFF1B;&#x4E8C;&#x662F;&#x6CA1;&#x6709;&#x5305;&#x542B;&#x5728;&#x4E3B;&#x952E;&#x4E2D;&#x7684;&#x5217;&#x5FC5;&#x987B;&#x5B8C;&#x5168;&#x4F9D;&#x8D56;&#x4E8E;&#x4E3B;&#x952E;&#xFF0C;&#x800C;&#x4E0D;&#x80FD;&#x53EA;&#x4F9D;&#x8D56;&#x4E8E;&#x4E3B;&#x952E;&#x7684;&#x4E00;&#x90E8;&#x5206;&#x3002;</li>
<li>3NF:&#x82E5;R&#x662F;2NF&#xFF0C;&#x4E14;&#x5B83;&#x7684;&#x4EFB;&#x4F55;&#x975E;&#x952E;&#x5C5E;&#x6027;&#x90FD;&#x4E0D;&#x4F20;&#x9012;&#x4F9D;&#x8D56;&#x4E8E;&#x4EFB;&#x4F55;&#x5019;&#x9009;&#x952E;&#x3002;&#x9996;&#x5148;&#x662F; 2NF&#xFF0C;&#x53E6;&#x5916;&#x975E;&#x4E3B;&#x952E;&#x5217;&#x5FC5;&#x987B;&#x76F4;&#x63A5;&#x4F9D;&#x8D56;&#x4E8E;&#x4E3B;&#x952E;&#xFF0C;&#x4E0D;&#x80FD;&#x5B58;&#x5728;&#x4F20;&#x9012;&#x4F9D;&#x8D56;&#x3002;&#x5373;&#x4E0D;&#x80FD;&#x5B58;&#x5728;&#xFF1A;&#x975E;&#x4E3B;&#x952E;&#x5217; A &#x4F9D;&#x8D56;&#x4E8E;&#x975E;&#x4E3B;&#x952E;&#x5217; B&#xFF0C;&#x975E;&#x4E3B;&#x952E;&#x5217; B &#x4F9D;&#x8D56;&#x4E8E;&#x4E3B;&#x952E;&#x7684;&#x60C5;&#x51B5;&#x3002;</li>
</ul>
<p><strong>7. ER(&#x5B9E;&#x4F53;/&#x8054;&#x7CFB;)&#x6A21;&#x578B;</strong></p>
<ul>
<li>&#x5B9A;&#x4E49;&#xFF1A;ER&#x6A21;&#x578B;&#x53C8;&#x79F0;&#x5B9E;&#x4F53;&#x8054;&#x7CFB;&#x6A21;&#x578B;&#xFF08;Entity-Relationship&#xFF09;.&#x662F;&#x8BBE;&#x8BA1;&#x6570;&#x636E;&#x5E93;&#x7684;&#x4E00;&#x4E2A;&#x91CD;&#x8981;&#x5206;&#x6790;&#x6A21;&#x578B;&#x3002;</li>
<li>&#x5B9E;&#x4F53;&#xFF1A;&#x662F;&#x4E00;&#x4E2A;&#x6570;&#x636E;&#x96C6;&#x5BF9;&#x8C61;&#xFF0C;&#x6216;&#x6570;&#x636E;&#x96C6;&#xFF08;&#x4E0A;&#x7BC7;&#x535A;&#x5BA2;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x5BFC;&#x8BBA;&#x91CC;&#x6709;&#x4ECB;&#x7ECD;&#xFF09;&#x3002;&#x5E94;&#x7528;&#x4E2D;&#x53EF;&#x4EE5;&#x533A;&#x522B;&#x7684;&#x5BA2;&#x89C2;&#x5B58;&#x5728;&#x7684;&#x4E8B;&#x7269;&#x3002;&#x5B9E;&#x4F53;&#x53EF;&#x4EE5;&#x662F;&#x4E00;&#x4E2A;&#x4EBA;&#x3001;&#x6587;&#x4EF6;&#x3001;&#x8BFE;&#x7A0B;&#xFF0C;&#x5B83;&#x662F;&#x5177;&#x6709;&#x81EA;&#x5DF1;&#x5C5E;&#x6027;&#x3001;&#x4E00;&#x7EC4;&#x6709;&#x610F;&#x4E49;&#x7684;&#x6570;&#x636E;&#x7EC4;&#x6210;&#x7684;&#x4E00;&#x4E2A;&#x96C6;&#x5408;&#x4F53;&#x3002;</li>
<li>&#x8054;&#x7CFB;&#xFF1A;&#x5B9E;&#x4F53;&#x4E0D;&#x662F;&#x5B64;&#x7ACB;&#x7684;&#xFF0C;&#x5B9E;&#x4F53;&#x4E4B;&#x95F4;&#x662F;&#x6709;&#x8054;&#x7CFB;&#x7684;&#x3002;&#x4F8B;&#x5982;&#x5B66;&#x751F;&#x548C;&#x8BFE;&#x7A0B;&#x4E4B;&#x95F4;&#x5177;&#x6709;&#x4EA4;&#x53C9;&#x5C5E;&#x6027;&#xFF0C;&#x5373;&#x5206;&#x6570;&#xFF1B;A&#x5B9E;&#x4F53;&#x548C;B&#x5B9E;&#x4F53;&#x4E4B;&#x95F4;&#x4EA4;&#x4E92;&#x4EA7;&#x751F;&#x7684;&#x6570;&#x636E;&#x5C31;&#x662F;&#x5B83;&#x4EEC;&#x7684;&#x5C5E;&#x6027;&#x3002;</li>
</ul>
<p><strong>8. &#x7D22;&#x5F15;&#x4F5C;&#x7528;</strong></p>
<p>&#x4E3A;&#x4EC0;&#x4E48;&#x8981;&#x521B;&#x5EFA;&#x7D22;&#x5F15;&#x5462;&#xFF1F;&#x8FD9;&#x662F;&#x56E0;&#x4E3A;&#xFF0C;&#x521B;&#x5EFA;&#x7D22;&#x5F15;&#x53EF;&#x4EE5;&#x5927;&#x5927;&#x63D0;&#x9AD8;&#x7CFB;&#x7EDF;&#x7684;&#x6027;&#x80FD;&#x3002;</p>
<ul>
<li>&#x7B2C;&#x4E00;&#xFF0C;&#x901A;&#x8FC7;&#x521B;&#x5EFA;&#x552F;&#x4E00;&#x6027;&#x7D22;&#x5F15;&#xFF0C;&#x53EF;&#x4EE5;&#x4FDD;&#x8BC1;&#x6570;&#x636E;&#x5E93;&#x8868;&#x4E2D;&#x6BCF;&#x4E00;&#x884C;&#x6570;&#x636E;&#x7684;&#x552F;&#x4E00;&#x6027;&#x3002;</li>
<li>&#x7B2C;&#x4E8C;&#xFF0C;&#x53EF;&#x4EE5;&#x5927;&#x5927;&#x52A0;&#x5FEB; &#x6570;&#x636E;&#x7684;&#x68C0;&#x7D22;&#x901F;&#x5EA6;&#xFF0C;&#x8FD9;&#x4E5F;&#x662F;&#x521B;&#x5EFA;&#x7D22;&#x5F15;&#x7684;&#x6700;&#x4E3B;&#x8981;&#x7684;&#x539F;&#x56E0;&#x3002;</li>
<li>&#x7B2C;&#x4E09;&#xFF0C;&#x53EF;&#x4EE5;&#x52A0;&#x901F;&#x8868;&#x548C;&#x8868;&#x4E4B;&#x95F4;&#x7684;&#x8FDE;&#x63A5;&#xFF0C;&#x7279;&#x522B;&#x662F;&#x5728;&#x5B9E;&#x73B0;&#x6570;&#x636E;&#x7684;&#x53C2;&#x8003;&#x5B8C;&#x6574;&#x6027;&#x65B9;&#x9762;&#x7279;&#x522B;&#x6709;&#x610F;&#x4E49;&#x3002;</li>
<li>&#x7B2C;&#x56DB;&#xFF0C;&#x5728;&#x4F7F;&#x7528;&#x5206;&#x7EC4;&#x548C;&#x6392;&#x5E8F; &#x5B50;&#x53E5;&#x8FDB;&#x884C;&#x6570;&#x636E;&#x68C0;&#x7D22;&#x65F6;&#xFF0C;&#x540C;&#x6837;&#x53EF;&#x4EE5;&#x663E;&#x8457;&#x51CF;&#x5C11;&#x67E5;&#x8BE2;&#x4E2D;&#x5206;&#x7EC4;&#x548C;&#x6392;&#x5E8F;&#x7684;&#x65F6;&#x95F4;&#x3002;</li>
<li>&#x7B2C;&#x4E94;&#xFF0C;&#x901A;&#x8FC7;&#x4F7F;&#x7528;&#x7D22;&#x5F15;&#xFF0C;&#x53EF;&#x4EE5;&#x5728;&#x67E5;&#x8BE2;&#x7684;&#x8FC7;&#x7A0B;&#x4E2D;&#xFF0C;&#x4F7F;&#x7528;&#x4F18;&#x5316;&#x9690;&#x85CF;&#x5668;&#xFF0C;&#x63D0;&#x9AD8;&#x7CFB;&#x7EDF;&#x7684;&#x6027;&#x80FD;&#x3002;</li>
</ul>
<p>&#x4E5F;&#x8BB8;&#x4F1A;&#x6709;&#x4EBA;&#x8981;&#x95EE;&#xFF1A;&#x589E;&#x52A0;&#x7D22;&#x5F15;&#x6709;&#x5982;&#x6B64;&#x591A;&#x7684;&#x4F18;&#x70B9;&#xFF0C;&#x4E3A;&#x4EC0;&#x4E48;&#x4E0D;&#x5BF9;&#x8868;&#x4E2D;&#x7684;&#x6BCF;&#x4E00;&#x4E2A;&#x5217;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x7D22;&#x5F15;&#x5462;&#xFF1F;&#x8FD9;&#x79CD;&#x60F3;&#x6CD5;&#x56FA;&#x7136;&#x6709;&#x5176;&#x5408;&#x7406;&#x6027;&#xFF0C;&#x7136;&#x800C;&#x4E5F;&#x6709;&#x5176;&#x7247;&#x9762;&#x6027;&#x3002;&#x867D;&#x7136;&#xFF0C;&#x7D22;&#x5F15;&#x6709;&#x8BB8;&#x591A;&#x4F18;&#x70B9;&#xFF0C; &#x4F46;&#x662F;&#xFF0C;&#x4E3A;&#x8868;&#x4E2D;&#x7684;&#x6BCF;&#x4E00;&#x4E2A;&#x5217;&#x90FD;&#x589E;&#x52A0;&#x7D22;&#x5F15;&#xFF0C;&#x662F;&#x975E;&#x5E38;&#x4E0D;&#x660E;&#x667A;&#x7684;&#x3002;&#x8FD9;&#x662F;&#x56E0;&#x4E3A;&#xFF0C;&#x589E;&#x52A0;&#x7D22;&#x5F15;&#x4E5F;&#x6709;&#x8BB8;&#x591A;&#x4E0D;&#x5229;&#x7684;&#x4E00;&#x4E2A;&#x65B9;&#x9762;&#x3002;</p>
<ul>
<li>&#x7B2C;&#x4E00;&#xFF0C;&#x521B;&#x5EFA;&#x7D22;&#x5F15;&#x548C;&#x7EF4;&#x62A4;&#x7D22;&#x5F15;&#x8981;&#x8017;&#x8D39;&#x65F6;&#x95F4;&#xFF0C;&#x8FD9;&#x79CD;&#x65F6;&#x95F4;&#x968F;&#x7740;&#x6570;&#x636E; &#x91CF;&#x7684;&#x589E;&#x52A0;&#x800C;&#x589E;&#x52A0;&#x3002;</li>
<li>&#x7B2C;&#x4E8C;&#xFF0C;&#x7D22;&#x5F15;&#x9700;&#x8981;&#x5360;&#x7269;&#x7406;&#x7A7A;&#x95F4;&#xFF0C;&#x9664;&#x4E86;&#x6570;&#x636E;&#x8868;&#x5360;&#x6570;&#x636E;&#x7A7A;&#x95F4;&#x4E4B;&#x5916;&#xFF0C;&#x6BCF;&#x4E00;&#x4E2A;&#x7D22;&#x5F15;&#x8FD8;&#x8981;&#x5360;&#x4E00;&#x5B9A;&#x7684;&#x7269;&#x7406;&#x7A7A;&#x95F4;&#xFF0C;&#x5982;&#x679C;&#x8981;&#x5EFA;&#x7ACB;&#x805A;&#x7C07;&#x7D22;&#x5F15;&#xFF0C;&#x90A3;&#x4E48;&#x9700;&#x8981;&#x7684;&#x7A7A;&#x95F4;&#x5C31;&#x4F1A;&#x66F4;&#x5927;&#x3002;</li>
<li>&#x7B2C;&#x4E09;&#xFF0C;&#x5F53;&#x5BF9;&#x8868;&#x4E2D;&#x7684;&#x6570;&#x636E;&#x8FDB;&#x884C;&#x589E;&#x52A0;&#x3001;&#x5220;&#x9664;&#x548C;&#x4FEE;&#x6539;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x7D22;&#x5F15;&#x4E5F;&#x8981;&#x52A8;&#x6001;&#x7684;&#x7EF4;&#x62A4;&#xFF0C;&#x8FD9;&#x6837;&#x5C31;&#x964D;&#x4F4E;&#x4E86;&#x6570;&#x636E;&#x7684;&#x7EF4;&#x62A4;&#x901F;&#x5EA6;&#x3002;</li>
</ul>
<p>&#x5177;&#x4F53;&#x8BF7;&#x770B;&#xFF1A;</p>
<ul>
<li><a href="http://blog.csdn.net/pang040328/article/details/4164874" target="_blank" rel="external nofollow noopener noreferrer">http://blog.csdn.net/pang040328/article/details/4164874</a></li>
<li><a href="http://www.cnblogs.com/huangye-dream/archive/2013/03/13/2957049.html" target="_blank" rel="external nofollow noopener noreferrer">http://www.cnblogs.com/huangye-dream/archive/2013/03/13/2957049.html</a></li>
</ul>
<p><strong>9. &#x4E8B;&#x52A1;</strong></p>
<p>&#x4E8B;&#x52A1;&#x662F;&#x4E00;&#x7CFB;&#x5217;&#x7684;&#x6570;&#x636E;&#x5E93;&#x64CD;&#x4F5C;&#xFF0C;&#x662F;&#x6570;&#x636E;&#x5E93;&#x5E94;&#x7528;&#x7684;&#x57FA;&#x672C;&#x903B;&#x8F91;&#x5355;&#x4F4D;&#x3002; &#x4E8B;&#x52A1;&#xFF08;Transaction&#xFF09;&#x662F;&#x5E76;&#x53D1;&#x63A7;&#x5236;&#x7684;&#x57FA;&#x672C;&#x5355;&#x4F4D;&#x3002;&#x6240;&#x8C13;&#x7684;&#x4E8B;&#x52A1;&#xFF0C;&#x5B83;&#x662F;&#x4E00;&#x4E2A;&#x64CD;&#x4F5C;&#x5E8F;&#x5217;&#xFF0C;&#x8FD9;&#x4E9B;&#x64CD;&#x4F5C;&#x8981;&#x4E48;&#x90FD;&#x6267;&#x884C;&#xFF0C;&#x8981;&#x4E48;&#x90FD;&#x4E0D;&#x6267;&#x884C;&#xFF0C;&#x5B83;&#x662F;&#x4E00;&#x4E2A;&#x4E0D;&#x53EF;&#x5206;&#x5272;&#x7684;&#x5DE5;&#x4F5C;&#x5355;&#x4F4D;&#x3002;</p>
<ul>
<li>&#x2460;&#x539F;&#x5B50;&#x6027;(Atomicity)&#xFF1A;&#x4E8B;&#x52A1;&#x4E2D;&#x7684;&#x6240;&#x6709;&#x5143;&#x7D20;&#x4F5C;&#x4E3A;&#x4E00;&#x4E2A;&#x6574;&#x4F53;&#x63D0;&#x4EA4;&#x6216;&#x56DE;&#x6EDA;&#xFF0C;&#x4E8B;&#x52A1;&#x7684;&#x4E2A;&#x5143;&#x7D20;&#x662F;&#x4E0D;&#x53EF;&#x5206;&#x7684;&#xFF0C;&#x4E8B;&#x52A1;&#x662F;&#x4E00;&#x4E2A;&#x5B8C;&#x6574;&#x64CD;&#x4F5C;&#x3002;</li>
<li>&#x2461;&#x4E00;&#x81F4;&#x6027;(Consistemcy)&#xFF1A;&#x4E8B;&#x7269;&#x5B8C;&#x6210;&#x65F6;&#xFF0C;&#x6570;&#x636E;&#x5FC5;&#x987B;&#x662F;&#x4E00;&#x81F4;&#x7684;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#xFF0C;&#x548C;&#x4E8B;&#x7269;&#x5F00;&#x59CB;&#x4E4B;&#x524D;&#xFF0C;&#x6570;&#x636E;&#x5B58;&#x50A8;&#x4E2D;&#x7684;&#x6570;&#x636E;&#x5904;&#x4E8E;&#x4E00;&#x81F4;&#x72B6;&#x6001;&#x3002;&#x4FDD;&#x8BC1;&#x6570;&#x636E;&#x7684;&#x65E0;&#x635F;&#x3002;</li>
<li>&#x2462;&#x9694;&#x79BB;&#x6027;(Isolation)&#xFF1A;&#x5BF9;&#x6570;&#x636E;&#x8FDB;&#x884C;&#x4FEE;&#x6539;&#x7684;&#x591A;&#x4E2A;&#x4E8B;&#x52A1;&#x662F;&#x5F7C;&#x6B64;&#x9694;&#x79BB;&#x7684;&#x3002;&#x8FD9;&#x8868;&#x660E;&#x4E8B;&#x52A1;&#x5FC5;&#x987B;&#x662F;&#x72EC;&#x7ACB;&#x7684;&#xFF0C;&#x4E0D;&#x5E94;&#x8BE5;&#x4EE5;&#x4EFB;&#x4F55;&#x65B9;&#x5F0F;&#x4EE5;&#x6765;&#x4E8E;&#x6216;&#x5F71;&#x54CD;&#x5176;&#x4ED6;&#x4E8B;&#x52A1;&#x3002;</li>
<li>&#x2463;&#x6301;&#x4E45;&#x6027;(Durability)&#xFF1A;&#x4E8B;&#x52A1;&#x5B8C;&#x6210;&#x4E4B;&#x540E;&#xFF0C;&#x5B83;&#x5BF9;&#x4E8E;&#x7CFB;&#x7EDF;&#x7684;&#x5F71;&#x54CD;&#x662F;&#x6C38;&#x4E45;&#x7684;&#xFF0C;&#x8BE5;&#x4FEE;&#x6539;&#x5373;&#x4F7F;&#x51FA;&#x73B0;&#x7CFB;&#x7EDF;&#x6545;&#x969C;&#x4E5F;&#x5C06;&#x4E00;&#x76F4;&#x4FDD;&#x7559;&#xFF0C;&#x771F;&#x5B9E;&#x7684;&#x4FEE;&#x6539;&#x4E86;&#x6570;&#x636E;&#x5E93;</li>
</ul>
<p><strong>10. &#x9501;&#xFF1A;&#x5171;&#x4EAB;&#x9501;&#x3001;&#x4E92;&#x65A5;&#x9501;</strong></p>
<ul>
<li>&#x5171;&#x4EAB;&#x9501;&#xFF08;S&#x9501;&#xFF09;&#xFF1A;&#x5982;&#x679C;&#x4E8B;&#x52A1;T&#x5BF9;&#x6570;&#x636E;A&#x52A0;&#x4E0A;&#x5171;&#x4EAB;&#x9501;&#x540E;&#xFF0C;&#x5219;&#x5176;&#x4ED6;&#x4E8B;&#x52A1;&#x53EA;&#x80FD;&#x5BF9;A&#x518D;&#x52A0;&#x5171;&#x4EAB;&#x9501;&#xFF0C;&#x4E0D;&#x80FD;&#x52A0;&#x6392;&#x4ED6;&#x9501;&#xFF0C;&#x76F4;&#x5230;&#x5DF2;&#x91CA;&#x653E;&#x6240;&#x6709;&#x5171;&#x4EAB;&#x9501;&#x3002;&#x83B7;&#x51C6;&#x5171;&#x4EAB;&#x9501;&#x7684;&#x4E8B;&#x52A1;&#x53EA;&#x80FD;&#x8BFB;&#x6570;&#x636E;&#xFF0C;&#x4E0D;&#x80FD;&#x4FEE;&#x6539;&#x6570;&#x636E;&#x3002;</li>
<li>&#x6392;&#x4ED6;&#x9501;&#xFF08;X&#x9501;&#xFF09;&#xFF1A;&#x5982;&#x679C;&#x4E8B;&#x52A1;T&#x5BF9;&#x6570;&#x636E;A&#x52A0;&#x4E0A;&#x6392;&#x4ED6;&#x9501;&#x540E;&#xFF0C;&#x5219;&#x5176;&#x4ED6;&#x4E8B;&#x52A1;&#x4E0D;&#x80FD;&#x518D;&#x5BF9;A&#x52A0;&#x4EFB;&#x4EFB;&#x4F55;&#x7C7B;&#x578B;&#x7684;&#x9501;&#xFF0C;&#x76F4;&#x5230;&#x5728;&#x4E8B;&#x52A1;&#x7684;&#x672B;&#x5C3E;&#x5C06;&#x8D44;&#x6E90;&#x4E0A;&#x7684;&#x9501;&#x91CA;&#x653E;&#x4E3A;&#x6B62;&#x3002;&#x83B7;&#x51C6;&#x6392;&#x4ED6;&#x9501;&#x7684;&#x4E8B;&#x52A1;&#x65E2;&#x80FD;&#x8BFB;&#x6570;&#x636E;&#xFF0C;&#x53C8;&#x80FD;&#x4FEE;&#x6539;&#x6570;&#x636E;&#x3002;</li>
</ul>
<p>&#x4E24;&#x6BB5;&#x9501;&#x534F;&#x8BAE;&#xFF1A;&#x9636;&#x6BB5;&#xFF11;&#xFF1A;&#x52A0;&#x9501;&#x9636;&#x6BB5; &#x9636;&#x6BB5;&#xFF12;&#xFF1A;&#x89E3;&#x9501;&#x9636;&#x6BB5;</p>
<p>&#x5177;&#x4F53;&#x8BF7;&#x770B;&#xFF1A;<a href="http://www.cnblogs.com/ggjucheng/archive/2012/11/14/2770445.html" target="_blank" rel="external nofollow noopener noreferrer">http://www.cnblogs.com/ggjucheng/archive/2012/11/14/2770445.html</a></p>
<p><strong>11. &#x6B7B;&#x9501;&#x53CA;&#x5904;&#x7406;&#xFF1A;&#x4E8B;&#x52A1;&#x5FAA;&#x73AF;&#x7B49;&#x5F85;&#x6570;&#x636E;&#x9501;&#xFF0C;&#x5219;&#x4F1A;&#x6B7B;&#x9501;&#x3002;</strong></p>
<ul>
<li>&#x2460;&#x6B7B;&#x9501;&#x9884;&#x9632;&#x5229;&#x7528;&#x6B7B;&#x9501;&#x9884;&#x9632;&#x534F;&#x8BAE;&#xFF0C;&#x901A;&#x8FC7;&#x7834;&#x574F;&#x6B7B;&#x9501;&#x4EA7;&#x751F;&#x7684;&#x5FC5;&#x8981;&#x6761;&#x4EF6;&#x6765;&#x907F;&#x514D;&#x7CFB;&#x7EDF;&#x8FDB;&#x5165;&#x6B7B;&#x9501;&#x72B6;&#x6001;&#xFF0C;&#x9632;&#x6B62;&#x6B7B;&#x9501;&#x53D1;&#x751F;&#x3002;</li>
<li>&#x2461;&#x6B7B;&#x9501;&#x68C0;&#x6D4B;&#x4E0E;&#x6062;&#x590D;&#x5219;&#x662F;&#x5141;&#x8BB8;&#x7CFB;&#x7EDF;&#x8FDB;&#x5165;&#x6B7B;&#x9501;&#x72B6;&#x6001;&#xFF0C;&#x5E76;&#x4E14;&#x5B9A;&#x671F;&#x68C0;&#x67E5;&#x7CFB;&#x7EDF;&#x662F;&#x5426;&#x53D1;&#x751F;&#x6B7B;&#x9501;&#x3002;&#x5F53;&#x53D1;&#x73B0;&#x7CFB;&#x7EDF;&#x53D1;&#x751F;&#x6B7B;&#x9501;&#x540E;&#xFF0C;&#x91C7;&#x53D6;&#x76F8;&#x5E94;&#x7684;&#x6062;&#x590D;&#x673A;&#x5236;&#x4F7F;&#x7CFB;&#x7EDF;&#x6446;&#x8131;&#x6B7B;&#x9501;&#x72B6;&#x6001;&#x3002;</li>
</ul>
<p><strong>12. &#x5B58;&#x50A8;&#x8FC7;&#x7A0B;&#xFF1A;&#x5B58;&#x50A8;&#x8FC7;&#x7A0B;&#x5C31;&#x662F;&#x7F16;&#x8BD1;&#x597D;&#x4E86;&#x7684;&#x4E00;&#x4E9B;sql&#x8BED;&#x53E5;&#x3002;</strong></p>
<p>&#x5B58;&#x50A8;&#x8FC7;&#x7A0B;&#xFF08;Stored Procedure&#xFF09;&#x662F;&#x5728;&#x5927;&#x578B;&#x6570;&#x636E;&#x5E93;&#x7CFB;&#x7EDF;&#x4E2D;&#xFF0C;&#x4E00;&#x7EC4;&#x4E3A;&#x4E86;&#x5B8C;&#x6210;&#x7279;&#x5B9A;&#x529F;&#x80FD;&#x7684;SQL &#x8BED;&#x53E5;&#x96C6;&#xFF0C;&#x5B58;&#x50A8;&#x5728;&#x6570;&#x636E;&#x5E93;&#x4E2D;&#xFF0C;&#x7ECF;&#x8FC7;&#x7B2C;&#x4E00;&#x6B21;&#x7F16;&#x8BD1;&#x540E;&#x518D;&#x6B21;&#x8C03;&#x7528;&#x4E0D;&#x9700;&#x8981;&#x518D;&#x6B21;&#x7F16;&#x8BD1;&#xFF0C;&#x7528;&#x6237;&#x901A;&#x8FC7;&#x6307;&#x5B9A;&#x5B58;&#x50A8;&#x8FC7;&#x7A0B;&#x7684;&#x540D;&#x5B57;&#x5E76;&#x7ED9;&#x51FA;&#x53C2;&#x6570;&#xFF08;&#x5982;&#x679C;&#x8BE5;&#x5B58;&#x50A8;&#x8FC7;&#x7A0B;&#x5E26;&#x6709;&#x53C2;&#x6570;&#xFF09;&#x6765;&#x6267;&#x884C;&#x5B83;&#x3002;&#x5B58;&#x50A8;&#x8FC7;&#x7A0B;&#x662F;&#x6570;&#x636E;&#x5E93;&#x4E2D;&#x7684;&#x4E00;&#x4E2A;&#x91CD;&#x8981;&#x5BF9;&#x8C61;&#x3002;</p>
<p>&#x5B58;&#x50A8;&#x8FC7;&#x7A0B;&#x4E0E;&#x51FD;&#x6570;&#x7684;&#x533A;&#x522B;&#xFF1A;</p>
<ul>
<li>&#x4E00;&#x822C;&#x6765;&#x8BF4;&#xFF0C;&#x5B58;&#x50A8;&#x8FC7;&#x7A0B;&#x5B9E;&#x73B0;&#x7684;&#x529F;&#x80FD;&#x8981;&#x590D;&#x6742;&#x4E00;&#x70B9;&#xFF0C;&#x800C;&#x51FD;&#x6570;&#x7684;&#x5B9E;&#x73B0;&#x7684;&#x529F;&#x80FD;&#x9488;&#x5BF9;&#x6027;&#x6BD4;&#x8F83;&#x5F3A;&#x3002;</li>
<li>&#x5BF9;&#x4E8E;&#x5B58;&#x50A8;&#x8FC7;&#x7A0B;&#x6765;&#x8BF4;&#x53EF;&#x4EE5;&#x8FD4;&#x56DE;&#x53C2;&#x6570;(output)&#xFF0C;&#x800C;&#x51FD;&#x6570;&#x53EA;&#x80FD;&#x8FD4;&#x56DE;&#x503C;&#x6216;&#x8005;&#x8868;&#x5BF9;&#x8C61;&#x3002;</li>
<li>&#x5B58;&#x50A8;&#x8FC7;&#x7A0B;&#x4E00;&#x822C;&#x662F;&#x4F5C;&#x4E3A;&#x4E00;&#x4E2A;&#x72EC;&#x7ACB;&#x7684;&#x90E8;&#x5206;&#x6765;&#x6267;&#x884C;&#xFF0C;&#x800C;&#x51FD;&#x6570;&#x53EF;&#x4EE5;&#x4F5C;&#x4E3A;&#x67E5;&#x8BE2;&#x8BED;&#x53E5;&#x7684;&#x4E00;&#x4E2A;&#x90E8;&#x5206;&#x6765;&#x8C03;&#x7528;&#xFF0C;&#x7531;&#x4E8E;&#x51FD;&#x6570;&#x53EF;&#x4EE5;&#x8FD4;&#x56DE;&#x4E00;&#x4E2A;&#x8868;&#x5BF9;&#x8C61;&#xFF0C;&#x56E0;&#x6B64;&#x5B83;&#x53EF;&#x4EE5;&#x5728;&#x67E5;&#x8BE2;&#x8BED;&#x53E5;&#x4E2D;&#x4F4D;&#x4E8E;FROM&#x5173;&#x952E;&#x5B57;&#x7684;&#x540E;&#x9762;&#x3002;</li>
</ul>
<p>&#x5B58;&#x50A8;&#x8FC7;&#x7A0B;&#x7684;&#x4F18;&#x70B9;&#xFF1A;</p>
<ul>
<li>&#x5B58;&#x50A8;&#x8FC7;&#x7A0B;&#x7684;&#x80FD;&#x529B;&#x5927;&#x5927;&#x589E;&#x5F3A;&#x4E86;SQL&#x8BED;&#x8A00;&#x7684;&#x529F;&#x80FD;&#x548C;&#x7075;&#x6D3B;&#x6027;&#x3002;</li>
<li>&#x53EF;&#x4FDD;&#x8BC1;&#x6570;&#x636E;&#x7684;&#x5B89;&#x5168;&#x6027;&#x548C;&#x5B8C;&#x6574;&#x6027;&#x3002;</li>
<li>&#x901A;&#x8FC7;&#x5B58;&#x50A8;&#x8FC7;&#x7A0B;&#x53EF;&#x4EE5;&#x4F7F;&#x6CA1;&#x6709;&#x6743;&#x9650;&#x7684;&#x7528;&#x6237;&#x5728;&#x63A7;&#x5236;&#x4E4B;&#x4E0B;&#x95F4;&#x63A5;&#x5730;&#x5B58;&#x53D6;&#x6570;&#x636E;&#x5E93;&#xFF0C;&#x4ECE;&#x800C;&#x4FDD;&#x8BC1;&#x6570;&#x636E;&#x7684;&#x5B89;&#x5168;&#x3002;</li>
<li>&#x901A;&#x8FC7;&#x5B58;&#x50A8;&#x8FC7;&#x7A0B;&#x53EF;&#x4EE5;&#x4F7F;&#x76F8;&#x5173;&#x7684;&#x52A8;&#x4F5C;&#x5728;&#x4E00;&#x8D77;&#x53D1;&#x751F;&#xFF0C;&#x4ECE;&#x800C;&#x53EF;&#x4EE5;&#x7EF4;&#x62A4;&#x6570;&#x636E;&#x5E93;&#x7684;&#x5B8C;&#x6574;&#x6027;&#x3002;</li>
<li>&#x5728;&#x8FD0;&#x884C;&#x5B58;&#x50A8;&#x8FC7;&#x7A0B;&#x524D;&#xFF0C;&#x6570;&#x636E;&#x5E93;&#x5DF2;&#x5BF9;&#x5176;&#x8FDB;&#x884C;&#x4E86;&#x8BED;&#x6CD5;&#x548C;&#x53E5;&#x6CD5;&#x5206;&#x6790;&#xFF0C;&#x5E76;&#x7ED9;&#x51FA;&#x4E86;&#x4F18;&#x5316;&#x6267;&#x884C;&#x65B9;&#x6848;&#x3002;&#x8FD9;&#x79CD;&#x5DF2;&#x7ECF;&#x7F16;&#x8BD1;&#x597D;&#x7684;&#x8FC7;&#x7A0B;&#x53EF;&#x6781;&#x5927;&#x5730;&#x6539;&#x5584;SQL&#x8BED;&#x53E5;&#x7684;&#x6027;&#x80FD;&#x3002;&#x5373;&#x5B58;&#x50A8;&#x8FC7;&#x7A0B;&#x5728;&#x88AB;&#x7F16;&#x8BD1;&#x540E;&#x4F1A;&#x88AB;&#x76F4;&#x63A5;&#x4FDD;&#x5B58;&#x5728;&#x6570;&#x636E;&#x5E93;&#x4E2D;&#xFF0C;&#x6210;&#x4E3A;&#x6570;&#x636E;&#x5E93;&#x7684;&#x4E00;&#x90E8;&#x5206;&#xFF0C;&#x4EE5;&#x540E;&#x5C31;&#x53EF;&#x4EE5;&#x53CD;&#x590D;&#x8C03;&#x7528;&#xFF0C;&#x8FD0;&#x884C;&#x901F;&#x5EA6;&#x5FEB;&#xFF0C;&#x6548;&#x7387;&#x9AD8;</li>
<li>&#x53EF;&#x4EE5;&#x964D;&#x4F4E;&#x7F51;&#x7EDC;&#x7684;&#x901A;&#x4FE1;&#x91CF;&#x3002;&#x5B58;&#x50A8;&#x8FC7;&#x7A0B;&#x4E3B;&#x8981;&#x662F;&#x5728;&#x670D;&#x52A1;&#x5668;&#x4E0A;&#x8FD0;&#x884C;&#xFF0C;&#x51CF;&#x5C11;&#x5BF9;&#x5BA2;&#x6237;&#x673A;&#x7684;&#x538B;&#x529B;&#x3002;</li>
<li>&#x4F7F;&#x4F53;&#x73B0;&#x4F01;&#x4E1A;&#x89C4;&#x5219;&#x7684;&#x8FD0;&#x7B97;&#x7A0B;&#x5E8F;&#x653E;&#x5165;&#x6570;&#x636E;&#x5E93;&#x670D;&#x52A1;&#x5668;&#x4E2D;&#xFF0C;&#x4EE5;&#x4FBF; &#x96C6;&#x4E2D;&#x63A7;&#x5236;&#x3002;</li>
<li>&#x5B58;&#x50A8;&#x8FC7;&#x7A0B;&#x53EF;&#x4EE5;&#x5206;&#x4E3A;&#x7CFB;&#x7EDF;&#x5B58;&#x50A8;&#x8FC7;&#x7A0B;&#x3001;&#x6269;&#x5C55;&#x5B58;&#x50A8;&#x8FC7;&#x7A0B;&#x548C;&#x7528;&#x6237;&#x81EA;&#x5B9A;&#x4E49;&#x7684;&#x5B58;&#x50A8;&#x8FC7;&#x7A0B;</li>
<li>&#x53EF;&#x4FDD;&#x8BC1;&#x6570;&#x636E;&#x7684;&#x5B89;&#x5168;&#x6027;&#x548C;&#x5B8C;&#x6574;&#x6027;&#x3002;&#x901A;&#x8FC7;&#x5B58;&#x50A8;&#x8FC7;&#x7A0B;&#x53EF;&#x4EE5;&#x4F7F;&#x6CA1;&#x6709;&#x6743;&#x9650;&#x7684;&#x7528;&#x6237;&#x5728;&#x63A7;&#x5236;&#x4E4B;&#x4E0B;&#x95F4;&#x63A5;&#x5730;&#x5B58;&#x53D6;&#x6570;&#x636E;&#x5E93;&#xFF0C;&#x4ECE;&#x800C;&#x4FDD;&#x8BC1;&#x6570;&#x636E;&#x7684;&#x5B89;&#x5168;&#x3002;&#x901A;&#x8FC7;&#x5B58;&#x50A8;&#x8FC7;&#x7A0B;&#x53EF;&#x4EE5;&#x4F7F;&#x76F8;&#x5173;&#x7684;&#x52A8;&#x4F5C;&#x5728;&#x4E00;&#x8D77;&#x53D1;&#x751F;&#xFF0C;&#x4ECE;&#x800C;&#x53EF;&#x4EE5;&#x7EF4;&#x62A4;&#x6570;&#x636E;&#x5E93;&#x7684;&#x5B8C;&#x6574;&#x6027;&#x3002;</li>
<li>&#x5B58;&#x50A8;&#x8FC7;&#x7A0B;&#x53EF;&#x4EE5;&#x63A5;&#x53D7;&#x53C2;&#x6570;&#x3001;&#x8F93;&#x51FA;&#x53C2;&#x6570;&#x3001;&#x8FD4;&#x56DE;&#x5355;&#x4E2A;&#x6216;&#x591A;&#x4E2A;&#x7ED3;&#x679C;&#x96C6;&#x4EE5;&#x53CA;&#x8FD4;&#x56DE;&#x503C;&#x3002;&#x53EF;&#x4EE5;&#x5411;&#x7A0B;&#x5E8F;&#x8FD4;&#x56DE;&#x9519;&#x8BEF;&#x539F;&#x56E0;* &#x5B58;&#x50A8;&#x8FC7;&#x7A0B;&#x53EF;&#x4EE5;&#x5305;&#x542B;&#x7A0B;&#x5E8F;&#x6D41;&#x3001;&#x903B;&#x8F91;&#x4EE5;&#x53CA;&#x5BF9;&#x6570;&#x636E;&#x5E93;&#x7684;&#x67E5;&#x8BE2;&#x3002;&#x540C;&#x65F6;&#x53EF;&#x4EE5;&#x5B9E;&#x4F53;&#x5C01;&#x88C5;&#x548C;&#x9690;&#x85CF;&#x4E86;&#x6570;&#x636E;&#x903B;&#x8F91;&#x3002;</li>
</ul>
<p><strong>13. &#x89E6;&#x53D1;&#x5668;&#xFF1A; &#x5F53;&#x6EE1;&#x8DB3;&#x89E6;&#x53D1;&#x5668;&#x6761;&#x4EF6;&#xFF0C;&#x5219;&#x7CFB;&#x7EDF;&#x81EA;&#x52A8;&#x6267;&#x884C;&#x89E6;&#x53D1;&#x5668;&#x7684;&#x89E6;&#x53D1;&#x4F53;&#x3002;</strong></p>
<p>&#x89E6;&#x53D1;&#x65F6;&#x95F4;&#xFF1A;&#x6709; before,after&#x3002;&#x89E6;&#x53D1;&#x4E8B;&#x4EF6;&#xFF1A;&#x6709; insert&#xFF0C;update&#xFF0C;delete &#x4E09;&#x79CD;&#x3002;&#x89E6;&#x53D1;&#x7C7B;&#x578B;&#xFF1A;&#x6709;&#x884C;&#x89E6;&#x53D1;&#x3001;&#x8BED;&#x53E5;&#x89E6;&#x53D1;</p>
<p><strong>14. &#x5185;&#x8054;&#x63A5;&#xFF0C;&#x5916;&#x8054;&#x63A5;&#x533A;&#x522B;&#xFF1F;</strong></p>
<p>&#x5185;&#x8FDE;&#x63A5;&#x662F;&#x4FDD;&#x8BC1;&#x4E24;&#x4E2A;&#x8868;&#x4E2D;&#x6240;&#x6709;&#x7684;&#x884C;&#x90FD;&#x8981;&#x6EE1;&#x8DB3;&#x8FDE;&#x63A5;&#x6761;&#x4EF6;&#xFF0C;&#x800C;&#x5916;&#x8FDE;&#x63A5;&#x5219;&#x4E0D;&#x7136;&#x3002;</p>
<p>&#x5728;&#x5916;&#x8FDE;&#x63A5;&#x4E2D;&#xFF0C;&#x67D0;&#x4E9B;&#x4E0D;&#x6EE1;&#x6761;&#x4EF6;&#x7684;&#x5217;&#x4E5F;&#x4F1A;&#x663E;&#x793A;&#x51FA;&#x6765;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#xFF0C;&#x53EA;&#x9650;&#x5236;&#x5176;&#x4E2D;&#x4E00;&#x4E2A;&#x8868;&#x7684;&#x884C;&#xFF0C;&#x800C;&#x4E0D;&#x9650;&#x5236;&#x53E6;&#x4E00;&#x4E2A;&#x8868;&#x7684;&#x884C;&#x3002;&#x5206;&#x5DE6;&#x8FDE;&#x63A5;&#x3001;&#x53F3;&#x8FDE;&#x63A5;&#x3001;&#x5168;&#x8FDE;&#x63A5;&#x4E09;&#x79CD;</p>
<p><strong>15. &#x5B58;&#x50A8;&#x8FC7;&#x7A0B;&#x548C;&#x51FD;&#x6570;&#x7684;&#x533A;&#x522B;</strong></p>
<p>&#x5B58;&#x50A8;&#x8FC7;&#x7A0B;&#x662F;&#x7528;&#x6237;&#x5B9A;&#x4E49;&#x7684;&#x4E00;&#x7CFB;&#x5217;sql&#x8BED;&#x53E5;&#x7684;&#x96C6;&#x5408;&#xFF0C;&#x6D89;&#x53CA;&#x7279;&#x5B9A;&#x8868;&#x6216;&#x5176;&#x5B83;&#x5BF9;&#x8C61;&#x7684;&#x4EFB;&#x52A1;&#xFF0C;&#x7528;&#x6237;&#x53EF;&#x4EE5;&#x8C03;&#x7528;&#x5B58;&#x50A8;&#x8FC7;&#x7A0B;&#xFF0C;&#x800C;&#x51FD;&#x6570;&#x901A;&#x5E38;&#x662F;&#x6570;&#x636E;&#x5E93;&#x5DF2;&#x5B9A;&#x4E49;&#x7684;&#x65B9;&#x6CD5;&#xFF0C;&#x5B83;&#x63A5;&#x6536;&#x53C2;&#x6570;&#x5E76;&#x8FD4;&#x56DE;&#x67D0;&#x79CD;&#x7C7B;&#x578B;&#x7684;&#x503C;&#x5E76;&#x4E14;&#x4E0D;&#x6D89;&#x53CA;&#x7279;&#x5B9A;&#x7528;&#x6237;&#x8868;&#x3002;</p>
<p><strong>16. &#x4E8B;&#x52A1;&#x662F;&#x4EC0;&#x4E48;&#xFF1F;</strong></p>
<p>&#x4E8B;&#x52A1;&#x662F;&#x4F5C;&#x4E3A;&#x4E00;&#x4E2A;&#x903B;&#x8F91;&#x5355;&#x5143;&#x6267;&#x884C;&#x7684;&#x4E00;&#x7CFB;&#x5217;&#x64CD;&#x4F5C;&#xFF0C;&#x4E00;&#x4E2A;&#x903B;&#x8F91;&#x5DE5;&#x4F5C;&#x5355;&#x5143;&#x5FC5;&#x987B;&#x6709;&#x56DB;&#x4E2A;&#x5C5E;&#x6027;&#xFF0C;&#x79F0;&#x4E3A; ACID&#xFF08;&#x539F;&#x5B50;&#x6027;&#x3001;&#x4E00;&#x81F4;&#x6027;&#x3001;&#x9694;&#x79BB;&#x6027;&#x548C;&#x6301;&#x4E45;&#x6027;&#xFF09;&#x5C5E;&#x6027;&#xFF0C;&#x53EA;&#x6709;&#x8FD9;&#x6837;&#x624D;&#x80FD;&#x6210;&#x4E3A;&#x4E00;&#x4E2A;&#x4E8B;&#x52A1;&#xFF1A;<br>
&#x539F;&#x5B50;&#x6027;&#x4E8B;&#x52A1;&#x5FC5;&#x987B;&#x662F;&#x539F;&#x5B50;&#x5DE5;&#x4F5C;&#x5355;&#x5143;&#xFF1B;&#x5BF9;&#x4E8E;&#x5176;&#x6570;&#x636E;&#x4FEE;&#x6539;&#xFF0C;&#x8981;&#x4E48;&#x5168;&#x90FD;&#x6267;&#x884C;&#xFF0C;&#x8981;&#x4E48;&#x5168;&#x90FD;&#x4E0D;&#x6267;&#x884C;&#x3002;<br>
&#x4E00;&#x81F4;&#x6027;&#x4E8B;&#x52A1;&#x5728;&#x5B8C;&#x6210;&#x65F6;&#xFF0C;&#x5FC5;&#x987B;&#x4F7F;&#x6240;&#x6709;&#x7684;&#x6570;&#x636E;&#x90FD;&#x4FDD;&#x6301;&#x4E00;&#x81F4;&#x72B6;&#x6001;&#x3002;&#x5728;&#x76F8;&#x5173;&#x6570;&#x636E;&#x5E93;&#x4E2D;&#xFF0C;&#x6240;&#x6709;&#x89C4;&#x5219;&#x90FD;&#x5FC5;&#x987B;&#x5E94;&#x7528;&#x4E8E;&#x4E8B;&#x52A1;&#x7684;&#x4FEE;&#x6539;&#xFF0C;&#x4EE5;&#x4FDD;&#x6301;&#x6240;&#x6709;&#x6570;&#x636E;&#x7684;&#x5B8C;&#x6574;&#x6027;&#x3002;&#x4E8B;&#x52A1;&#x7ED3;&#x675F;&#x65F6;&#xFF0C;&#x6240;&#x6709;&#x7684;&#x5185;&#x90E8;&#x6570;&#x636E;&#x7ED3;&#x6784;&#xFF08;&#x5982; B &#x6811;&#x7D22;&#x5F15;&#x6216;&#x53CC;&#x5411;&#x94FE;&#x8868;&#xFF09;&#x90FD;&#x5FC5;&#x987B;&#x662F;&#x6B63;&#x786E;&#x7684;&#x3002;<br>
&#x9694;&#x79BB;&#x6027;&#x7531;&#x5E76;&#x53D1;&#x4E8B;&#x52A1;&#x6240;&#x4F5C;&#x7684;&#x4FEE;&#x6539;&#x5FC5;&#x987B;&#x4E0E;&#x4EFB;&#x4F55;&#x5176;&#x5B83;&#x5E76;&#x53D1;&#x4E8B;&#x52A1;&#x6240;&#x4F5C;&#x7684;&#x4FEE;&#x6539;&#x9694;&#x79BB;&#x3002;&#x4E8B;&#x52A1;&#x67E5;&#x770B;&#x6570;&#x636E;&#x65F6;&#x6570;&#x636E;&#x6240;&#x5904;&#x7684;&#x72B6;&#x6001;&#xFF0C;&#x8981;&#x4E48;&#x662F;&#x53E6;&#x4E00;&#x5E76;&#x53D1;&#x4E8B;&#x52A1;&#x4FEE;&#x6539;&#x5B83;&#x4E4B;&#x524D;&#x7684;&#x72B6;&#x6001;&#xFF0C;&#x8981;&#x4E48;&#x662F;&#x53E6;&#x4E00;&#x4E8B;&#x52A1;&#x4FEE;&#x6539;&#x5B83;&#x4E4B;&#x540E;&#x7684;&#x72B6;&#x6001;&#xFF0C;&#x4E8B;&#x52A1;&#x4E0D;&#x4F1A;&#x67E5;&#x770B;&#x4E2D;&#x95F4;&#x72B6;&#x6001;&#x7684;&#x6570;&#x636E;&#x3002;&#x8FD9;&#x79F0;&#x4E3A;&#x53EF;&#x4E32;&#x884C;&#x6027;&#xFF0C;&#x56E0;&#x4E3A;&#x5B83;&#x80FD;&#x591F;&#x91CD;&#x65B0;&#x88C5;&#x8F7D;&#x8D77;&#x59CB;&#x6570;&#x636E;&#xFF0C;&#x5E76;&#x4E14;&#x91CD;&#x64AD;&#x4E00;&#x7CFB;&#x5217;&#x4E8B;&#x52A1;&#xFF0C;&#x4EE5;&#x4F7F;&#x6570;&#x636E;&#x7ED3;&#x675F;&#x65F6;&#x7684;&#x72B6;&#x6001;&#x4E0E;&#x539F;&#x59CB;&#x4E8B;&#x52A1;&#x6267;&#x884C;&#x7684;&#x72B6;&#x6001;&#x76F8;&#x540C;&#x3002;<br>
&#x6301;&#x4E45;&#x6027;&#x4E8B;&#x52A1;&#x5B8C;&#x6210;&#x4E4B;&#x540E;&#xFF0C;&#x5B83;&#x5BF9;&#x4E8E;&#x7CFB;&#x7EDF;&#x7684;&#x5F71;&#x54CD;&#x662F;&#x6C38;&#x4E45;&#x6027;&#x7684;&#x3002;&#x8BE5;&#x4FEE;&#x6539;&#x5373;&#x4F7F;&#x51FA;&#x73B0;&#x7CFB;&#x7EDF;&#x6545;&#x969C;&#x4E5F;&#x5C06;&#x4E00;&#x76F4;&#x4FDD;&#x6301;&#x3002;</p>
<p><strong>17. &#x6E38;&#x6807;&#x7684;&#x4F5C;&#x7528;&#xFF1F;&#x5982;&#x4F55;&#x77E5;&#x9053;&#x6E38;&#x6807;&#x5DF2;&#x7ECF;&#x5230;&#x4E86;&#x6700;&#x540E;&#xFF1F;</strong></p>
<p>&#x6E38;&#x6807;&#x7528;&#x4E8E;&#x5B9A;&#x4F4D;&#x7ED3;&#x679C;&#x96C6;&#x7684;&#x884C;&#xFF0C;&#x901A;&#x8FC7;&#x5224;&#x65AD;&#x5168;&#x5C40;&#x53D8;&#x91CF;@@FETCH_STATUS&#x53EF;&#x4EE5;&#x5224;&#x65AD;&#x662F;&#x5426;&#x5230;&#x4E86;&#x6700;&#x540E;&#xFF0C;&#x901A;&#x5E38;&#x6B64;&#x53D8;&#x91CF;&#x4E0D;&#x7B49;&#x4E8E;0&#x8868;&#x793A;&#x51FA;&#x9519;&#x6216;&#x5230;&#x4E86;&#x6700;&#x540E;&#x3002;</p>
<p><strong>18. &#x89E6;&#x53D1;&#x5668;&#x5206;&#x4E3A;&#x4E8B;&#x524D;&#x89E6;&#x53D1;&#x548C;&#x4E8B;&#x540E;&#x89E6;&#x53D1;&#xFF0C;&#x8FD9;&#x4E24;&#x79CD;&#x89E6;&#x53D1;&#x6709;&#x548C;&#x533A;&#x522B;&#x3002;&#x8BED;&#x53E5;&#x7EA7;&#x89E6;&#x53D1;&#x548C;&#x884C;&#x7EA7;&#x89E6;&#x53D1;&#x6709;&#x4F55;&#x533A;&#x522B;&#x3002;</strong></p>
<p>&#x4E8B;&#x524D;&#x89E6;&#x53D1;&#x5668;&#x8FD0;&#x884C;&#x4E8E;&#x89E6;&#x53D1;&#x4E8B;&#x4EF6;&#x53D1;&#x751F;&#x4E4B;&#x524D;&#xFF0C;&#x800C;&#x4E8B;&#x540E;&#x89E6;&#x53D1;&#x5668;&#x8FD0;&#x884C;&#x4E8E;&#x89E6;&#x53D1;&#x4E8B;&#x4EF6;&#x53D1;&#x751F;&#x4E4B;&#x540E;&#x3002;&#x901A;&#x5E38;&#x4E8B;&#x524D;&#x89E6;&#x53D1;&#x5668;&#x53EF;&#x4EE5;&#x83B7;&#x53D6;&#x4E8B;&#x4EF6;&#x4E4B;&#x524D;&#x548C;&#x65B0;&#x7684;&#x5B57;&#x6BB5;&#x503C;&#x3002;<br>
&#x8BED;&#x53E5;&#x7EA7;&#x89E6;&#x53D1;&#x5668;&#x53EF;&#x4EE5;&#x5728;&#x8BED;&#x53E5;&#x6267;&#x884C;&#x524D;&#x6216;&#x540E;&#x6267;&#x884C;&#xFF0C;&#x800C;&#x884C;&#x7EA7;&#x89E6;&#x53D1;&#x5728;&#x89E6;&#x53D1;&#x5668;&#x6240;&#x5F71;&#x54CD;&#x7684;&#x6BCF;&#x4E00;&#x884C;&#x89E6;&#x53D1;&#x4E00;&#x6B21;&#x3002;</p>
<h2 id="&#x6570;&#x636E;&#x5E93;mysql"><a class="header-anchor" href="#&#x6570;&#x636E;&#x5E93;mysql"></a>&#x6570;&#x636E;&#x5E93;MySql</h2>
<p><strong>1. MySql&#x7684;&#x5B58;&#x50A8;&#x5F15;&#x64CE;&#x7684;&#x4E0D;&#x540C;</strong></p>
<p>MySQL &#x4E2D;&#x7684;&#x6570;&#x636E;&#x7528;&#x5404;&#x79CD;&#x4E0D;&#x540C;&#x7684;&#x6280;&#x672F;&#x5B58;&#x50A8;&#x5728;&#x6587;&#x4EF6;(&#x6216;&#x8005;&#x5185;&#x5B58;)&#x4E2D;&#x3002;&#x8FD9;&#x4E9B;&#x6280;&#x672F;&#x4E2D;&#x7684;&#x6BCF;&#x4E00;&#x79CD;&#x6280;&#x672F;&#x90FD;&#x4F7F;&#x7528;&#x4E0D;&#x540C;&#x7684;&#x5B58;&#x50A8;&#x673A;&#x5236;&#x3001;&#x7D22;&#x5F15;&#x6280;&#x5DE7;&#x3001;&#x9501;&#x5B9A;&#x6C34;&#x5E73;&#x5E76;&#x4E14;&#x6700;&#x7EC8;&#x63D0;&#x4F9B;&#x5E7F;&#x6CDB;&#x7684;&#x4E0D;&#x540C;&#x7684;&#x529F;&#x80FD;&#x548C;&#x80FD;&#x529B;&#x3002;&#x901A;&#x8FC7;&#x9009;&#x62E9;&#x4E0D;&#x540C;&#x7684;&#x6280;&#x672F;&#xFF0C;&#x4F60;&#x80FD;&#x591F;&#x83B7;&#x5F97;&#x989D;&#x5916;&#x7684;&#x901F;&#x5EA6;&#x6216;&#x8005;&#x529F;&#x80FD;&#xFF0C;&#x4ECE;&#x800C;&#x6539;&#x5584;&#x4F60;&#x7684;&#x5E94;&#x7528;&#x7684;&#x6574;&#x4F53;&#x529F;&#x80FD;&#x3002;</p>
<ul>
<li>MyISAM&#xFF1A;&#x8FD9;&#x79CD;&#x5F15;&#x64CE;&#x662F;mysql&#x6700;&#x65E9;&#x63D0;&#x4F9B;&#x7684;&#x3002;&#x8FD9;&#x79CD;&#x5F15;&#x64CE;&#x53C8;&#x53EF;&#x4EE5;&#x5206;&#x4E3A;&#x9759;&#x6001;MyISAM&#x3001;&#x52A8;&#x6001;MyISAM &#x548C;&#x538B;&#x7F29;MyISAM&#x4E09;&#x79CD;&#xFF1A;
<ul>
<li>&#x9759;&#x6001;MyISAM&#xFF1A;&#x5982;&#x679C;&#x6570;&#x636E;&#x8868;&#x4E2D;&#x7684;&#x5404;&#x6570;&#x636E;&#x5217;&#x7684;&#x957F;&#x5EA6;&#x90FD;&#x662F;&#x9884;&#x5148;&#x56FA;&#x5B9A;&#x597D;&#x7684;&#xFF0C;&#x670D;&#x52A1;&#x5668;&#x5C06;&#x81EA;&#x52A8;&#x9009;&#x62E9;&#x8FD9;&#x79CD;&#x8868;&#x7C7B;&#x578B;&#x3002;&#x56E0;&#x4E3A;&#x6570;&#x636E;&#x8868;&#x4E2D;&#x6BCF;&#x4E00;&#x6761;&#x8BB0;&#x5F55;&#x6240;&#x5360;&#x7528;&#x7684;&#x7A7A;&#x95F4;&#x90FD;&#x662F;&#x4E00;&#x6837;&#x7684;&#xFF0C;&#x6240;&#x4EE5;&#x8FD9;&#x79CD;&#x8868;&#x5B58;&#x53D6;&#x548C;&#x66F4;&#x65B0;&#x7684;&#x6548;&#x7387;&#x975E;&#x5E38;&#x9AD8;&#x3002;&#x5F53;&#x6570;&#x636E;&#x53D7;&#x635F;&#x65F6;&#xFF0C;&#x6062;&#x590D;&#x5DE5;&#x4F5C;&#x4E5F;&#x6BD4;&#x8F83;&#x5BB9;&#x6613;&#x505A;&#x3002;</li>
<li>&#x52A8;&#x6001;MyISAM&#xFF1A;&#x5982;&#x679C;&#x6570;&#x636E;&#x8868;&#x4E2D;&#x51FA;&#x73B0;varchar&#x3001;xxxtext&#x6216;xxxBLOB&#x5B57;&#x6BB5;&#x65F6;&#xFF0C;&#x670D;&#x52A1;&#x5668;&#x5C06;&#x81EA;&#x52A8;&#x9009;&#x62E9;&#x8FD9;&#x79CD;&#x8868;&#x7C7B;&#x578B;&#x3002;&#x76F8;&#x5BF9;&#x4E8E;&#x9759;&#x6001;MyISAM&#xFF0C;&#x8FD9;&#x79CD;&#x8868;&#x5B58;&#x50A8;&#x7A7A;&#x95F4;&#x6BD4;&#x8F83;&#x5C0F;&#xFF0C;&#x4F46;&#x7531;&#x4E8E;&#x6BCF;&#x6761;&#x8BB0;&#x5F55;&#x7684;&#x957F;&#x5EA6;&#x4E0D;&#x4E00;&#xFF0C;&#x6240;&#x4EE5;&#x591A;&#x6B21;&#x4FEE;&#x6539;&#x6570;&#x636E;&#x540E;&#xFF0C;&#x6570;&#x636E;&#x8868;&#x4E2D;&#x7684;&#x6570;&#x636E;&#x5C31;&#x53EF;&#x80FD;&#x79BB;&#x6563;&#x7684;&#x5B58;&#x50A8;&#x5728;&#x5185;&#x5B58;&#x4E2D;&#xFF0C;&#x8FDB;&#x800C;&#x5BFC;&#x81F4;&#x6267;&#x884C;&#x6548;&#x7387;&#x4E0B;&#x964D;&#x3002;&#x540C;&#x65F6;&#xFF0C;&#x5185;&#x5B58;&#x4E2D;&#x4E5F;&#x53EF;&#x80FD;&#x4F1A;&#x51FA;&#x73B0;&#x5F88;&#x591A;&#x788E;&#x7247;&#x3002;&#x56E0;&#x6B64;&#xFF0C;&#x8FD9;&#x79CD;&#x7C7B;&#x578B;&#x7684;&#x8868;&#x8981;&#x7ECF;&#x5E38;&#x7528;optimize table &#x547D;&#x4EE4;&#x6216;&#x4F18;&#x5316;&#x5DE5;&#x5177;&#x6765;&#x8FDB;&#x884C;&#x788E;&#x7247;&#x6574;&#x7406;&#x3002;</li>
<li>&#x538B;&#x7F29;MyISAM&#xFF1A;&#x4EE5;&#x4E0A;&#x8BF4;&#x5230;&#x7684;&#x4E24;&#x79CD;&#x7C7B;&#x578B;&#x7684;&#x8868;&#x90FD;&#x53EF;&#x4EE5;&#x7528;myisamchk&#x5DE5;&#x5177;&#x538B;&#x7F29;&#x3002;&#x8FD9;&#x79CD;&#x7C7B;&#x578B;&#x7684;&#x8868;&#x8FDB;&#x4E00;&#x6B65;&#x51CF;&#x5C0F;&#x4E86;&#x5360;&#x7528;&#x7684;&#x5B58;&#x50A8;&#xFF0C;&#x4F46;&#x662F;&#x8FD9;&#x79CD;&#x8868;&#x538B;&#x7F29;&#x4E4B;&#x540E;&#x4E0D;&#x80FD;&#x518D;&#x88AB;&#x4FEE;&#x6539;&#x3002;&#x53E6;&#x5916;&#xFF0C;&#x56E0;&#x4E3A;&#x662F;&#x538B;&#x7F29;&#x6570;&#x636E;&#xFF0C;&#x6240;&#x4EE5;&#x8FD9;&#x79CD;&#x8868;&#x5728;&#x8BFB;&#x53D6;&#x7684;&#x65F6;&#x5019;&#x8981;&#x5148;&#x65F6;&#x884C;&#x89E3;&#x538B;&#x7F29;&#x3002;<br>
&#x4F46;&#x662F;&#xFF0C;&#x4E0D;&#x7BA1;&#x662F;&#x4F55;&#x79CD;MyISAM&#x8868;&#xFF0C;&#x76EE;&#x524D;&#x5B83;&#x90FD;&#x4E0D;&#x652F;&#x6301;&#x4E8B;&#x52A1;&#xFF0C;&#x884C;&#x7EA7;&#x9501;&#x548C;&#x5916;&#x952E;&#x7EA6;&#x675F;&#x7684;&#x529F;&#x80FD;&#x3002;</li>
</ul>
</li>
<li>MyISAM Merge&#x5F15;&#x64CE;&#xFF1A;&#x8FD9;&#x79CD;&#x7C7B;&#x578B;&#x662F;MyISAM&#x7C7B;&#x578B;&#x7684;&#x4E00;&#x79CD;&#x53D8;&#x79CD;&#x3002;&#x5408;&#x5E76;&#x8868;&#x662F;&#x5C06;&#x51E0;&#x4E2A;&#x76F8;&#x540C;&#x7684;MyISAM&#x8868;&#x5408;&#x5E76;&#x4E3A;&#x4E00;&#x4E2A;&#x865A;&#x8868;&#x3002;&#x5E38;&#x5E94;&#x7528;&#x4E8E;&#x65E5;&#x5FD7;&#x548C;&#x6570;&#x636E;&#x4ED3;&#x5E93;&#x3002;</li>
<li>InnoDB&#xFF1A;InnoDB&#x8868;&#x7C7B;&#x578B;&#x53EF;&#x4EE5;&#x770B;&#x4F5C;&#x662F;&#x5BF9;MyISAM&#x7684;&#x8FDB;&#x4E00;&#x6B65;&#x66F4;&#x65B0;&#x4EA7;&#x54C1;&#xFF0C;&#x5B83;&#x63D0;&#x4F9B;&#x4E86;&#x4E8B;&#x52A1;&#x3001;&#x884C;&#x7EA7;&#x9501;&#x673A;&#x5236;&#x548C;&#x5916;&#x952E;&#x7EA6;&#x675F;&#x7684;&#x529F;&#x80FD;&#x3002;</li>
<li>memory(heap)&#xFF1A;&#x8FD9;&#x79CD;&#x7C7B;&#x578B;&#x7684;&#x6570;&#x636E;&#x8868;&#x53EA;&#x5B58;&#x5728;&#x4E8E;&#x5185;&#x5B58;&#x4E2D;&#x3002;&#x5B83;&#x4F7F;&#x7528;&#x6563;&#x5217;&#x7D22;&#x5F15;&#xFF0C;&#x6240;&#x4EE5;&#x6570;&#x636E;&#x7684;&#x5B58;&#x53D6;&#x901F;&#x5EA6;&#x975E;&#x5E38;&#x5FEB;&#x3002;&#x56E0;&#x4E3A;&#x662F;&#x5B58;&#x5728;&#x4E8E;&#x5185;&#x5B58;&#x4E2D;&#xFF0C;&#x6240;&#x4EE5;&#x8FD9;&#x79CD;&#x7C7B;&#x578B;&#x5E38;&#x5E94;&#x7528;&#x4E8E;&#x4E34;&#x65F6;&#x8868;&#x4E2D;&#x3002;</li>
<li>archive&#xFF1A;&#x8FD9;&#x79CD;&#x7C7B;&#x578B;&#x53EA;&#x652F;&#x6301;select &#x548C; insert&#x8BED;&#x53E5;&#xFF0C;&#x800C;&#x4E14;&#x4E0D;&#x652F;&#x6301;&#x7D22;&#x5F15;&#x3002;&#x5E38;&#x5E94;&#x7528;&#x4E8E;&#x65E5;&#x5FD7;&#x8BB0;&#x5F55;&#x548C;&#x805A;&#x5408;&#x5206;&#x6790;&#x65B9;&#x9762;&#x3002;</li>
</ul>
<p>&#x5F53;&#x7136;MySql&#x652F;&#x6301;&#x7684;&#x8868;&#x7C7B;&#x578B;&#x4E0D;&#x6B62;&#x4E0A;&#x9762;&#x51E0;&#x79CD;&#x3002;</p>
<p>&#x5177;&#x4F53;&#x8BF7;&#x770B;&#xFF1A;</p>
<ul>
<li><a href="http://www.cnblogs.com/lina1006/archive/2011/04/29/2032894.html" target="_blank" rel="external nofollow noopener noreferrer">http://www.cnblogs.com/lina1006/archive/2011/04/29/2032894.html</a></li>
<li><a href="http://blog.csdn.net/zhangyuan19880606/article/details/51217952" target="_blank" rel="external nofollow noopener noreferrer">http://blog.csdn.net/zhangyuan19880606/article/details/51217952</a></li>
</ul>
<p><strong>2. &#x5355;&#x4E2A;&#x7D22;&#x5F15;&#x3001;&#x8054;&#x5408;&#x7D22;&#x5F15;&#x3001;&#x4E3B;&#x952E;&#x7D22;&#x5F15;</strong></p>
<p>&#x7D22;&#x5F15;&#x662F;&#x4E00;&#x79CD;&#x7279;&#x6B8A;&#x7684;&#x6587;&#x4EF6;(InnoDB&#x6570;&#x636E;&#x8868;&#x4E0A;&#x7684;&#x7D22;&#x5F15;&#x662F;&#x8868;&#x7A7A;&#x95F4;&#x7684;&#x4E00;&#x4E2A;&#x7EC4;&#x6210;&#x90E8;&#x5206;)&#xFF0C;&#x5B83;&#x4EEC;&#x5305;&#x542B;&#x7740;&#x5BF9;&#x6570;&#x636E;&#x8868;&#x91CC;&#x6240;&#x6709;&#x8BB0;&#x5F55;&#x7684;&#x5F15;&#x7528;&#x6307;&#x9488;&#x3002;&#x666E;&#x901A;&#x7D22;&#x5F15;(&#x7531;&#x5173;&#x952E;&#x5B57;KEY&#x6216;INDEX&#x5B9A;&#x4E49;&#x7684;&#x7D22;&#x5F15;)&#x7684;&#x552F;&#x4E00;&#x4EFB;&#x52A1;&#x662F;&#x52A0;&#x5FEB;&#x5BF9;&#x6570;&#x636E;&#x7684;&#x8BBF;&#x95EE;&#x901F;&#x5EA6;&#x3002;</p>
<p>Mysql&#x5E38;&#x89C1;&#x7D22;&#x5F15;&#x6709;&#xFF1A;&#x4E3B;&#x952E;&#x7D22;&#x5F15;&#x3001;&#x552F;&#x4E00;&#x7D22;&#x5F15;&#x3001;&#x666E;&#x901A;&#x7D22;&#x5F15;&#x3001;&#x5168;&#x6587;&#x7D22;&#x5F15;&#x3001;&#x7EC4;&#x5408;&#x7D22;&#x5F15;</p>
<ul>
<li>PRIMARY KEY&#xFF08;&#x4E3B;&#x952E;&#x7D22;&#x5F15;&#xFF09;  ALTER TABLE <code>table_name</code> ADD PRIMARY KEY ( <code>column</code> )</li>
<li>UNIQUE(&#x552F;&#x4E00;&#x7D22;&#x5F15;)     ALTER TABLE <code>table_name</code> ADD UNIQUE (<code>column</code>)</li>
<li>INDEX(&#x666E;&#x901A;&#x7D22;&#x5F15;)     ALTER TABLE <code>table_name</code> ADD INDEX index_name ( <code>column</code> )</li>
<li>FULLTEXT(&#x5168;&#x6587;&#x7D22;&#x5F15;)      ALTER TABLE <code>table_name</code> ADD FULLTEXT ( <code>column</code> )</li>
<li>&#x7EC4;&#x5408;&#x7D22;&#x5F15;   ALTER TABLE <code>table_name</code> ADD INDEX index_name ( <code>column1</code>, <code>column2</code>, <code>column3</code> )</li>
</ul>
<p>Mysql&#x5404;&#x79CD;&#x7D22;&#x5F15;&#x533A;&#x522B;&#xFF1A;</p>
<ul>
<li>&#x666E;&#x901A;&#x7D22;&#x5F15;&#xFF1A;&#x6700;&#x57FA;&#x672C;&#x7684;&#x7D22;&#x5F15;&#xFF0C;&#x6CA1;&#x6709;&#x4EFB;&#x4F55;&#x9650;&#x5236;</li>
<li>&#x552F;&#x4E00;&#x7D22;&#x5F15;&#xFF1A;&#x4E0E;&quot;&#x666E;&#x901A;&#x7D22;&#x5F15;&quot;&#x7C7B;&#x4F3C;&#xFF0C;&#x4E0D;&#x540C;&#x7684;&#x5C31;&#x662F;&#xFF1A;&#x7D22;&#x5F15;&#x5217;&#x7684;&#x503C;&#x5FC5;&#x987B;&#x552F;&#x4E00;&#xFF0C;&#x4F46;&#x5141;&#x8BB8;&#x6709;&#x7A7A;&#x503C;&#x3002;</li>
<li>&#x4E3B;&#x952E;&#x7D22;&#x5F15;&#xFF1A;&#x5B83; &#x662F;&#x4E00;&#x79CD;&#x7279;&#x6B8A;&#x7684;&#x552F;&#x4E00;&#x7D22;&#x5F15;&#xFF0C;&#x4E0D;&#x5141;&#x8BB8;&#x6709;&#x7A7A;&#x503C;&#x3002;</li>
<li>&#x5168;&#x6587;&#x7D22;&#x5F15;&#xFF1A;&#x4EC5;&#x53EF;&#x7528;&#x4E8E; MyISAM &#x8868;&#xFF0C;&#x9488;&#x5BF9;&#x8F83;&#x5927;&#x7684;&#x6570;&#x636E;&#xFF0C;&#x751F;&#x6210;&#x5168;&#x6587;&#x7D22;&#x5F15;&#x5F88;&#x8017;&#x65F6;&#x597D;&#x7A7A;&#x95F4;&#x3002;</li>
<li>&#x7EC4;&#x5408;&#x7D22;&#x5F15;&#xFF1A;&#x4E3A;&#x4E86;&#x66F4;&#x591A;&#x7684;&#x63D0;&#x9AD8;mysql&#x6548;&#x7387;&#x53EF;&#x5EFA;&#x7ACB;&#x7EC4;&#x5408;&#x7D22;&#x5F15;&#xFF0C;&#x9075;&#x5FAA;&#x201D;&#x6700;&#x5DE6;&#x524D;&#x7F00;&#x201C;&#x539F;&#x5219;&#x3002;</li>
</ul>
<p><strong>3. Mysql &#x600E;&#x4E48;&#x5206;&#x8868;&#xFF0C;&#x4EE5;&#x53CA;&#x5206;&#x8868;&#x540E;&#x5982;&#x679C;&#x60F3;&#x6309;&#x6761;&#x4EF6;&#x5206;&#x9875;&#x67E5;&#x8BE2;&#x600E;&#x4E48;&#x529E;</strong></p>
<p>&#x5F53;&#x4E00;&#x5F20;&#x7684;&#x6570;&#x636E;&#x8FBE;&#x5230;&#x51E0;&#x767E;&#x4E07;&#x65F6;&#xFF0C;&#x4F60;&#x67E5;&#x8BE2;&#x4E00;&#x6B21;&#x6240;&#x82B1;&#x7684;&#x65F6;&#x95F4;&#x4F1A;&#x53D8;&#x591A;&#xFF0C;&#x5982;&#x679C;&#x6709;&#x8054;&#x5408;&#x67E5;&#x8BE2;&#x7684;&#x8BDD;&#xFF0C;&#x6211;&#x60F3;&#x6709;&#x53EF;&#x80FD;&#x4F1A;&#x6B7B;&#x5728;&#x90A3;&#x513F;&#x4E86;&#x3002;&#x5206;&#x8868;&#x7684;&#x76EE;&#x7684;&#x5C31;&#x5728;&#x4E8E;&#x6B64;&#xFF0C;&#x51CF;&#x5C0F;&#x6570;&#x636E;&#x5E93;&#x7684;&#x8D1F;&#x62C5;&#xFF0C;&#x7F29;&#x77ED;&#x67E5;&#x8BE2;&#x65F6;&#x95F4;&#x3002;</p>
<p>&#x5982;&#x4F55;&#x5206;&#x8868;&#xFF1F;</p>
<ul>
<li>&#x505A; mysql &#x96C6;&#x7FA4;&#xFF0C;&#x4F8B;&#x5982;&#xFF1A;&#x5229;&#x7528; mysql cluster &#xFF0C;mysql proxy&#xFF0C;mysql replication&#xFF0C;drdb&#x7B49;&#x7B49;</li>
<li>&#x9884;&#x5148;&#x4F30;&#x8BA1;&#x4F1A;&#x51FA;&#x73B0;&#x5927;&#x6570;&#x636E;&#x91CF;&#x5E76;&#x4E14;&#x8BBF;&#x95EE;&#x9891;&#x7E41;&#x7684;&#x8868;&#xFF0C;&#x5C06;&#x5176;&#x5206;&#x4E3A;&#x82E5;&#x5E72;&#x4E2A;&#x8868;</li>
<li>&#x5229;&#x7528; merge &#x5B58;&#x50A8;&#x5F15;&#x64CE;&#x6765;&#x5B9E;&#x73B0;&#x5206;&#x8868;</li>
</ul>
<p>&#x5206;&#x8868;&#x540E;&#x5982;&#x679C;&#x60F3;&#x6309;&#x6761;&#x4EF6;&#x5206;&#x9875;&#x67E5;&#x8BE2;&#x600E;&#x4E48;&#x529E;&#xFF1F;</p>
<ol>
<li>&#x5982;&#x679C;&#x53EA;&#x662F;&#x4E3A;&#x4E86;&#x5206;&#x9875;&#xFF0C;&#x53EF;&#x4EE5;&#x8003;&#x8651;&#x8FD9;&#x79CD;&#x5206;&#x8868;&#xFF0C;&#x5C31;&#x662F;&#x8868;&#x7684; id &#x662F;&#x8303;&#x56F4;&#x6027;&#x7684;&#xFF0C;&#x4E14;id&#x662F;&#x8FDE;&#x7EED;&#x7684;&#xFF0C;&#x6BD4;&#x5982;&#x7B2C;&#x4E00;&#x5F20;&#x8868; id &#x662F; 1 &#x5230; 10 &#x4E07;&#xFF0C;&#x7B2C;&#x4E8C;&#x5F20;&#x662F; 10 &#x4E07;&#x5230; 20 &#x4E07;&#xFF0C;&#x8FD9;&#x6837;&#x5206;&#x9875;&#x5E94;&#x8BE5;&#x6CA1;&#x4EC0;&#x4E48;&#x95EE;&#x9898;&#x3002;</li>
<li>&#x5982;&#x679C;&#x662F;&#x5176;&#x4ED6;&#x7684;&#x5206;&#x8868;&#x65B9;&#x5F0F;&#xFF0C;&#x5EFA;&#x8BAE;&#x7528; sphinx &#x5148;&#x5EFA;&#x7D22;&#x5F15;&#xFF0C;&#x7136;&#x540E;&#x67E5;&#x8BE2;&#x5206;&#x9875;</li>
<li>&#x6709;&#x635F;&#x670D;&#x52A1;&#xFF0C;&#x53EA;&#x7ED9;&#x4ED6;&#x67E5;&#x4E00;&#x5E74;&#x5185;&#x7684;&#x6570;&#x636E;&#xFF0C;&#x6216;&#x8005;&#x53EA;&#x5B58; 1kw &#x6761;&#x6570;&#x636E;&#x3002;&#x5EFA;&#x4E00;&#x4E2A;&#x8868;&#x5B58;&#x4E00;&#x5E74;&#x5185;&#x7684;&#x6570;&#x636E;&#xFF0C;&#x6BCF;&#x9694;&#x4E00;&#x4E2A;&#x6708;&#x628A;&#x8868;&#x6700;&#x65E7;&#x7684;&#x6570;&#x636E;&#x8FC1;&#x5230;&#x5206;&#x8868;&#x4E0A;&#x9762;&#x3002;&#x5982;&#x679C;&#x9700;&#x6C42;&#x65B9;&#x8981;&#x67E5;&#x6240;&#x6709;&#x6570;&#x636E;&#xFF0C;&#x8BA9;&#x4ED6;&#x81EA;&#x5DF1;&#x9009;&#x5E74;&#x4EFD;&#x53BB;&#x67E5;&#x3002;</li>
</ol>
<p>&#x5177;&#x4F53;&#x8BF7;&#x770B;&#xFF1A;<a href="http://blog.51yip.com/mysql/949.html" target="_blank" rel="external nofollow noopener noreferrer">http://blog.51yip.com/mysql/949.html</a></p>
<p><strong>4. &#x5206;&#x8868;&#x4E4B;&#x540E;&#x60F3;&#x8BA9;&#x4E00;&#x4E2A;id&#x591A;&#x4E2A;&#x8868;&#x662F;&#x81EA;&#x589E;&#x7684;&#xFF0C;&#x6548;&#x7387;&#x5B9E;&#x73B0;</strong></p>
<p>&#x591A;&#x4E2A;&#x8868;&#x4E4B;&#x95F4;&#x7684;&#x4E3B;&#x952E;&#x4E0D;&#x80FD;&#x7528;&#x6570;&#x636E;&#x5E93;&#x672C;&#x8EAB;&#x7684;&#x81EA;&#x589E;&#x4E3B;&#x952E;&#x6765;&#x652F;&#x6301;&#xFF0C;&#x56E0;&#x4E3A;&#x4E0D;&#x540C;&#x8868;&#x4E4B;&#x95F4;&#x751F;&#x6210;&#x7684;&#x4E3B;&#x952E;&#x4F1A;&#x91CD;&#x590D;&#x3002;&#x6240;&#x4EE5;&#x9700;&#x8981;&#x5176;&#x4ED6;&#x7684;&#x65B9;&#x5F0F;&#x83B7;&#x53D6;&#x4E3B;&#x952E;ID&#x3002;</p>
<p>&#xFF08;1&#xFF09;&#x901A;&#x8FC7; MySQL &#x8868;&#x751F;&#x6210; ID</p>
<p>&#x5728;&#x300A;&#x5173;&#x4E8E; MySQL &#x5206;&#x8868;&#x64CD;&#x4F5C;&#x7684;&#x7814;&#x7A76;&#x300B;&#x63D0;&#x5230;&#x4E86;&#x4E00;&#x79CD;&#x65B9;&#x6CD5;&#xFF1A;<br>
&#x5BF9;&#x4E8E;&#x63D2;&#x5165;&#x4E5F;&#x5C31;&#x662F; insert &#x64CD;&#x4F5C;&#xFF0C;&#x9996;&#x5148;&#x5C31;&#x662F;&#x83B7;&#x53D6;&#x552F;&#x4E00;&#x7684; id &#x4E86;&#xFF0C;&#x5C31;&#x9700;&#x8981;&#x4E00;&#x4E2A;&#x8868;&#x6765;&#x4E13;&#x95E8;&#x521B;&#x5EFA;id&#xFF0C;&#x63D2;&#x5165;&#x4E00;&#x6761;&#x8BB0;&#x5F55;&#xFF0C;&#x5E76;&#x83B7;&#x53D6;&#x6700;&#x540E;&#x63D2;&#x5165;&#x7684; ID&#x3002;</p>
<p>&#x8FD9;&#x79CD;&#x65B9;&#x6CD5;&#x6548;&#x679C;&#x5F88;&#x597D;&#xFF0C;&#x4F46;&#x662F;&#x5728;&#x9AD8;&#x5E76;&#x53D1;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;MySQL &#x7684; AUTO_INCREMENT &#x5C06;&#x5BFC;&#x81F4;&#x6574;&#x4E2A;&#x6570;&#x636E;&#x5E93;&#x6162;&#x3002;&#x5982;&#x679C;&#x5B58;&#x5728;&#x81EA;&#x589E;&#x5B57;&#x6BB5;&#xFF0C;MySQL &#x4F1A;&#x7EF4;&#x62A4;&#x4E00;&#x4E2A;&#x81EA;&#x589E;&#x9501;&#xFF0C;innodb &#x4F1A;&#x5728;&#x5185;&#x5B58;&#x91CC;&#x4FDD;&#x5B58;&#x4E00;&#x4E2A;&#x8BA1;&#x6570;&#x5668;&#x6765;&#x8BB0;&#x5F55;auto_increment &#x503C;&#xFF0C;&#x5F53;&#x63D2;&#x5165;&#x4E00;&#x4E2A;&#x65B0;&#x884C;&#x6570;&#x636E;&#x65F6;&#xFF0C;&#x5C31;&#x4F1A;&#x7528;&#x4E00;&#x4E2A;&#x8868;&#x9501;&#x6765;&#x9501;&#x4F4F;&#x8FD9;&#x4E2A;&#x8BA1;&#x6570;&#x5668;&#xFF0C;&#x76F4;&#x5230;&#x63D2;&#x5165;&#x7ED3;&#x675F;&#x3002;</p>
<p>&#xFF08;2&#xFF09;&#x901A;&#x8FC7; redis &#x751F;&#x6210; ID</p>
<p>&#xFF08;3&#xFF09;&#x961F;&#x5217;&#x65B9;&#x5F0F;</p>
<p>&#x4F7F;&#x7528;&#x961F;&#x5217;&#x670D;&#x52A1;&#xFF0C;&#x5982; redis&#x3001;memcacheq &#x7B49;&#x7B49;&#xFF0C;&#x5C06;&#x4E00;&#x5B9A;&#x91CF;&#x7684; ID &#x9884;&#x5206;&#x914D;&#x5728;&#x4E00;&#x4E2A;&#x961F;&#x5217;&#x91CC;&#xFF0C;&#x6BCF;&#x6B21;&#x63D2;&#x5165;&#x64CD;&#x4F5C;&#xFF0C;&#x5148;&#x4ECE;&#x961F;&#x5217;&#x4E2D;&#x83B7;&#x53D6;&#x4E00;&#x4E2A; ID&#xFF0C;&#x82E5;&#x63D2;&#x5165;&#x5931;&#x8D25;&#x7684;&#x8BDD;&#xFF0C;&#x5C06;&#x8BE5; ID &#x518D;&#x6B21;&#x6DFB;&#x52A0;&#x5230;&#x961F;&#x5217;&#x4E2D;&#xFF0C;&#x540C;&#x65F6;&#x76D1;&#x63A7;&#x961F;&#x5217;&#x6570;&#x91CF;&#xFF0C;&#x5F53;&#x5C0F;&#x4E8E;&#x9600;&#x503C;&#x65F6;&#xFF0C;&#x81EA;&#x52A8;&#x5411;&#x961F;&#x5217;&#x4E2D;&#x6DFB;&#x52A0;&#x5143;&#x7D20;&#x3002;<br>
&#x8FD9;&#x79CD;&#x65B9;&#x5F0F;&#x53EF;&#x4EE5;&#x6709;&#x89C4;&#x5212;&#x7684;&#x5BF9;ID&#x8FDB;&#x884C;&#x5206;&#x914D;&#xFF0C;&#x8FD8;&#x4F1A;&#x5E26;&#x6765;&#x7ECF;&#x6D4E;&#x6548;&#x5E94;&#xFF0C;&#x6BD4;&#x5982; &#xFF31;&#xFF31; &#x53F7;&#x7801;&#xFF0C;&#x5404;&#x79CD;&#x9753;&#x53F7;&#xFF0C;&#x660E;&#x7801;&#x6807;&#x4EF7;&#x3002;&#x5982;&#x7F51;&#x7AD9;&#x7684; userid, &#x5141;&#x8BB8; uid &#x767B;&#x9646;&#xFF0C;&#x63A8;&#x51FA;&#x5404;&#x79CD;&#x9753;&#x53F7;&#xFF0C;&#x660E;&#x7801;&#x6807;&#x4EF7;&#xFF0C;&#x5BF9;&#x4E8E;&#x666E;&#x901A;&#x7684;ID&#x6253;&#x4E71;&#x540E;&#x518D;&#x968F;&#x673A;&#x5206;&#x914D;&#x3002;</p>
<p>&#xFF08;5&#xFF09;oracle sequence : &#x57FA;&#x4E8E;&#x7B2C;&#x4E09;&#x65B9; oracle &#x7684; SEQ.NEXTVAL &#x6765;&#x83B7;&#x53D6;&#x4E00;&#x4E2A; ID &#x4F18;&#x52BF;&#xFF1A;&#x7B80;&#x5355;&#x53EF;&#x7528; &#x7F3A;&#x70B9;&#xFF1A;&#x9700;&#x8981;&#x4F9D;&#x8D56;&#x7B2C;&#x4E09;&#x65B9; oracle &#x6570;&#x636E;&#x5E93;</p>
<p>&#xFF08;6&#xFF09;mysql id &#x533A;&#x95F4;&#x9694;&#x79BB; : &#x4E0D;&#x540C;&#x5206;&#x5E93;&#x8BBE;&#x7F6E;&#x4E0D;&#x540C;&#x7684;&#x8D77;&#x59CB;&#x503C;&#x548C;&#x6B65;&#x957F;&#xFF0C;&#x6BD4;&#x5982; 2 &#x53F0; mysql&#xFF0C;&#x5C31;&#x53EF;&#x4EE5;&#x8BBE;&#x7F6E;&#x4E00;&#x53F0;&#x53EA;&#x751F;&#x6210;&#x5947;&#x6570;&#xFF0C;&#x53E6;&#x4E00;&#x53F0;&#x751F;&#x6210;&#x5076;&#x6570;. &#x6216;&#x8005; 1 &#x53F0;&#x7528; 0~10 &#x4EBF;&#xFF0C;&#x53E6;&#x4E00;&#x53F0;&#x7528; 10~20 &#x4EBF;. &#x4F18;&#x52BF;&#xFF1A;&#x5229;&#x7528; mysql &#x81EA;&#x589E;id &#x7F3A;&#x70B9;&#xFF1A;&#x8FD0;&#x7EF4;&#x6210;&#x672C;&#x6BD4;&#x8F83;&#x9AD8;&#xFF0C;&#x6570;&#x636E;&#x6269;&#x5BB9;&#x65F6;&#x9700;&#x8981;&#x91CD;&#x65B0;&#x8BBE;&#x7F6E;&#x6B65;&#x957F;&#x3002;</p>
<p>&#xFF08;7&#xFF09;&#x57FA;&#x4E8E;&#x6570;&#x636E;&#x5E93;&#x66F4;&#x65B0;&#xFF0B;&#x5185;&#x5B58;&#x5206;&#x914D;&#xFF1A; &#x5728;&#x6570;&#x636E;&#x5E93;&#x4E2D;&#x7EF4;&#x62A4;&#x4E00;&#x4E2A; ID&#xFF0C;&#x83B7;&#x53D6;&#x4E0B;&#x4E00;&#x4E2A; ID &#x65F6;&#xFF0C;&#x4F1A;&#x5BF9;&#x6570;&#x636E;&#x5E93;&#x8FDB;&#x884C;ID=ID+100 WHERE ID=XX&#xFF0C;&#x62FF;&#x5230; 100 &#x4E2A; ID &#x540E;&#xFF0C;&#x5728;&#x5185;&#x5B58;&#x4E2D;&#x8FDB;&#x884C;&#x5206;&#x914D; &#x4F18;&#x52BF;&#xFF1A;&#x7B80;&#x5355;&#x9AD8;&#x6548; &#x7F3A;&#x70B9;&#xFF1A;&#x65E0;&#x6CD5;&#x4FDD;&#x8BC1;&#x81EA;&#x589E;&#x987A;&#x5E8F;</p>
<p>&#x5177;&#x4F53;&#x8BF7;&#x770B;&#xFF1A;</p>
<ul>
<li><a href="http://www.ttlsa.com/mysql/mysql-table-to-solve-the-increment-id-scheme/" target="_blank" rel="external nofollow noopener noreferrer">http://www.ttlsa.com/mysql/mysql-table-to-solve-the-increment-id-scheme/</a></li>
<li><a href="http://blog.csdn.net/u010256841/article/details/56840743" target="_blank" rel="external nofollow noopener noreferrer">http://blog.csdn.net/u010256841/article/details/56840743</a></li>
</ul>
<p><strong>5. MySql&#x7684;&#x4E3B;&#x4ECE;&#x5B9E;&#x65F6;&#x5907;&#x4EFD;&#x540C;&#x6B65;&#x7684;&#x914D;&#x7F6E;&#xFF0C;&#x4EE5;&#x53CA;&#x539F;&#x7406;(&#x4ECE;&#x5E93;&#x8BFB;&#x4E3B;&#x5E93;&#x7684;binlog)&#xFF0C;&#x8BFB;&#x5199;&#x5206;&#x79BB;&#x3002;</strong></p>
<p>&#x5177;&#x4F53;&#x8BF7;&#x770B;&#xFF1A;</p>
<ul>
<li><a href="http://www.cnblogs.com/kyrin/p/5967619.html" target="_blank" rel="external nofollow noopener noreferrer">http://www.cnblogs.com/kyrin/p/5967619.html</a></li>
<li><a href="http://blog.csdn.net/jobjava/article/details/41420417" target="_blank" rel="external nofollow noopener noreferrer">http://blog.csdn.net/jobjava/article/details/41420417</a></li>
</ul>
<p><strong>6. &#x5199; SQL &#x8BED;&#x53E5;&#x548C; SQL &#x4F18;&#x5316;</strong></p>
<p>&#x5177;&#x4F53;&#x8BF7;&#x770B;&#xFF1A;</p>
<ul>
<li><a href="http://www.cnblogs.com/knowledgesea/p/3686105.html" target="_blank" rel="external nofollow noopener noreferrer">sql&#x8BED;&#x53E5;&#x7684;&#x4F18;&#x5316;&#x5206;&#x6790;</a></li>
<li><a href="http://www.cnblogs.com/ATree/archive/2011/02/13/sql_optimize_1.html" target="_blank" rel="external nofollow noopener noreferrer">&#x4F18;&#x5316;SQL&#x67E5;&#x8BE2;&#xFF1A;&#x5982;&#x4F55;&#x5199;&#x51FA;&#x9AD8;&#x6027;&#x80FD;SQL&#x8BED;&#x53E5;</a></li>
</ul>
<p><strong>7. &#x7D22;&#x5F15;&#x7684;&#x6570;&#x636E;&#x7ED3;&#x6784;&#xFF0C;B+&#x6811;</strong></p>
<p>&#x5177;&#x4F53;&#x8BF7;&#x770B;&#xFF1A;<a href="http://blog.jobbole.com/24006/" target="_blank" rel="external nofollow noopener noreferrer">MySQL&#x7D22;&#x5F15;&#x80CC;&#x540E;&#x7684;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x53CA;&#x7B97;&#x6CD5;&#x539F;&#x7406;</a></p>
<p><strong>8. &#x6570;&#x636E;&#x5E93;&#x7684;&#x9501;&#xFF1A;&#x884C;&#x9501;&#xFF0C;&#x8868;&#x9501;&#xFF1B;&#x4E50;&#x89C2;&#x9501;&#xFF0C;&#x60B2;&#x89C2;&#x9501;</strong></p>
<table>
<thead>
<tr>
<th>&#x6A21;&#x5F0F;</th>
<th>&#x884C;&#x9501;</th>
<th>&#x8868;&#x9501;</th>
<th>&#x9875;&#x9501;</th>
</tr>
</thead>
<tbody>
<tr>
<td>MyISAM</td>
<td></td>
<td>&#x221A;</td>
<td></td>
</tr>
<tr>
<td>BDB</td>
<td></td>
<td>&#x221A;</td>
<td>&#x221A;</td>
</tr>
<tr>
<td>InnoDB</td>
<td>&#x221A;</td>
<td>&#x221A;</td>
<td></td>
</tr>
</tbody>
</table>
<ul>
<li>&#x8868;&#x9501;&#xFF1A; &#x5F00;&#x9500;&#x5C0F;&#xFF0C;&#x52A0;&#x9501;&#x5FEB;&#xFF1B;&#x4E0D;&#x4F1A;&#x51FA;&#x73B0;&#x6B7B;&#x9501;&#xFF1B;&#x9501;&#x5B9A;&#x529B;&#x5EA6;&#x5927;&#xFF0C;&#x53D1;&#x751F;&#x9501;&#x51B2;&#x7A81;&#x6982;&#x7387;&#x9AD8;&#xFF0C;&#x5E76;&#x53D1;&#x5EA6;&#x6700;&#x4F4E;</li>
<li>&#x884C;&#x9501;&#xFF1A; &#x5F00;&#x9500;&#x5927;&#xFF0C;&#x52A0;&#x9501;&#x6162;&#xFF1B;&#x4F1A;&#x51FA;&#x73B0;&#x6B7B;&#x9501;&#xFF1B;&#x9501;&#x5B9A;&#x7C92;&#x5EA6;&#x5C0F;&#xFF0C;&#x53D1;&#x751F;&#x9501;&#x51B2;&#x7A81;&#x7684;&#x6982;&#x7387;&#x4F4E;&#xFF0C;&#x5E76;&#x53D1;&#x5EA6;&#x9AD8;</li>
<li>&#x9875;&#x9501;&#xFF1A; &#x5F00;&#x9500;&#x548C;&#x52A0;&#x9501;&#x901F;&#x5EA6;&#x4ECB;&#x4E8E;&#x8868;&#x9501;&#x548C;&#x884C;&#x9501;&#x4E4B;&#x95F4;&#xFF1B;&#x4F1A;&#x51FA;&#x73B0;&#x6B7B;&#x9501;&#xFF1B;&#x9501;&#x5B9A;&#x7C92;&#x5EA6;&#x4ECB;&#x4E8E;&#x8868;&#x9501;&#x548C;&#x884C;&#x9501;&#x4E4B;&#x95F4;&#xFF0C;&#x5E76;&#x53D1;&#x5EA6;&#x4E00;&#x822C;</li>
</ul>
<p>&#x8868;&#x9501;&#x66F4;&#x9002;&#x7528;&#x4E8E;&#x4EE5;&#x67E5;&#x8BE2;&#x4E3A;&#x4E3B;&#xFF0C;&#x53EA;&#x6709;&#x5C11;&#x91CF;&#x6309;&#x7D22;&#x5F15;&#x6761;&#x4EF6;&#x66F4;&#x65B0;&#x6570;&#x636E;&#x7684;&#x5E94;&#x7528;&#xFF1B;&#x884C;&#x9501;&#x66F4;&#x9002;&#x7528;&#x4E8E;&#x6709;&#x5927;&#x91CF;&#x6309;&#x7D22;&#x5F15;&#x6761;&#x4EF6;&#x5E76;&#x53D1;&#x66F4;&#x65B0;&#x5C11;&#x91CF;&#x4E0D;&#x540C;&#x6570;&#x636E;&#xFF0C;&#x540C;&#x65F6;&#x53C8;&#x6709;&#x5E76;&#x53D1;&#x67E5;&#x8BE2;&#x7684;&#x5E94;&#x7528;&#x3002;</p>
<p>&#x5177;&#x4F53;&#x8BF7;&#x770B;&#xFF1A;<a href="http://blog.itpub.net/11627468/viewspace-1788399/" target="_blank" rel="external nofollow noopener noreferrer">&#x6570;&#x636E;&#x5E93;&#x9501;&#xFF1A;&#x4E50;&#x89C2;&#x9501;&#x548C;&#x60B2;&#x89C2;&#x9501;&#xFF0C;&#x5171;&#x4EAB;&#x9501;&#x548C;&#x6392;&#x5B83;&#x9501;&#xFF0C;&#x884C;&#x7EA7;&#x9501;&#x548C;&#x8868;&#x7EA7;&#x9501; </a></p>
<p><strong>9. &#x6570;&#x636E;&#x5E93;&#x4E8B;&#x52A1;&#x7684;&#x51E0;&#x79CD;&#x7C92;&#x5EA6;</strong></p>
<p>&#x6570;&#x636E;&#x5E93;&#x8BBF;&#x95EE;&#x63A7;&#x5236;&#x7684;&#x7C92;&#x5EA6;&#x53EF;&#x5206;&#x4E3A;4&#x4E2A;&#x5C42;&#x6B21;,&#x5206;&#x522B;&#x662F;&#x6570;&#x636E;&#x5E93;&#x7EA7;&#x3001;&#x8868;&#x7EA7;&#x3001;&#x8BB0;&#x5F55;&#x7EA7;(&#x884C;&#x7EA7;)&#x548C;&#x5C5E;&#x6027;&#x7EA7;(&#x5B57;&#x6BB5;&#x7EA7;)</p>
<p>&#x5177;&#x4F53;&#x8BF7;&#x770B;&#xFF1A;<a href="http://www.cnblogs.com/zhouxuan323/p/5155473.html" target="_blank" rel="external nofollow noopener noreferrer">&#x6570;&#x636E;&#x5E93;&#x4E8B;&#x52A1;&#x7684;&#x56DB;&#x5927;&#x7279;&#x6027;</a></p>
<p><strong>10. &#x5173;&#x7CFB;&#x578B;&#x548C;&#x975E;&#x5173;&#x7CFB;&#x578B;&#x6570;&#x636E;&#x5E93;&#x533A;&#x522B;</strong></p>
<p>&#x5173;&#x7CFB;&#x578B;&#x6570;&#x636E;&#x5E93;&#x901A;&#x8FC7;&#x5916;&#x952E;&#x5173;&#x8054;&#x6765;&#x5EFA;&#x7ACB;&#x8868;&#x4E0E;&#x8868;&#x4E4B;&#x95F4;&#x7684;&#x5173;&#x7CFB;&#xFF0C;&#x975E;&#x5173;&#x7CFB;&#x578B;&#x6570;&#x636E;&#x5E93;&#x901A;&#x5E38;&#x6307;&#x6570;&#x636E;&#x4EE5;&#x5BF9;&#x8C61;&#x7684;&#x5F62;&#x5F0F;&#x5B58;&#x50A8;&#x5728;&#x6570;&#x636E;&#x5E93;&#x4E2D;&#xFF0C;&#x800C;&#x5BF9;&#x8C61;&#x4E4B;&#x95F4;&#x7684;&#x5173;&#x7CFB;&#x901A;&#x8FC7;&#x6BCF;&#x4E2A;&#x5BF9;&#x8C61;&#x81EA;&#x8EAB;&#x7684;&#x5C5E;&#x6027;&#x6765;&#x51B3;&#x5B9A;&#x3002;</p>
<p>&#x5F53;&#x524D;&#x4E3B;&#x6D41;&#x7684;&#x5173;&#x7CFB;&#x578B;&#x6570;&#x636E;&#x5E93;&#x6709; Oracle&#x3001;DB2&#x3001;Microsoft SQL Server&#x3001;Microsoft Access&#x3001;MySQL &#x7B49;&#x3002;</p>
<p>&#x975E;&#x5173;&#x7CFB;&#x578B;&#x6570;&#x636E;&#x5E93;&#x6709; NoSql&#x3001;Cloudant&#x3002;</p>
<p>nosql &#x548C;&#x5173;&#x7CFB;&#x578B;&#x6570;&#x636E;&#x5E93;&#x6BD4;&#x8F83;&#xFF1F;</p>
<p>&#x4F18;&#x70B9;&#xFF1A;</p>
<ul>
<li>1&#xFF09;&#x6210;&#x672C;&#xFF1A;nosql &#x6570;&#x636E;&#x5E93;&#x7B80;&#x5355;&#x6613;&#x90E8;&#x7F72;&#xFF0C;&#x57FA;&#x672C;&#x90FD;&#x662F;&#x5F00;&#x6E90;&#x8F6F;&#x4EF6;&#xFF0C;&#x4E0D;&#x9700;&#x8981;&#x50CF;&#x4F7F;&#x7528; oracle &#x90A3;&#x6837;&#x82B1;&#x8D39;&#x5927;&#x91CF;&#x6210;&#x672C;&#x8D2D;&#x4E70;&#x4F7F;&#x7528;&#xFF0C;&#x76F8;&#x6BD4;&#x5173;&#x7CFB;&#x578B;&#x6570;&#x636E;&#x5E93;&#x4EF7;&#x683C;&#x4FBF;&#x5B9C;&#x3002;</li>
<li>2&#xFF09;&#x67E5;&#x8BE2;&#x901F;&#x5EA6;&#xFF1A;nosql &#x6570;&#x636E;&#x5E93;&#x5C06;&#x6570;&#x636E;&#x5B58;&#x50A8;&#x4E8E;&#x7F13;&#x5B58;&#x4E4B;&#x4E2D;&#xFF0C;&#x5173;&#x7CFB;&#x578B;&#x6570;&#x636E;&#x5E93;&#x5C06;&#x6570;&#x636E;&#x5B58;&#x50A8;&#x5728;&#x786C;&#x76D8;&#x4E2D;&#xFF0C;&#x81EA;&#x7136;&#x67E5;&#x8BE2;&#x901F;&#x5EA6;&#x8FDC;&#x4E0D;&#x53CA; nosql &#x6570;&#x636E;&#x5E93;&#x3002;</li>
<li>3&#xFF09;&#x5B58;&#x50A8;&#x6570;&#x636E;&#x7684;&#x683C;&#x5F0F;&#xFF1A;nosql &#x7684;&#x5B58;&#x50A8;&#x683C;&#x5F0F;&#x662F; key,value &#x5F62;&#x5F0F;&#x3001;&#x6587;&#x6863;&#x5F62;&#x5F0F;&#x3001;&#x56FE;&#x7247;&#x5F62;&#x5F0F;&#x7B49;&#x7B49;&#xFF0C;&#x6240;&#x4EE5;&#x53EF;&#x4EE5;&#x5B58;&#x50A8;&#x57FA;&#x7840;&#x7C7B;&#x578B;&#x4EE5;&#x53CA;&#x5BF9;&#x8C61;&#x6216;&#x8005;&#x662F;&#x96C6;&#x5408;&#x7B49;&#x5404;&#x79CD;&#x683C;&#x5F0F;&#xFF0C;&#x800C;&#x6570;&#x636E;&#x5E93;&#x5219;&#x53EA;&#x652F;&#x6301;&#x57FA;&#x7840;&#x7C7B;&#x578B;&#x3002;</li>
<li>4&#xFF09;&#x6269;&#x5C55;&#x6027;&#xFF1A;&#x5173;&#x7CFB;&#x578B;&#x6570;&#x636E;&#x5E93;&#x6709;&#x7C7B;&#x4F3C; join &#x8FD9;&#x6837;&#x7684;&#x591A;&#x8868;&#x67E5;&#x8BE2;&#x673A;&#x5236;&#x7684;&#x9650;&#x5236;&#x5BFC;&#x81F4;&#x6269;&#x5C55;&#x5F88;&#x8270;&#x96BE;&#x3002;</li>
</ul>
<p>&#x7F3A;&#x70B9;&#xFF1A;</p>
<ul>
<li>1&#xFF09;&#x7EF4;&#x62A4;&#x7684;&#x5DE5;&#x5177;&#x548C;&#x8D44;&#x6599;&#x6709;&#x9650;&#xFF0C;&#x56E0;&#x4E3A; nosql &#x662F;&#x5C5E;&#x4E8E;&#x65B0;&#x7684;&#x6280;&#x672F;&#xFF0C;&#x4E0D;&#x80FD;&#x548C;&#x5173;&#x7CFB;&#x578B;&#x6570;&#x636E;&#x5E93;10&#x51E0;&#x5E74;&#x7684;&#x6280;&#x672F;&#x540C;&#x65E5;&#x800C;&#x8BED;&#x3002;</li>
<li>2&#xFF09;&#x4E0D;&#x63D0;&#x4F9B;&#x5BF9; sql &#x7684;&#x652F;&#x6301;&#xFF0C;&#x5982;&#x679C;&#x4E0D;&#x652F;&#x6301; sql &#x8FD9;&#x6837;&#x7684;&#x5DE5;&#x4E1A;&#x6807;&#x51C6;&#xFF0C;&#x5C06;&#x4EA7;&#x751F;&#x4E00;&#x5B9A;&#x7528;&#x6237;&#x7684;&#x5B66;&#x4E60;&#x548C;&#x4F7F;&#x7528;&#x6210;&#x672C;&#x3002;</li>
<li>3&#xFF09;&#x4E0D;&#x63D0;&#x4F9B;&#x5173;&#x7CFB;&#x578B;&#x6570;&#x636E;&#x5E93;&#x5BF9;&#x4E8B;&#x7269;&#x7684;&#x5904;&#x7406;&#x3002;</li>
</ul>
<p>&#x6BD4;&#x5982; mysql &#x4E0E; mongodb &#x7684;&#x5BF9;&#x6BD4;&#xFF1A;</p>
<div align="center">
<img data-original="/2017/05/07/java-interview-sql/1410763091_874088.png" class="lazy">
<img data-original="/2017/05/07/java-interview-sql/1410763099_785499.png" class="lazy">
</div>]]></content>
    
    <summary type="html">
    
      本篇汇总了 Java 面试题中数据库部分的知识点，正在持续添加中，方便复习之用......
    
    </summary>
    
      <category term="编程" scheme="http://ngudream.com/categories/%E7%BC%96%E7%A8%8B/"/>
    
      <category term="数据库" scheme="http://ngudream.com/categories/%E7%BC%96%E7%A8%8B/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="Java" scheme="http://ngudream.com/tags/Java/"/>
    
      <category term="MySql" scheme="http://ngudream.com/tags/MySql/"/>
    
  </entry>
  
  <entry>
    <title>android so 库兼容性</title>
    <link href="http://ngudream.com/2017/04/28/android-so-compatibility/"/>
    <id>http://ngudream.com/2017/04/28/android-so-compatibility/</id>
    <published>2017-04-28T13:05:50.000Z</published>
    <updated>2017-05-07T13:28:23.471Z</updated>
    
    <content type="html"><![CDATA[<p>Android &#x8BBE;&#x5907;&#x7684;CPU&#x7C7B;&#x578B;(&#x901A;&#x5E38;&#x79F0;&#x4E3A;&#x201D;ABIs&#x201D;)</p>
<ol>
<li>armeabiv-v7a: &#x7B2C;7&#x4EE3;&#x53CA;&#x4EE5;&#x4E0A;&#x7684; ARM &#x5904;&#x7406;&#x5668;&#x3002;2011&#x5E74;15&#x6708;&#x4EE5;&#x540E;&#x7684;&#x751F;&#x4EA7;&#x7684;&#x5927;&#x90E8;&#x5206;Android&#x8BBE;&#x5907;&#x90FD;&#x4F7F;&#x7528;&#x5B83;&#x3002;</li>
<li>arm64-v8a: &#x7B2C; 8 &#x4EE3;&#x3001;64 &#x4F4D; ARM &#x5904;&#x7406;&#x5668;&#xFF0C;&#x5F88;&#x5C11;&#x8BBE;&#x5907;&#xFF0C;&#x4E09;&#x661F; Galaxy S6 &#x662F;&#x5176;&#x4E2D;&#x4E4B;&#x4E00;&#x3002;</li>
<li>armeabi: &#x7B2C; 5 &#x4EE3;&#x3001;&#x7B2C; 6 &#x4EE3;&#x7684; ARM &#x5904;&#x7406;&#x5668;&#xFF0C;&#x65E9;&#x671F;&#x7684;&#x624B;&#x673A;&#x7528;&#x7684;&#x6BD4;&#x8F83;&#x591A;&#x3002;</li>
<li>x86: &#x5E73;&#x677F;&#x3001;&#x6A21;&#x62DF;&#x5668;&#x7528;&#x5F97;&#x6BD4;&#x8F83;&#x591A;&#x3002;</li>
<li>x86_64: 64 &#x4F4D;&#x7684;&#x5E73;&#x677F;&#x3002;</li>
</ol>
<h2 id="android-so&#x5E93;&#x7684;&#x517C;&#x5BB9;&#x6027;"><a class="header-anchor" href="#android-so&#x5E93;&#x7684;&#x517C;&#x5BB9;&#x6027;"></a>android so&#x5E93;&#x7684;&#x517C;&#x5BB9;&#x6027;</h2>
<p>&#x5BF9;&#x4E8E; CPU &#x6765;&#x8BF4;&#xFF0C;&#x4E0D;&#x540C;&#x7684;&#x67B6;&#x6784;&#x5E76;&#x4E0D;&#x610F;&#x5473;&#x7740;&#x4E00;&#x5B9A;&#x4E92;&#x4E0D;&#x517C;&#x5BB9;&#xFF0C;&#x6839;&#x636E;&#x76EE;&#x524D; Android &#x5171;&#x652F;&#x6301;&#x4E03;&#x79CD;&#x4E0D;&#x540C;&#x7C7B;&#x578B;&#x7684; CPU &#x67B6;&#x6784;&#xFF0C;&#x5176;&#x517C;&#x5BB9;&#x7279;&#x70B9;&#x53EF;&#x603B;&#x7ED3;&#x5982;&#x4E0B;&#xFF1A;</p>
<ul>
<li>armeabi &#x8BBE;&#x5907;&#x53EA;&#x517C;&#x5BB9; armeabi&#xFF1B;</li>
<li>armeabi-v7a &#x8BBE;&#x5907;&#x517C;&#x5BB9; armeabi-v7a&#x3001;armeabi&#xFF1B;</li>
<li>arm64-v8a &#x8BBE;&#x5907;&#x517C;&#x5BB9; arm64-v8a&#x3001;armeabi-v7a&#x3001;armeabi&#xFF1B;</li>
<li>X86 &#x8BBE;&#x5907;&#x517C;&#x5BB9; X86&#x3001;armeabi&#xFF1B;</li>
<li>X86_64 &#x8BBE;&#x5907;&#x517C;&#x5BB9; X86_64&#x3001;X86&#x3001;armeabi&#xFF1B;</li>
<li>mips64 &#x8BBE;&#x5907;&#x517C;&#x5BB9; mips64&#x3001;mips&#xFF1B;</li>
<li>mips &#x53EA;&#x517C;&#x5BB9; mips&#xFF1B;</li>
</ul>
<p>&#x6839;&#x636E;&#x4EE5;&#x4E0A;&#x7684;&#x517C;&#x5BB9;&#x603B;&#x7ED3;&#xFF0C;&#x6211;&#x4EEC;&#x8FD8;&#x53EF;&#x4EE5;&#x5F97;&#x5230;&#x4E00;&#x4E9B;&#x89C4;&#x5F8B;&#xFF1A;</p>
<ul>
<li>armeabi &#x7684; SO &#x6587;&#x4EF6;&#x57FA;&#x672C;&#x4E0A;&#x53EF;&#x4EE5;&#x8BF4;&#x662F;&#x4E07;&#x91D1;&#x6CB9;&#xFF0C;&#x5B83;&#x80FD;&#x8FD0;&#x884C;&#x5728;&#x9664;&#x4E86; mips &#x548C; mips64 &#x7684;&#x8BBE;&#x5907;&#x4E0A;&#xFF0C;&#x4F46;&#x5728;&#x975E; armeabi &#x8BBE;&#x5907;&#x4E0A;&#x8FD0;&#x884C;&#x6027;&#x80FD;&#x8FD8;&#x662F;&#x6709;&#x6240;&#x635F;&#x8017;&#xFF1B;</li>
<li>64 &#x4F4D;&#x7684; CPU &#x67B6;&#x6784;&#x603B;&#x80FD;&#x5411;&#x4E0B;&#x517C;&#x5BB9;&#x5176;&#x5BF9;&#x5E94;&#x7684; 32 &#x4F4D;&#x6307;&#x4EE4;&#x96C6;&#xFF0C;&#x5982;&#xFF1A;x86_64 &#x517C;&#x5BB9; X86&#xFF0C;arm64-v8a &#x517C;&#x5BB9; armeabi-v7a&#xFF0C;mips64 &#x517C;&#x5BB9; mips&#x3002;</li>
</ul>
<h2 id="app-&#x4E2D;&#x53EF;&#x80FD;&#x51FA;&#x9519;&#x7684;&#x5730;&#x65B9;"><a class="header-anchor" href="#app-&#x4E2D;&#x53EF;&#x80FD;&#x51FA;&#x9519;&#x7684;&#x5730;&#x65B9;"></a>App &#x4E2D;&#x53EF;&#x80FD;&#x51FA;&#x9519;&#x7684;&#x5730;&#x65B9;</h2>
<p>&#x5904;&#x7406; .so &#x6587;&#x4EF6;&#x65F6;&#x6709;&#x4E00;&#x6761;&#x7B80;&#x5355;&#x5374;&#x5E76;&#x4E0D;&#x77E5;&#x540D;&#x7684;&#x91CD;&#x8981;&#x6CD5;&#x5219;&#x3002;</p>
<p>&#x4F60;&#x5E94;&#x8BE5;&#x5C3D;&#x53EF;&#x80FD;&#x7684;&#x63D0;&#x4F9B;&#x4E13;&#x4E3A;&#x6BCF;&#x4E2A; ABI &#x4F18;&#x5316;&#x8FC7;&#x7684; .so &#x6587;&#x4EF6;&#xFF0C;&#x4F46;&#x8981;&#x4E48;&#x5168;&#x90E8;&#x652F;&#x6301;&#xFF0C;&#x8981;&#x4E48;&#x90FD;&#x4E0D;&#x652F;&#x6301;&#xFF1A;&#x4F60;&#x4E0D;&#x5E94;&#x8BE5;&#x6DF7;&#x5408;&#x7740;&#x4F7F;&#x7528;&#x3002;&#x4F60;&#x5E94;&#x8BE5;&#x4E3A;&#x6BCF;&#x4E2A; ABI &#x76EE;&#x5F55;&#x63D0;&#x4F9B;&#x5BF9;&#x5E94;&#x7684; .so &#x6587;&#x4EF6;&#x3002;</p>
<p>&#x5F53;&#x4E00;&#x4E2A;&#x5E94;&#x7528;&#x5B89;&#x88C5;&#x5728;&#x8BBE;&#x5907;&#x4E0A;&#xFF0C;&#x53EA;&#x6709;&#x8BE5;&#x8BBE;&#x5907;&#x652F;&#x6301;&#x7684; CPU &#x67B6;&#x6784;&#x5BF9;&#x5E94;&#x7684; .so &#x6587;&#x4EF6;&#x4F1A;&#x88AB;&#x5B89;&#x88C5;&#x3002;&#x5728; x86 &#x8BBE;&#x5907;&#x4E0A;&#xFF0C; libs/x86 &#x76EE;&#x5F55;&#x4E2D;&#x5982;&#x679C;&#x5B58;&#x5728; .so &#x6587;&#x4EF6;&#x7684;&#x8BDD;&#xFF0C;&#x4F1A;&#x88AB;&#x5B89;&#x88C5;&#xFF0C;&#x5982;&#x679C;&#x4E0D;&#x5B58;&#x5728;&#xFF0C;&#x5219;&#x4F1A;&#x9009;&#x62E9; armeabi-v7a &#x4E2D;&#x7684; .so &#x6587;&#x4EF6;&#xFF0C;&#x5982;&#x679C;&#x4E5F;&#x4E0D;&#x5B58;&#x5728;&#xFF0C;&#x5219;&#x9009;&#x62E9; armeabi &#x76EE;&#x5F55;&#x4E2D;&#x7684; .so &#x6587;&#x4EF6;&#xFF08;&#x56E0;&#x4E3A; x86 &#x8BBE;&#x5907;&#x4E5F;&#x652F;&#x6301;armeabi-v7a &#x548C; armeabi&#xFF09;&#x3002;</p>
<p>&#x5176;&#x4ED6;&#x5730;&#x65B9;&#x4E5F;&#x53EF;&#x80FD;&#x51FA;&#x9519;</p>
<p>&#x5F53;&#x4F60;&#x5F15;&#x5165;&#x4E00;&#x4E2A; .so &#x6587;&#x4EF6;&#x65F6;&#xFF0C;&#x4E0D;&#x6B62;&#x5F71;&#x54CD;&#x5230; CPU &#x67B6;&#x6784;&#x3002;&#x6211;&#x4ECE;&#x5176;&#x4ED6;&#x5F00;&#x53D1;&#x8005;&#x90A3;&#x91CC;&#x53EF;&#x4EE5;&#x770B;&#x5230;&#x4E00;&#x7CFB;&#x5217;&#x5E38;&#x89C1;&#x7684;&#x9519;&#x8BEF;&#xFF0C;&#x5176;&#x4E2D;&#x6700;&#x591A;&#x7684;&#x662F;&quot;UnsatisfiedLinkError&quot;&#xFF0C;&#x201C;dlopen: failed&#x201D; &#x4EE5;&#x53CA;&#x5176;&#x4ED6;&#x7C7B;&#x578B;&#x7684; crash &#x6216;&#x8005;&#x4F4E;&#x4E0B;&#x7684;&#x6027;&#x80FD;</p>
<h2 id="gradle-&#x7F16;&#x8BD1;"><a class="header-anchor" href="#gradle-&#x7F16;&#x8BD1;"></a>gradle &#x7F16;&#x8BD1;</h2>
<p>&#x73B0;&#x5728;&#x5F88;&#x591A; Android &#x7B2C;&#x4E09;&#x65B9; sdk &#x662F;&#x4EE5; aar &#x5F62;&#x5F0F;&#x63D0;&#x4F9B;&#x7684;&#xFF0C;&#x751A;&#x81F3;&#x662F;&#x8FDC;&#x7A0B; aar&#xFF0C;&#x5982;&#x679C;&#x8FD9;&#x4E2A; sdk &#x5BF9; abi &#x7684;&#x652F;&#x6301;&#x6BD4;&#x8F83;&#x5168;&#xFF0C;&#x53EF;&#x80FD;&#x4F1A;&#x5305;&#x542B; armeabi, armeabi-v7a,x86, arm64-v8a&#xFF0C;x86_64 &#x4E94;&#x79CD; abi&#xFF0C;&#x800C;&#x4F60;&#x5E94;&#x7528;&#x7684;&#x5176;&#x5B83; so &#x53EA;&#x652F;&#x6301;armeabi,armeabi-v7a&#xFF0C;x86 &#x4E09;&#x79CD;&#xFF0C;&#x76F4;&#x63A5;&#x5F15;&#x7528; sdk &#x7684; aar&#xFF0C;&#x4F1A;&#x81EA;&#x52A8;&#x7F16;&#x8BD1;&#x51FA;&#x652F;&#x6301; 5 &#x79CD; abi &#x7684;&#x5305;&#x3002;</p>
<p>&#x6BD4;&#x5982;&#x64AD;&#x653E; gif &#x52A8;&#x753B;&#x56FE;&#x7247;&#x7684;&#x7F72;&#x540D;&#x5F00;&#x6E90;&#x5E93;&#xFF1A;<a href="https://github.com/koral--/android-gif-drawable" target="_blank" rel="external nofollow noopener noreferrer">android-gif-drawable</a></p>
<pre><code>dependencies {
    compile &apos;pl.droidsonroids.gif:android-gif-drawable:1.2.7&apos;
}
</code></pre>
<p>&#x4F46;&#x6709;&#x65F6;&#x6211;&#x4EEC;&#x53EA;&#x9700;&#x8981;&#x5176;&#x4E2D;&#x67D0;&#x4E2A;&#x6216;&#x67D0;&#x51E0;&#x4E2A; abi &#x7684;&#x5206;&#x8FA8;&#x7387;&#xFF0C;&#x8FD9;&#x600E;&#x4E48;&#x5B9E;&#x73B0;&#x5462;&#xFF0C;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x4EE5;&#x4E0B;&#x65B9;&#x6CD5;&#xFF1A;</p>
<p>build.gradle &#x7684; android &#x91CC;&#x7684; defaultConfig &#x5185;&#x6DFB;&#x52A0;&#x5982;&#x4E0B;&#x5185;&#x5BB9;:</p>
<pre><code>defaultConfig {  
    ndk {  
        abiFilters &quot;armeabi&quot;, &quot;armeabi-v7a&quot;, &quot;x86&quot;  
    }  
}  
</code></pre>]]></content>
    
    <summary type="html">
    
      如果项目中使用到了 NDK，它将会生成 .so 文件。 Android 应用支持的 ABI 取决于 APK 中位于 lib/ABI 目录中的 .so 文件，其中 ABI 可能是上面说过的七种ABI中的一种。
    
    </summary>
    
      <category term="移动开发" scheme="http://ngudream.com/categories/%E7%A7%BB%E5%8A%A8%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="Android" scheme="http://ngudream.com/tags/Android/"/>
    
  </entry>
  
</feed>
